{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# GameHub Pro - Modern Gaming Platform\n\n## Overview\n\nGameHub Pro is a modern, responsive web-based gaming platform that offers real-time multiplayer games with an integrated points-based economy. The platform features user authentication, secure payment processing for point top-ups, and two core games: a Six-Color Challenge and an Aviator crash betting game. Built with a full-stack TypeScript architecture, the application provides a seamless gaming experience with live gameplay, real-time updates via WebSockets, and comprehensive user management.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React with TypeScript for type safety and modern development patterns\n- **Routing**: Wouter for lightweight client-side routing\n- **UI Components**: Radix UI primitives with shadcn/ui design system for consistent, accessible components\n- **Styling**: Tailwind CSS with CSS variables for theming and responsive design\n- **State Management**: TanStack Query (React Query) for server state management and caching\n- **Real-time Communication**: WebSocket integration for live game updates and multiplayer features\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js framework for API endpoints\n- **Language**: TypeScript with ES modules for modern JavaScript features\n- **API Design**: RESTful endpoints with WebSocket support for real-time features\n- **Session Management**: Express sessions with PostgreSQL storage for persistent user sessions\n- **Authentication**: Replit Auth integration with OpenID Connect for secure user authentication\n\n### Database Layer\n- **Database**: PostgreSQL for reliable data persistence\n- **ORM**: Drizzle ORM with Neon serverless database integration\n- **Schema Management**: Type-safe schema definitions with Zod validation\n- **Connection Pool**: Neon serverless connection pooling for optimal performance\n\n### Game Systems\n- **Six-Color Challenge**: Probability-based color matching game with tiered betting system\n- **Aviator Game**: Real-time multiplayer crash betting game with live multiplier mechanics\n- **Points Economy**: Integrated virtual currency system with secure transaction tracking\n- **Real-time Updates**: WebSocket-based live game state synchronization across all connected clients\n\n### Security and Authentication\n- **User Authentication**: OpenID Connect with Replit Auth for secure login flows\n- **Session Security**: HTTP-only cookies with secure session storage\n- **Password Security**: bcrypt hashing for sensitive data protection\n- **CSRF Protection**: Built-in session-based protection against cross-site request forgery\n\n### Development and Build System\n- **Build Tool**: Vite for fast development and optimized production builds\n- **Development Server**: Hot module replacement with Vite middleware integration\n- **TypeScript**: Strict type checking across frontend, backend, and shared schemas\n- **Code Organization**: Monorepo structure with shared types and utilities\n\n## External Dependencies\n\n### Database and Storage\n- **Neon Database**: Serverless PostgreSQL hosting with connection pooling\n- **Drizzle Kit**: Database migration and schema management tools\n\n### Authentication Services\n- **Replit Auth**: OpenID Connect provider for user authentication and identity management\n\n### Real-time Communication\n- **WebSocket (ws)**: Native WebSocket implementation for real-time game updates and multiplayer features\n\n### UI and Design System\n- **Radix UI**: Accessible component primitives for form controls, dialogs, and interactive elements\n- **Lucide React**: Consistent icon library for UI elements\n- **Tailwind CSS**: Utility-first CSS framework with PostCSS processing\n\n### Development Tools\n- **Replit Integration**: Development environment integration with Cartographer and runtime error handling\n- **ESBuild**: Fast bundling for production server builds\n- **TypeScript Compiler**: Type checking and compilation for the entire codebase\n\n### Form and Validation\n- **React Hook Form**: Performant form handling with minimal re-renders\n- **Zod**: Runtime type validation and schema parsing for API endpoints and database operations\n\n### Payment Processing\n- The architecture supports integration with payment gateways (PayPal, Stripe, Razorpay) for the points top-up system, with transaction tracking and status management built into the database schema.\n\n### Enhanced UI Features\n- **Casino-themed Statistics**: Enhanced Aviator game statistics with real-time player leaderboards, profit/loss tracking, and neon visual effects\n- **Responsive Design**: Desktop and mobile optimized layouts with collapsible sections for optimal user experience\n- **Live Player Tracking**: Real-time player count display and leaderboard with gold/silver/bronze highlighting for top performers\n- **Animated Visual Effects**: CSS animations for profit/loss changes, neon glows, and interactive elements\n\n### Recent Changes (August 14, 2025)\n- **Migration Complete**: Successfully migrated from Replit Agent to full Replit environment\n- **Database Setup**: PostgreSQL database provisioned and schema deployed with Drizzle migrations\n- **Package Management**: All required Node.js dependencies installed and verified\n- **Workflow Integration**: Application successfully running on Replit with Express server on port 5000\n- **Game Engine**: Aviator game engine running with real-time round generation and crash point calculations\n- **Authentication**: Replit Auth integration working with user sessions and API authentication\n- **Security Audit Preparation**: Received comprehensive security and reliability audit guidelines for future implementation\n- Enhanced Aviator game statistics section with casino-themed UI\n- Added real-time player leaderboards with profit/loss tracking\n- Implemented responsive design with mobile-optimized layouts\n- Added neon visual effects and smooth animations for better user engagement\n- **OTP Authentication System**: Completely implemented password-less authentication supporting Gmail and phone numbers\n- **Dual Authentication Support**: System now supports both OTP (JWT tokens) and legacy Replit Auth\n- **Security Features**: Rate limiting, OTP expiry, attempt limits, and secure token management\n- **Development Setup**: +91 default country code, console logging for OTP codes during development\n- **UI Enhancement**: Casino-themed OTP login page with real-time validation and user feedback\n\n### Recent Fixes (August 15, 2025)\n- **Database Schema Sync**: Fixed application startup failure by synchronizing database schema with `npm run db:push`\n- **Missing Tables**: Created aviator_bets and aviator_game_state tables that were missing from the database\n- **Game Engine**: Aviator game engine now starts successfully with proper database table access\n- **Application Status**: App successfully running on port 5000 with all database operations functional","size_bytes":6951},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n        // Gaming theme colors\n        dark: \"var(--dark)\",\n        surface: \"var(--surface)\",\n        \"surface-light\": \"var(--surface-light)\",\n        \"surface-lighter\": \"var(--surface-lighter)\",\n        \"casino-dark\": \"var(--casino-dark)\",\n        \"casino-navy\": \"var(--casino-navy)\",\n        \"casino-midnight\": \"var(--casino-midnight)\",\n        \n        // Neon colors\n        \"neon-green\": \"var(--neon-green)\",\n        \"neon-green-dim\": \"var(--neon-green-dim)\",\n        \"neon-red\": \"var(--neon-red)\",\n        \"neon-red-dim\": \"var(--neon-red-dim)\",\n        \"neon-gold\": \"var(--neon-gold)\",\n        \"neon-gold-dim\": \"var(--neon-gold-dim)\",\n        \"neon-blue\": \"var(--neon-blue)\",\n        \"neon-purple\": \"var(--neon-purple)\",\n        \"neon-orange\": \"var(--neon-orange)\",\n        \n        // Game state colors\n        success: \"var(--success)\",\n        warning: \"var(--warning)\",\n        danger: \"var(--danger)\",\n        info: \"var(--info)\",\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\"],\n        serif: [\"var(--font-serif)\"],\n        mono: [\"var(--font-mono)\"],\n        inter: [\"Inter\", \"sans-serif\"],\n      },\n      spacing: {\n        xs: \"var(--space-xs)\",\n        sm: \"var(--space-sm)\", \n        md: \"var(--space-md)\",\n        lg: \"var(--space-lg)\",\n        xl: \"var(--space-xl)\",\n        \"2xl\": \"var(--space-2xl)\",\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        \"accordion-up\": {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n        fly: {\n          \"0%\": { transform: \"translateX(-100px) translateY(50px) rotate(-10deg)\" },\n          \"100%\": { transform: \"translateX(calc(100vw + 100px)) translateY(-200px) rotate(15deg)\" },\n        },\n        pulse: {\n          \"0%\": { transform: \"scale(1)\" },\n          \"100%\": { transform: \"scale(1.05)\" },\n        },\n        slideIn: {\n          from: { opacity: \"0\", transform: \"translateY(20px)\" },\n          to: { opacity: \"1\", transform: \"translateY(0)\" },\n        },\n        \"neon-glow\": {\n          \"0%, 100%\": { \n            boxShadow: \"0 0 5px currentColor, 0 0 10px currentColor, 0 0 15px currentColor\",\n            filter: \"brightness(1)\"\n          },\n          \"50%\": { \n            boxShadow: \"0 0 10px currentColor, 0 0 20px currentColor, 0 0 30px currentColor\",\n            filter: \"brightness(1.2)\"\n          },\n        },\n        \"intense-glow\": {\n          \"0%, 100%\": { boxShadow: \"0 0 10px currentColor, 0 0 20px currentColor, 0 0 30px currentColor\" },\n          \"50%\": { boxShadow: \"0 0 20px currentColor, 0 0 40px currentColor, 0 0 60px currentColor\" },\n        },\n        \"multiplier-escalation\": {\n          \"0%\": { \n            transform: \"scale(1)\", \n            color: \"var(--neon-green)\",\n            textShadow: \"0 0 10px var(--neon-green)\"\n          },\n          \"25%\": { \n            transform: \"scale(1.1)\", \n            color: \"var(--neon-gold)\",\n            textShadow: \"0 0 15px var(--neon-gold)\"\n          },\n          \"50%\": { \n            transform: \"scale(1.2)\", \n            color: \"var(--neon-orange)\",\n            textShadow: \"0 0 20px var(--neon-orange)\"\n          },\n          \"75%\": { \n            transform: \"scale(1.3)\", \n            color: \"var(--neon-red)\",\n            textShadow: \"0 0 25px var(--neon-red)\"\n          },\n          \"100%\": { \n            transform: \"scale(1.4)\", \n            color: \"var(--neon-red)\",\n            textShadow: \"0 0 30px var(--neon-red)\"\n          },\n        },\n        \"plane-takeoff\": {\n          \"0%\": { \n            transform: \"translateX(-50px) translateY(20px) rotate(-5deg) scale(0.8)\",\n            opacity: \"0.7\"\n          },\n          \"100%\": { \n            transform: \"translateX(0px) translateY(0px) rotate(0deg) scale(1)\",\n            opacity: \"1\"\n          },\n        },\n        \"plane-crash\": {\n          \"0%\": { \n            transform: \"translateX(0px) translateY(0px) rotate(0deg)\",\n            filter: \"hue-rotate(0deg)\"\n          },\n          \"100%\": { \n            transform: \"translateX(50px) translateY(100px) rotate(45deg)\",\n            filter: \"hue-rotate(180deg)\",\n            opacity: \"0\"\n          },\n        },\n        \"cash-out-celebration\": {\n          \"0%\": { \n            transform: \"scale(1)\", \n            background: \"var(--success)\",\n            boxShadow: \"0 0 0 rgba(120, 255, 120, 0.7)\"\n          },\n          \"50%\": { \n            transform: \"scale(1.05)\", \n            background: \"var(--neon-green)\",\n            boxShadow: \"0 0 20px rgba(120, 255, 120, 0.7)\"\n          },\n          \"100%\": { \n            transform: \"scale(1)\", \n            background: \"var(--success)\",\n            boxShadow: \"0 0 0 rgba(120, 255, 120, 0.7)\"\n          },\n        },\n        \"warning-flash\": {\n          \"0%, 100%\": { backgroundColor: \"transparent\" },\n          \"50%\": { backgroundColor: \"rgba(255, 165, 0, 0.2)\" },\n        },\n        \"slide-up-fade\": {\n          \"0%\": { transform: \"translateY(20px)\", opacity: \"0\" },\n          \"100%\": { transform: \"translateY(0)\", opacity: \"1\" },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n        fly: \"fly 8s linear infinite\",\n        \"multiplier-pulse\": \"pulse 0.5s ease-in-out infinite alternate\",\n        \"slide-in\": \"slideIn 0.3s ease-out\",\n        \"neon-glow\": \"neon-glow 2s ease-in-out infinite\",\n        \"intense-glow\": \"intense-glow 1s ease-in-out infinite\",\n        \"multiplier-escalation\": \"multiplier-escalation 0.5s cubic-bezier(0.68, -0.55, 0.265, 1.55) infinite alternate\",\n        \"plane-takeoff\": \"plane-takeoff 0.5s cubic-bezier(0.4, 0, 0.2, 1)\",\n        \"plane-crash\": \"plane-crash 0.3s cubic-bezier(0.4, 0, 0.2, 1) forwards\",\n        \"cash-out-celebration\": \"cash-out-celebration 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n        \"warning-flash\": \"warning-flash 1s ease-in-out infinite\",\n        \"slide-up\": \"slide-up-fade 0.3s cubic-bezier(0.4, 0, 0.2, 1)\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":8161},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });","size_bytes":482},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/otpService.ts":{"content":"import { randomInt } from \"crypto\";\nimport { db } from \"./db\";\nimport { otpCodes, users } from \"@shared/schema\";\nimport { eq, and, lt, gt } from \"drizzle-orm\";\n\ninterface OtpServiceConfig {\n  emailProvider?: 'console' | 'sendgrid'; // We'll use console for now, can be extended\n  smsProvider?: 'console' | 'twilio'; // We'll use console for now, can be extended\n}\n\nexport class OtpService {\n  private config: OtpServiceConfig;\n\n  constructor(config: OtpServiceConfig = {}) {\n    this.config = {\n      emailProvider: 'console',\n      smsProvider: 'console',\n      ...config\n    };\n  }\n\n  // Generate a 6-digit OTP\n  private generateOtp(): string {\n    return randomInt(100000, 999999).toString();\n  }\n\n  // Validate email format (Gmail only for now)\n  private isValidEmail(email: string): boolean {\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@gmail\\.com$/;\n    return emailRegex.test(email);\n  }\n\n  // Validate phone format (simple international format)\n  private isValidPhone(phone: string): boolean {\n    const phoneRegex = /^\\+[1-9]\\d{1,14}$/; // E.164 format\n    return phoneRegex.test(phone);\n  }\n\n  // Check rate limiting (max 3 OTP requests per identifier in 5 minutes)\n  private async checkRateLimit(identifier: string, ipAddress: string): Promise<boolean> {\n    const fiveMinutesAgo = new Date(Date.now() - 5 * 60 * 1000);\n    \n    const recentOtps = await db\n      .select()\n      .from(otpCodes)\n      .where(\n        and(\n          eq(otpCodes.identifier, identifier),\n          gt(otpCodes.createdAt, fiveMinutesAgo)\n        )\n      );\n\n    return recentOtps.length < 3;\n  }\n\n  // Send OTP via email (console implementation for now)\n  private async sendEmailOtp(email: string, otp: string): Promise<boolean> {\n    try {\n      // For development, we'll just log to console\n      // In production, integrate with SendGrid, AWS SES, etc.\n      console.log(`\\n🔐 EMAIL OTP for ${email}: ${otp}`);\n      console.log(`📧 Please check server logs above for your OTP code\\n`);\n      \n      // Simulate email sending delay\n      await new Promise(resolve => setTimeout(resolve, 100));\n      \n      return true;\n    } catch (error) {\n      console.error('Failed to send email OTP:', error);\n      return false;\n    }\n  }\n\n  // Send OTP via SMS (console implementation for now)\n  private async sendSmsOtp(phone: string, otp: string): Promise<boolean> {\n    try {\n      // For development, we'll just log to console\n      // In production, integrate with Twilio, etc.\n      console.log(`\\n📱 SMS OTP for ${phone}: ${otp}`);\n      console.log(`📲 Please check server logs above for your OTP code\\n`);\n      \n      // Simulate SMS sending delay\n      await new Promise(resolve => setTimeout(resolve, 100));\n      \n      return true;\n    } catch (error) {\n      console.error('Failed to send SMS OTP:', error);\n      return false;\n    }\n  }\n\n  // Send OTP to email or phone\n  async sendOtp(\n    identifier: string,\n    type: 'email' | 'phone',\n    ipAddress: string\n  ): Promise<{ success: boolean; message: string }> {\n    try {\n      // Validate identifier format\n      if (type === 'email' && !this.isValidEmail(identifier)) {\n        return { success: false, message: 'Please enter a valid Gmail address' };\n      }\n      \n      if (type === 'phone' && !this.isValidPhone(identifier)) {\n        return { success: false, message: 'Please enter a valid phone number with country code (e.g., +1234567890)' };\n      }\n\n      // Check rate limiting\n      const canSend = await this.checkRateLimit(identifier, ipAddress);\n      if (!canSend) {\n        return { success: false, message: 'Too many OTP requests. Please wait 5 minutes before trying again.' };\n      }\n\n      // Generate OTP\n      const otp = this.generateOtp();\n      const expiresAt = new Date(Date.now() + 2 * 60 * 1000); // 2 minutes\n\n      // Store OTP in database\n      await db.insert(otpCodes).values({\n        identifier,\n        identifierType: type,\n        otp,\n        ipAddress,\n        expiresAt,\n      });\n\n      // Send OTP\n      let sent = false;\n      if (type === 'email') {\n        sent = await this.sendEmailOtp(identifier, otp);\n      } else {\n        sent = await this.sendSmsOtp(identifier, otp);\n      }\n\n      if (!sent) {\n        return { success: false, message: 'Failed to send OTP. Please try again.' };\n      }\n\n      return { \n        success: true, \n        message: `OTP sent! Check server console logs for your ${type === 'email' ? 'email' : 'SMS'} code. Valid for 2 minutes.` \n      };\n\n    } catch (error) {\n      console.error('Error sending OTP:', error);\n      return { success: false, message: 'Failed to send OTP. Please try again.' };\n    }\n  }\n\n  // Verify OTP and authenticate user\n  async verifyOtp(\n    identifier: string,\n    otp: string,\n    type: 'email' | 'phone'\n  ): Promise<{ \n    success: boolean; \n    message: string; \n    user?: any;\n    isNewUser?: boolean;\n  }> {\n    try {\n      // Find the most recent valid OTP for this identifier\n      const otpRecord = await db\n        .select()\n        .from(otpCodes)\n        .where(\n          and(\n            eq(otpCodes.identifier, identifier),\n            eq(otpCodes.identifierType, type),\n            eq(otpCodes.used, false),\n            gt(otpCodes.expiresAt, new Date())\n          )\n        )\n        .orderBy(otpCodes.createdAt)\n        .limit(1);\n\n      if (!otpRecord.length) {\n        return { success: false, message: 'Invalid or expired OTP. Please request a new one.' };\n      }\n\n      const record = otpRecord[0];\n\n      // Check attempts (max 3)\n      if ((record.attempts || 0) >= 3) {\n        await db\n          .update(otpCodes)\n          .set({ used: true })\n          .where(eq(otpCodes.id, record.id));\n        \n        return { success: false, message: 'Too many failed attempts. Please request a new OTP.' };\n      }\n\n      // Check OTP match\n      if (record.otp !== otp) {\n        await db\n          .update(otpCodes)\n          .set({ attempts: (record.attempts || 0) + 1 })\n          .where(eq(otpCodes.id, record.id));\n        \n        return { success: false, message: 'Invalid OTP. Please check and try again.' };\n      }\n\n      // Mark OTP as used\n      await db\n        .update(otpCodes)\n        .set({ used: true })\n        .where(eq(otpCodes.id, record.id));\n\n      // Find or create user\n      let user;\n      let isNewUser = false;\n\n      if (type === 'email') {\n        user = await db\n          .select()\n          .from(users)\n          .where(eq(users.email, identifier))\n          .limit(1);\n      } else {\n        user = await db\n          .select()\n          .from(users)\n          .where(eq(users.phone, identifier))\n          .limit(1);\n      }\n\n      if (!user.length) {\n        // Create new user\n        const newUserData = type === 'email' \n          ? { email: identifier }\n          : { phone: identifier };\n\n        const newUser = await db\n          .insert(users)\n          .values({\n            ...newUserData,\n            balance: 1000, // Welcome bonus\n            lastLoginAt: new Date(),\n          })\n          .returning();\n\n        user = newUser;\n        isNewUser = true;\n      } else {\n        // Update last login\n        await db\n          .update(users)\n          .set({ lastLoginAt: new Date() })\n          .where(eq(users.id, user[0].id));\n      }\n\n      return {\n        success: true,\n        message: isNewUser \n          ? 'Welcome! Your account has been created with 1000 bonus points!' \n          : 'Login successful!',\n        user: user[0],\n        isNewUser\n      };\n\n    } catch (error) {\n      console.error('Error verifying OTP:', error);\n      return { success: false, message: 'Failed to verify OTP. Please try again.' };\n    }\n  }\n\n  // Clean up expired OTPs (run periodically)\n  async cleanupExpiredOtps(): Promise<void> {\n    try {\n      await db\n        .delete(otpCodes)\n        .where(lt(otpCodes.expiresAt, new Date()));\n    } catch (error) {\n      console.error('Error cleaning up expired OTPs:', error);\n    }\n  }\n}\n\nexport const otpService = new OtpService();","size_bytes":8021},"server/replitAuth.ts":{"content":"import * as client from \"openid-client\";\nimport { Strategy, type VerifyFunction } from \"openid-client/passport\";\n\nimport passport from \"passport\";\nimport session from \"express-session\";\nimport type { Express, RequestHandler } from \"express\";\nimport memoize from \"memoizee\";\nimport connectPg from \"connect-pg-simple\";\nimport { storage } from \"./storage\";\n\nif (!process.env.REPLIT_DOMAINS) {\n  throw new Error(\"Environment variable REPLIT_DOMAINS not provided\");\n}\n\nconst getOidcConfig = memoize(\n  async () => {\n    return await client.discovery(\n      new URL(process.env.ISSUER_URL ?? \"https://replit.com/oidc\"),\n      process.env.REPL_ID!\n    );\n  },\n  { maxAge: 3600 * 1000 }\n);\n\nexport function getSession() {\n  const sessionTtl = 7 * 24 * 60 * 60 * 1000; // 1 week\n  const pgStore = connectPg(session);\n  const sessionStore = new pgStore({\n    conString: process.env.DATABASE_URL,\n    createTableIfMissing: false,\n    ttl: sessionTtl,\n    tableName: \"sessions\",\n  });\n  return session({\n    secret: process.env.SESSION_SECRET || \"default-dev-secret-change-in-production\",\n    store: sessionStore,\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n      httpOnly: true,\n      secure: process.env.NODE_ENV === \"production\",\n      maxAge: sessionTtl,\n    },\n  });\n}\n\nfunction updateUserSession(\n  user: any,\n  tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers\n) {\n  user.claims = tokens.claims();\n  user.access_token = tokens.access_token;\n  user.refresh_token = tokens.refresh_token;\n  user.expires_at = user.claims?.exp;\n}\n\nasync function upsertUser(\n  claims: any,\n) {\n  await storage.upsertUser({\n    id: claims[\"sub\"],\n    email: claims[\"email\"],\n    firstName: claims[\"first_name\"],\n    lastName: claims[\"last_name\"],\n    profileImageUrl: claims[\"profile_image_url\"],\n  });\n}\n\nexport async function setupAuth(app: Express) {\n  app.set(\"trust proxy\", 1);\n  app.use(getSession());\n  app.use(passport.initialize());\n  app.use(passport.session());\n\n  const config = await getOidcConfig();\n\n  const verify: VerifyFunction = async (\n    tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers,\n    verified: passport.AuthenticateCallback\n  ) => {\n    const user = {};\n    updateUserSession(user, tokens);\n    await upsertUser(tokens.claims());\n    verified(null, user);\n  };\n\n  for (const domain of process.env\n    .REPLIT_DOMAINS!.split(\",\")) {\n    const strategy = new Strategy(\n      {\n        name: `replitauth:${domain}`,\n        config,\n        scope: \"openid email profile offline_access\",\n        callbackURL: `https://${domain}/api/callback`,\n      },\n      verify,\n    );\n    passport.use(strategy);\n  }\n\n  passport.serializeUser((user: Express.User, cb) => cb(null, user));\n  passport.deserializeUser((user: Express.User, cb) => cb(null, user));\n\n  app.get(\"/api/login\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      prompt: \"login consent\",\n      scope: [\"openid\", \"email\", \"profile\", \"offline_access\"],\n    })(req, res, next);\n  });\n\n  app.get(\"/api/callback\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      successReturnToOrRedirect: \"/\",\n      failureRedirect: \"/api/login\",\n    })(req, res, next);\n  });\n\n  app.get(\"/api/logout\", (req, res) => {\n    req.logout(() => {\n      res.redirect(\n        client.buildEndSessionUrl(config, {\n          client_id: process.env.REPL_ID!,\n          post_logout_redirect_uri: `${req.protocol}://${req.hostname}`,\n        }).href\n      );\n    });\n  });\n}\n\nexport const isAuthenticated: RequestHandler = async (req, res, next) => {\n  const user = req.user as any;\n\n  if (!req.isAuthenticated() || !user.expires_at) {\n    return res.status(401).json({ message: \"Unauthorized\" });\n  }\n\n  const now = Math.floor(Date.now() / 1000);\n  if (now <= user.expires_at) {\n    return next();\n  }\n\n  const refreshToken = user.refresh_token;\n  if (!refreshToken) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n\n  try {\n    const config = await getOidcConfig();\n    const tokenResponse = await client.refreshTokenGrant(config, refreshToken);\n    updateUserSession(user, tokenResponse);\n    return next();\n  } catch (error) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n};\n","size_bytes":4298},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { WebSocketServer, WebSocket } from \"ws\";\nimport { storage } from \"./storage\";\nimport { setupAuth, isAuthenticated } from \"./replitAuth\";\nimport { insertTransactionSchema, insertGameRoundSchema, insertAviatorBetSchema, sendOtpSchema, verifyOtpSchema } from \"@shared/schema\";\nimport { randomUUID } from \"crypto\";\nimport { otpService } from \"./otpService\";\nimport jwt from \"jsonwebtoken\";\n\ninterface ExtendedWebSocket extends WebSocket {\n  userId?: string;\n  isAlive?: boolean;\n}\n\nlet currentAviatorRound: {\n  roundId: string;\n  status: 'betting' | 'flying' | 'crashed';\n  multiplier: number;\n  crashPoint: number;\n  startTime?: Date;\n} | null = null;\n\nlet aviatorInterval: NodeJS.Timeout | null = null;\nconst connectedClients = new Set<ExtendedWebSocket>();\n\n// JWT Secret for OTP authentication (in production, use environment variable)\nconst JWT_SECRET = process.env.JWT_SECRET || 'your-secret-key-change-in-production';\n\n// OTP Auth middleware for JWT tokens\nconst otpAuthenticated = (req: any, res: any, next: any) => {\n  const authHeader = req.headers.authorization;\n  const token = authHeader && authHeader.split(' ')[1]; // Bearer TOKEN\n\n  if (!token) {\n    return res.status(401).json({ message: 'Access token required' });\n  }\n\n  try {\n    const decoded = jwt.verify(token, JWT_SECRET) as any;\n    req.user = { id: decoded.userId, email: decoded.email, phone: decoded.phone };\n    next();\n  } catch (error) {\n    return res.status(403).json({ message: 'Invalid or expired token' });\n  }\n};\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Legacy Replit Auth setup (keeping for backwards compatibility)\n  await setupAuth(app);\n\n  // OTP Authentication endpoints\n  app.post('/api/auth/send-otp', async (req, res) => {\n    try {\n      const validatedData = sendOtpSchema.parse(req.body);\n      const clientIp = req.ip || req.connection.remoteAddress || '127.0.0.1';\n      \n      const result = await otpService.sendOtp(\n        validatedData.identifier,\n        validatedData.type,\n        clientIp\n      );\n\n      res.status(result.success ? 200 : 400).json(result);\n    } catch (error: any) {\n      console.error('Send OTP error:', error);\n      res.status(400).json({ \n        success: false, \n        message: error.message || 'Invalid request data' \n      });\n    }\n  });\n\n  app.post('/api/auth/verify-otp', async (req, res) => {\n    try {\n      const validatedData = verifyOtpSchema.parse(req.body);\n      \n      const result = await otpService.verifyOtp(\n        validatedData.identifier,\n        validatedData.otp,\n        validatedData.type\n      );\n\n      if (result.success && result.user) {\n        // Generate JWT token\n        const token = jwt.sign(\n          { \n            userId: result.user.id, \n            email: result.user.email, \n            phone: result.user.phone \n          },\n          JWT_SECRET,\n          { expiresIn: '7d' } // Token valid for 7 days\n        );\n\n        res.json({\n          ...result,\n          token,\n          user: result.user\n        });\n      } else {\n        res.status(400).json(result);\n      }\n    } catch (error: any) {\n      console.error('Verify OTP error:', error);\n      res.status(400).json({ \n        success: false, \n        message: error.message || 'Invalid request data' \n      });\n    }\n  });\n\n  // User info endpoint (supports both auth methods)\n  app.get('/api/auth/user', (req: any, res: any, next: any) => {\n    // Try OTP auth first, fallback to Replit auth\n    const authHeader = req.headers.authorization;\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      return otpAuthenticated(req, res, next);\n    } else {\n      return isAuthenticated(req, res, next);\n    }\n  }, async (req: any, res) => {\n    try {\n      // Handle both auth types\n      const userId = req.user.id || req.user.claims?.sub;\n      const user = await storage.getUser(userId);\n      \n      if (!user) {\n        return res.status(404).json({ message: \"User not found\" });\n      }\n\n      res.json(user);\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n      res.status(500).json({ message: \"Failed to fetch user\" });\n    }\n  });\n\n  // Balance routes (support both auth methods)\n  app.get('/api/balance', (req: any, res: any, next: any) => {\n    const authHeader = req.headers.authorization;\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      return otpAuthenticated(req, res, next);\n    } else {\n      return isAuthenticated(req, res, next);\n    }\n  }, async (req: any, res) => {\n    try {\n      const userId = req.user.id || req.user.claims?.sub;\n      const balance = await storage.getUserBalance(userId);\n      res.json({ balance });\n    } catch (error) {\n      console.error(\"Error fetching balance:\", error);\n      res.status(500).json({ message: \"Failed to fetch balance\" });\n    }\n  });\n\n  // Top-up routes (support both auth methods)\n  app.post('/api/topup', (req: any, res: any, next: any) => {\n    const authHeader = req.headers.authorization;\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      return otpAuthenticated(req, res, next);\n    } else {\n      return isAuthenticated(req, res, next);\n    }\n  }, async (req: any, res) => {\n    try {\n      const userId = req.user.id || req.user.claims?.sub;\n      const { amount, package: packageType } = req.body;\n\n      // Validate package\n      const packages: Record<string, { price: number; points: number }> = {\n        starter: { price: 50, points: 500 },\n        value: { price: 100, points: 1100 },\n        premium: { price: 200, points: 2500 },\n      };\n\n      if (!packages[packageType]) {\n        return res.status(400).json({ message: \"Invalid package\" });\n      }\n\n      const pkg = packages[packageType];\n      const user = await storage.getUser(userId);\n      if (!user) {\n        return res.status(404).json({ message: \"User not found\" });\n      }\n\n      // Create transaction\n      const transaction = await storage.createTransaction({\n        userId,\n        type: 'topup',\n        amount: pkg.points,\n        status: 'completed',\n        paymentId: randomUUID(),\n      });\n\n      // Update user balance\n      const newBalance = (user.balance || 0) + pkg.points;\n      await storage.updateUserBalance(userId, newBalance);\n\n      res.json({ success: true, transaction, newBalance });\n    } catch (error) {\n      console.error(\"Error processing top-up:\", error);\n      res.status(500).json({ message: \"Failed to process top-up\" });\n    }\n  });\n\n  // Game history routes\n  app.get('/api/game-history', (req: any, res: any, next: any) => {\n    const authHeader = req.headers.authorization;\n    if (authHeader && authHeader.startsWith('Bearer ')) {\n      return otpAuthenticated(req, res, next);\n    } else {\n      return isAuthenticated(req, res, next);\n    }\n  }, async (req: any, res) => {\n    try {\n      const userId = req.user.id || req.user.claims?.sub;\n      const gameHistory = await storage.getUserGameHistory(userId, 20);\n      res.json(gameHistory);\n    } catch (error) {\n      console.error(\"Error fetching game history:\", error);\n      res.status(500).json({ message: \"Failed to fetch game history\" });\n    }\n  });\n\n  // Transaction history routes\n  app.get('/api/transactions', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const transactions = await storage.getUserTransactions(userId, 20);\n      res.json(transactions);\n    } catch (error) {\n      console.error(\"Error fetching transactions:\", error);\n      res.status(500).json({ message: \"Failed to fetch transactions\" });\n    }\n  });\n\n  // Color game routes\n  app.post('/api/color-game/play', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const { selectedColors, betAmount } = req.body;\n\n      // Validate input\n      if (!Array.isArray(selectedColors) || selectedColors.length === 0 || selectedColors.length > 3) {\n        return res.status(400).json({ message: \"Invalid color selection\" });\n      }\n\n      // Validate bet amount based on selection count\n      const pricing: Record<number, { entry: number; win: number }> = {\n        1: { entry: 20, win: 40 },\n        2: { entry: 30, win: 60 },\n        3: { entry: 45, win: 90 }\n      };\n\n      const count = selectedColors.length;\n      if (betAmount !== pricing[count].entry) {\n        return res.status(400).json({ message: \"Invalid bet amount\" });\n      }\n\n      const user = await storage.getUser(userId);\n      if (!user || (user.balance || 0) < betAmount) {\n        return res.status(400).json({ message: \"Insufficient balance\" });\n      }\n\n      // Generate winning color (1-6)\n      const winningColor = Math.floor(Math.random() * 6) + 1;\n      const isWin = selectedColors.includes(winningColor);\n      const winAmount = isWin ? pricing[count].win : 0;\n\n      // Create game round\n      const gameRound = await storage.createGameRound({\n        userId,\n        gameType: 'color_game',\n        betAmount,\n        result: isWin ? 'win' : 'loss',\n        winAmount,\n        gameData: {\n          selectedColors,\n          winningColor,\n        },\n      });\n\n      // Create bet transaction\n      await storage.createTransaction({\n        userId,\n        type: 'game_bet',\n        amount: -betAmount,\n        gameType: 'color_game',\n        gameRoundId: gameRound.id,\n      });\n\n      // Create win transaction if won\n      if (isWin) {\n        await storage.createTransaction({\n          userId,\n          type: 'game_win',\n          amount: winAmount,\n          gameType: 'color_game',\n          gameRoundId: gameRound.id,\n        });\n      }\n\n      // Update user balance and stats\n      const newBalance = (user.balance || 0) - betAmount + winAmount;\n      await storage.updateUserBalance(userId, newBalance);\n      await storage.updateUserStats(userId, isWin, winAmount);\n\n      res.json({\n        result: isWin ? 'win' : 'loss',\n        winningColor,\n        winAmount,\n        newBalance,\n        gameRound,\n      });\n    } catch (error) {\n      console.error(\"Error playing color game:\", error);\n      res.status(500).json({ message: \"Failed to play color game\" });\n    }\n  });\n\n  // Aviator game routes\n  app.get('/api/aviator/current-game', async (req, res) => {\n    try {\n      if (!currentAviatorRound) {\n        return res.json({ game: null });\n      }\n\n      res.json({\n        game: {\n          roundId: currentAviatorRound.roundId,\n          status: currentAviatorRound.status,\n          multiplier: currentAviatorRound.multiplier,\n          startTime: currentAviatorRound.startTime,\n        }\n      });\n    } catch (error) {\n      console.error(\"Error fetching current aviator game:\", error);\n      res.status(500).json({ message: \"Failed to fetch current game\" });\n    }\n  });\n\n  app.post('/api/aviator/place-bet', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const { betAmount, autoCashOut, isNextRound } = req.body;\n\n      if (!currentAviatorRound) {\n        return res.status(400).json({ message: \"No active game\" });\n      }\n\n      // Allow betting during betting phase OR as next round bet during flying/crashed\n      const canBetCurrentRound = currentAviatorRound.status === 'betting';\n      const canBetNextRound = currentAviatorRound.status === 'flying' || currentAviatorRound.status === 'crashed';\n      \n      if (!canBetCurrentRound && !isNextRound) {\n        return res.status(400).json({ message: \"Betting closed for current round. Try betting for next round!\" });\n      }\n\n      if (isNextRound && !canBetNextRound) {\n        return res.status(400).json({ message: \"Next round betting not available yet\" });\n      }\n\n      if (betAmount < 10 || betAmount > 1000) {\n        return res.status(400).json({ message: \"Invalid bet amount\" });\n      }\n\n      const user = await storage.getUser(userId);\n      if (!user || (user.balance || 0) < betAmount) {\n        return res.status(400).json({ message: \"Insufficient balance\" });\n      }\n\n      // Check if user already has a bet for the current round or next round\n      const targetRoundId = isNextRound ? 'NEXT_ROUND' : currentAviatorRound.roundId;\n      const existingBet = await storage.getUserAviatorBet(userId, targetRoundId);\n      if (existingBet) {\n        return res.status(400).json({ message: `Already placed bet for ${isNextRound ? 'next' : 'current'} round` });\n      }\n\n      // Create aviator bet\n      const bet = await storage.createAviatorBet({\n        userId,\n        roundId: targetRoundId,\n        betAmount,\n        autoCashOut: autoCashOut || null,\n        isNextRoundBet: isNextRound || false,\n      });\n\n      // Create bet transaction\n      await storage.createTransaction({\n        userId,\n        type: 'game_bet',\n        amount: -betAmount,\n        gameType: 'aviator',\n        gameRoundId: targetRoundId,\n      });\n\n      // Update user balance\n      const newBalance = (user.balance || 0) - betAmount;\n      await storage.updateUserBalance(userId, newBalance);\n\n      // Broadcast bet to all clients\n      broadcastToClients({\n        type: isNextRound ? 'next_bet_placed' : 'bet_placed',\n        data: {\n          userId,\n          betAmount,\n          autoCashOut,\n          isNextRound,\n        }\n      });\n\n      res.json({ success: true, bet, newBalance });\n    } catch (error) {\n      console.error(\"Error placing aviator bet:\", error);\n      res.status(500).json({ message: \"Failed to place bet\" });\n    }\n  });\n\n  app.post('/api/aviator/cash-out', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n\n      if (!currentAviatorRound || currentAviatorRound.status !== 'flying') {\n        return res.status(400).json({ message: \"Cannot cash out now\" });\n      }\n\n      const bet = await storage.getUserAviatorBet(userId, currentAviatorRound.roundId);\n      if (!bet || bet.status !== 'active') {\n        return res.status(400).json({ message: \"No active bet found\" });\n      }\n\n      const winAmount = Math.floor(bet.betAmount * currentAviatorRound.multiplier);\n\n      // Update bet\n      await storage.updateAviatorBet(bet.id, {\n        cashOutAt: currentAviatorRound.multiplier.toString(),\n        status: 'cashed_out',\n        winAmount,\n      });\n\n      // Create win transaction\n      await storage.createTransaction({\n        userId,\n        type: 'game_win',\n        amount: winAmount,\n        gameType: 'aviator',\n        gameRoundId: currentAviatorRound.roundId,\n      });\n\n      const user = await storage.getUser(userId);\n      if (user) {\n        await storage.updateUserBalance(userId, (user.balance || 0) + winAmount);\n        await storage.updateUserStats(userId, true, winAmount);\n      }\n\n      // Broadcast cash out to all clients\n      broadcastToClients({\n        type: 'cash_out',\n        data: {\n          userId,\n          multiplier: currentAviatorRound.multiplier,\n          winAmount,\n        }\n      });\n\n      res.json({ success: true, winAmount, multiplier: currentAviatorRound.multiplier });\n    } catch (error) {\n      console.error(\"Error cashing out:\", error);\n      res.status(500).json({ message: \"Failed to cash out\" });\n    }\n  });\n\n  app.post('/api/aviator/take-winnings', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      \n      // Get the most recent cashed out bet for the user\n      const recentBets = await storage.getUserAviatorBets(userId, 5); // Get last 5 bets\n      const cashedOutBet = recentBets.find(bet => bet.status === 'cashed_out' && (bet.winAmount || 0) > 0);\n      \n      if (!cashedOutBet) {\n        return res.status(400).json({ message: \"No winnings to collect\" });\n      }\n\n      res.json({ \n        success: true, \n        winnings: cashedOutBet.winAmount,\n        betAmount: cashedOutBet.betAmount,\n        multiplier: parseFloat(cashedOutBet.cashOutAt || '0')\n      });\n    } catch (error) {\n      console.error(\"Error taking winnings:\", error);\n      res.status(500).json({ message: \"Failed to collect winnings\" });\n    }\n  });\n\n  const httpServer = createServer(app);\n\n  // WebSocket setup for Aviator game\n  const wss = new WebSocketServer({ server: httpServer, path: '/ws' });\n\n  wss.on('connection', (ws: ExtendedWebSocket) => {\n    ws.isAlive = true;\n    connectedClients.add(ws);\n\n    ws.on('pong', () => {\n      ws.isAlive = true;\n    });\n\n    ws.on('message', async (message) => {\n      try {\n        const data = JSON.parse(message.toString());\n        \n        if (data.type === 'join') {\n          ws.userId = data.userId;\n          \n          // Send current game state\n          if (currentAviatorRound) {\n            ws.send(JSON.stringify({\n              type: 'game_state',\n              data: {\n                roundId: currentAviatorRound.roundId,\n                status: currentAviatorRound.status,\n                multiplier: currentAviatorRound.multiplier,\n                startTime: currentAviatorRound.startTime,\n              }\n            }));\n          }\n        }\n      } catch (error) {\n        console.error('WebSocket message error:', error);\n      }\n    });\n\n    ws.on('close', () => {\n      connectedClients.delete(ws);\n    });\n  });\n\n  // Ping clients to keep connections alive\n  setInterval(() => {\n    wss.clients.forEach((ws: ExtendedWebSocket) => {\n      if (ws.isAlive === false) {\n        ws.terminate();\n        connectedClients.delete(ws);\n        return;\n      }\n      ws.isAlive = false;\n      ws.ping();\n    });\n  }, 30000);\n\n  function broadcastToClients(message: any) {\n    connectedClients.forEach((client) => {\n      if (client.readyState === WebSocket.OPEN) {\n        client.send(JSON.stringify(message));\n      }\n    });\n  }\n\n  // Aviator game loop\n  function startAviatorRound() {\n    const roundId = randomUUID();\n    const crashPoint = 1.01 + Math.random() * 8.99; // Random crash point between 1.01 and 10.00\n    \n    currentAviatorRound = {\n      roundId,\n      status: 'betting',\n      multiplier: 1.00,\n      crashPoint: parseFloat(crashPoint.toFixed(2)),\n    };\n\n    console.log(`Starting new Aviator round ${roundId} with crash point ${currentAviatorRound.crashPoint}x`);\n\n    // Process next round bets - convert them to current round bets\n    processNextRoundBets(roundId).catch(err => console.error('Error processing next round bets:', err));\n\n    // Save game state to database\n    storage.createAviatorGameState({\n      roundId,\n      status: 'betting',\n      multiplier: '1.00',\n      crashPoint: crashPoint.toString(),\n    }).catch(err => console.error('Error saving game state:', err));\n\n    // Broadcast betting phase\n    broadcastToClients({\n      type: 'round_started',\n      data: {\n        roundId,\n        status: 'betting',\n      }\n    });\n\n    // Betting phase (5 seconds)\n    setTimeout(() => {\n      if (currentAviatorRound?.roundId === roundId) {\n        startFlying();\n      }\n    }, 5000);\n  }\n\n  async function processNextRoundBets(newRoundId: string) {\n    try {\n      // Get all next round bets\n      const nextRoundBets = await storage.getAviatorBetsForRound('NEXT_ROUND');\n      \n      for (const bet of nextRoundBets) {\n        // Update the bet to use the new round ID and mark as active for current round\n        await storage.updateAviatorBet(bet.id, {\n          roundId: newRoundId,\n          isNextRoundBet: false,\n        });\n\n        // Broadcast that this next round bet is now active\n        broadcastToClients({\n          type: 'next_bet_activated',\n          data: {\n            userId: bet.userId,\n            betAmount: bet.betAmount,\n            autoCashOut: bet.autoCashOut,\n            roundId: newRoundId,\n          }\n        });\n      }\n\n      if (nextRoundBets.length > 0) {\n        console.log(`Processed ${nextRoundBets.length} next round bets for round ${newRoundId}`);\n      }\n    } catch (error) {\n      console.error('Error processing next round bets:', error);\n    }\n  }\n\n  function startFlying() {\n    if (!currentAviatorRound) return;\n\n    currentAviatorRound.status = 'flying';\n    currentAviatorRound.startTime = new Date();\n\n    // Update database\n    storage.updateAviatorGameState(currentAviatorRound.roundId, {\n      status: 'flying',\n      startTime: currentAviatorRound.startTime,\n    });\n\n    // Broadcast flying phase\n    broadcastToClients({\n      type: 'flying_started',\n      data: {\n        roundId: currentAviatorRound.roundId,\n        startTime: currentAviatorRound.startTime,\n      }\n    });\n\n    // Flying phase - increment multiplier\n    aviatorInterval = setInterval(async () => {\n      if (!currentAviatorRound || currentAviatorRound.status !== 'flying') {\n        if (aviatorInterval) clearInterval(aviatorInterval);\n        return;\n      }\n\n      currentAviatorRound.multiplier += 0.01;\n\n      // Check for crash\n      if (currentAviatorRound.multiplier >= currentAviatorRound.crashPoint) {\n        crashAviator();\n        return;\n      }\n\n      // Check for auto cash outs\n      const roundBets = await storage.getAviatorBetsForRound(currentAviatorRound.roundId);\n      for (const bet of roundBets) {\n        if (bet.status === 'active' && bet.autoCashOut && currentAviatorRound.multiplier >= parseFloat(bet.autoCashOut.toString())) {\n          const winAmount = Math.floor(bet.betAmount * currentAviatorRound.multiplier);\n          \n          await storage.updateAviatorBet(bet.id, {\n            cashOutAt: currentAviatorRound.multiplier.toString(),\n            status: 'cashed_out',\n            winAmount,\n          });\n\n          await storage.createTransaction({\n            userId: bet.userId,\n            type: 'game_win',\n            amount: winAmount,\n            gameType: 'aviator',\n            gameRoundId: currentAviatorRound.roundId,\n          });\n\n          const user = await storage.getUser(bet.userId);\n          if (user) {\n            await storage.updateUserBalance(bet.userId, (user.balance || 0) + winAmount);\n            await storage.updateUserStats(bet.userId, true, winAmount);\n          }\n\n          broadcastToClients({\n            type: 'auto_cash_out',\n            data: {\n              userId: bet.userId,\n              multiplier: currentAviatorRound.multiplier,\n              winAmount,\n            }\n          });\n        }\n      }\n\n      // Broadcast multiplier update\n      broadcastToClients({\n        type: 'multiplier_update',\n        data: {\n          multiplier: parseFloat(currentAviatorRound.multiplier.toFixed(2)),\n        }\n      });\n    }, 100);\n  }\n\n  async function crashAviator() {\n    if (aviatorInterval) {\n      clearInterval(aviatorInterval);\n      aviatorInterval = null;\n    }\n\n    if (!currentAviatorRound) return;\n\n    const finalMultiplier = currentAviatorRound.multiplier;\n    currentAviatorRound.status = 'crashed';\n\n    // Update database\n    await storage.updateAviatorGameState(currentAviatorRound.roundId, {\n      status: 'crashed',\n      multiplier: finalMultiplier.toString(),\n      crashTime: new Date(),\n    });\n\n    // Handle losing bets\n    const roundBets = await storage.getAviatorBetsForRound(currentAviatorRound.roundId);\n    for (const bet of roundBets) {\n      if (bet.status === 'active') {\n        await storage.updateAviatorBet(bet.id, {\n          status: 'crashed',\n        });\n\n        // Update user stats (loss)\n        await storage.updateUserStats(bet.userId, false);\n      }\n    }\n\n    // Broadcast crash\n    broadcastToClients({\n      type: 'crashed',\n      data: {\n        multiplier: parseFloat(finalMultiplier.toFixed(2)),\n        crashPoint: currentAviatorRound.crashPoint,\n      }\n    });\n\n    // Start new round after 3 seconds\n    setTimeout(() => {\n      startAviatorRound();\n    }, 3000);\n  }\n\n  // Admin authentication middleware\n  const isAdminAuthenticated = (req: any, res: any, next: any) => {\n    const token = req.headers.authorization?.split(' ')[1];\n    if (!token) {\n      return res.status(401).json({ message: 'Admin token required' });\n    }\n    \n    // Simple JWT verification (in production, use proper JWT library)\n    try {\n      // For demo purposes, using simple token validation\n      if (token === 'admin-demo-token') {\n        req.admin = { id: 'admin1', username: 'admin' };\n        next();\n      } else {\n        res.status(401).json({ message: 'Invalid admin token' });\n      }\n    } catch (error) {\n      res.status(401).json({ message: 'Invalid admin token' });\n    }\n  };\n\n  // Payment System Routes\n  app.get('/api/payment/qr-code', async (req, res) => {\n    try {\n      // Return default QR code info for UPI payment\n      return res.json({\n        merchantUpiId: 'ashishalamkabir@idfc',\n        qrCodeImage: null,\n        qrCodeData: 'upi://pay?pa=ashishalamkabir@idfc&pn=GameHub&cu=INR'\n      });\n    } catch (error) {\n      console.error('Error fetching QR code:', error);\n      res.status(500).json({ message: 'Failed to fetch QR code' });\n    }\n  });\n\n  app.post('/api/payment/create-request', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const { amount, upiId, pointsToCredit } = req.body;\n\n      if (!amount || amount < 10 || amount > 50000) {\n        return res.status(400).json({ message: 'Invalid amount' });\n      }\n\n      if (!upiId) {\n        return res.status(400).json({ message: 'UPI ID is required' });\n      }\n\n      // Store user's UPI ID for future withdrawals\n      await storage.updateUserUpiId(userId, upiId);\n\n      // Create payment request\n      const paymentRequest = await storage.createPaymentRequest({\n        userId,\n        amount: amount.toString(),\n        pointsToCredit,\n        paymentMethod: 'upi',\n        payerUpiId: upiId,\n        status: 'pending',\n      });\n\n      res.json({ success: true, paymentRequest });\n    } catch (error) {\n      console.error('Error creating payment request:', error);\n      res.status(500).json({ message: 'Failed to create payment request' });\n    }\n  });\n\n  app.get('/api/payment/requests', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const requests = await storage.getUserPaymentRequests(userId);\n      res.json(requests);\n    } catch (error) {\n      console.error('Error fetching payment requests:', error);\n      res.status(500).json({ message: 'Failed to fetch payment requests' });\n    }\n  });\n\n  // Withdrawal Routes\n  app.post('/api/withdrawal/create-request', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const { pointsToWithdraw, upiId, withdrawalAmount } = req.body;\n\n      if (!pointsToWithdraw || pointsToWithdraw < 10) {\n        return res.status(400).json({ message: 'Minimum withdrawal is 10 points' });\n      }\n\n      if (!upiId) {\n        return res.status(400).json({ message: 'UPI ID is required' });\n      }\n\n      // Check user balance\n      const user = await storage.getUser(userId);\n      if (!user || (user.balance || 0) < pointsToWithdraw) {\n        return res.status(400).json({ message: 'Insufficient balance' });\n      }\n\n      // Create withdrawal request\n      const withdrawalRequest = await storage.createWithdrawalRequest({\n        userId,\n        pointsToWithdraw,\n        withdrawalAmount: withdrawalAmount.toString(),\n        recipientUpiId: upiId,\n        status: 'pending',\n      });\n\n      // Deduct points temporarily (will be restored if rejected)\n      await storage.updateUserBalance(userId, (user.balance || 0) - pointsToWithdraw);\n\n      res.json({ success: true, withdrawalRequest });\n    } catch (error) {\n      console.error('Error creating withdrawal request:', error);\n      res.status(500).json({ message: 'Failed to create withdrawal request' });\n    }\n  });\n\n  app.get('/api/withdrawal/requests', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user.claims.sub;\n      const requests = await storage.getUserWithdrawalRequests(userId);\n      res.json(requests);\n    } catch (error) {\n      console.error('Error fetching withdrawal requests:', error);\n      res.status(500).json({ message: 'Failed to fetch withdrawal requests' });\n    }\n  });\n\n  // Admin Routes\n  app.post('/api/admin/login', async (req, res) => {\n    try {\n      const { username, password } = req.body;\n      \n      // Simple demo authentication (use proper auth in production)\n      if (username === 'admin' && password === 'admin123') {\n        res.json({ \n          success: true, \n          token: 'admin-demo-token',\n          user: { username: 'admin', role: 'admin' }\n        });\n      } else {\n        res.status(401).json({ message: 'Invalid credentials' });\n      }\n    } catch (error) {\n      console.error('Admin login error:', error);\n      res.status(500).json({ message: 'Login failed' });\n    }\n  });\n\n  app.get('/api/admin/dashboard/stats', isAdminAuthenticated, async (req, res) => {\n    try {\n      const stats = await storage.getAdminDashboardStats();\n      res.json(stats);\n    } catch (error) {\n      console.error('Error fetching admin stats:', error);\n      res.status(500).json({ message: 'Failed to fetch stats' });\n    }\n  });\n\n  app.get('/api/admin/payments/pending', isAdminAuthenticated, async (req, res) => {\n    try {\n      const pendingPayments = await storage.getPendingPayments();\n      res.json(pendingPayments);\n    } catch (error) {\n      console.error('Error fetching pending payments:', error);\n      res.status(500).json({ message: 'Failed to fetch pending payments' });\n    }\n  });\n\n  app.post('/api/admin/payments/:id/approve', isAdminAuthenticated, async (req: any, res) => {\n    try {\n      const paymentId = req.params.id;\n      const adminId = req.admin.id;\n\n      const payment = await storage.approvePayment(paymentId, adminId);\n      if (!payment) {\n        return res.status(404).json({ message: 'Payment not found' });\n      }\n\n      // Credit points to user\n      const user = await storage.getUser(payment.userId);\n      if (user) {\n        const newBalance = (user.balance || 0) + payment.pointsToCredit;\n        await storage.updateUserBalance(payment.userId, newBalance);\n      }\n\n      res.json({ success: true, payment });\n    } catch (error) {\n      console.error('Error approving payment:', error);\n      res.status(500).json({ message: 'Failed to approve payment' });\n    }\n  });\n\n  app.get('/api/admin/withdrawals/pending', isAdminAuthenticated, async (req, res) => {\n    try {\n      const pendingWithdrawals = await storage.getPendingWithdrawals();\n      res.json(pendingWithdrawals);\n    } catch (error) {\n      console.error('Error fetching pending withdrawals:', error);\n      res.status(500).json({ message: 'Failed to fetch pending withdrawals' });\n    }\n  });\n\n  app.post('/api/admin/withdrawals/:id/complete', isAdminAuthenticated, async (req: any, res) => {\n    try {\n      const withdrawalId = req.params.id;\n      const adminId = req.admin.id;\n\n      const withdrawal = await storage.completeWithdrawal(withdrawalId, adminId);\n      if (!withdrawal) {\n        return res.status(404).json({ message: 'Withdrawal not found' });\n      }\n\n      res.json({ success: true, withdrawal });\n    } catch (error) {\n      console.error('Error completing withdrawal:', error);\n      res.status(500).json({ message: 'Failed to complete withdrawal' });\n    }\n  });\n\n  app.get('/api/admin/config/:key', isAdminAuthenticated, async (req, res) => {\n    try {\n      const { key } = req.params;\n      \n      // Default values\n      const defaults: { [key: string]: any } = {\n        'topup-rate': { rate: 10 }, // 10 points per ₹1\n        'withdrawal-rate': { rate: 0.08 }, // ₹0.08 per point\n      };\n\n      res.json(defaults[key] || { value: null });\n    } catch (error) {\n      console.error('Error fetching config:', error);\n      res.status(500).json({ message: 'Failed to fetch config' });\n    }\n  });\n\n  // Start first aviator round immediately\n  console.log('Starting Aviator game engine...');\n  startAviatorRound();\n\n  return httpServer;\n}\n","size_bytes":31946},"server/storage.ts":{"content":"import {\n  users,\n  transactions,\n  gameRounds,\n  aviatorGameState,\n  aviatorBets,\n  otpCodes,\n  paymentRequests,\n  withdrawalRequests,\n  type User,\n  type UpsertUser,\n  type InsertTransaction,\n  type Transaction,\n  type InsertGameRound,\n  type GameRound,\n  type InsertAviatorGameState,\n  type AviatorGameState,\n  type InsertAviatorBet,\n  type AviatorBet,\n  type InsertOtpCode,\n  type OtpCode,\n} from \"@shared/schema\";\nimport { db } from \"./db\";\nimport { eq, desc, and, sql } from \"drizzle-orm\";\n\nexport interface IStorage {\n  // User operations (supports both Replit Auth and OTP Auth)\n  getUser(id: string): Promise<User | undefined>;\n  getUserByEmail(email: string): Promise<User | undefined>;\n  getUserByPhone(phone: string): Promise<User | undefined>;\n  upsertUser(user: UpsertUser): Promise<User>;\n  \n  // Balance operations\n  updateUserBalance(userId: string, amount: number): Promise<void>;\n  getUserBalance(userId: string): Promise<number>;\n  \n  // Transaction operations\n  createTransaction(transaction: InsertTransaction): Promise<Transaction>;\n  getUserTransactions(userId: string, limit?: number): Promise<Transaction[]>;\n  \n  // Game operations\n  createGameRound(gameRound: InsertGameRound): Promise<GameRound>;\n  getUserGameHistory(userId: string, limit?: number): Promise<GameRound[]>;\n  updateUserStats(userId: string, won: boolean, winAmount?: number): Promise<void>;\n  \n  // Aviator game operations\n  createAviatorGameState(gameState: InsertAviatorGameState): Promise<AviatorGameState>;\n  updateAviatorGameState(roundId: string, updates: Partial<AviatorGameState>): Promise<void>;\n  getCurrentAviatorGame(): Promise<AviatorGameState | undefined>;\n  createAviatorBet(bet: InsertAviatorBet): Promise<AviatorBet>;\n  updateAviatorBet(id: string, updates: Partial<AviatorBet>): Promise<void>;\n  getAviatorBetsForRound(roundId: string): Promise<AviatorBet[]>;\n  getUserAviatorBet(userId: string, roundId: string): Promise<AviatorBet | undefined>;\n  getUserAviatorBets(userId: string, limit?: number): Promise<AviatorBet[]>;\n}\n\nexport class DatabaseStorage implements IStorage {\n  // User operations\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user;\n  }\n\n  async getUserByEmail(email: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.email, email));\n    return user;\n  }\n\n  async getUserByPhone(phone: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.phone, phone));\n    return user;\n  }\n\n  async upsertUser(userData: UpsertUser): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values(userData)\n      .onConflictDoUpdate({\n        target: users.id,\n        set: {\n          ...userData,\n          updatedAt: new Date(),\n        },\n      })\n      .returning();\n    return user;\n  }\n\n  // Balance operations\n  async updateUserBalance(userId: string, amount: number): Promise<void> {\n    await db\n      .update(users)\n      .set({ \n        balance: amount,\n        updatedAt: new Date(),\n      })\n      .where(eq(users.id, userId));\n  }\n\n  async getUserBalance(userId: string): Promise<number> {\n    const [user] = await db\n      .select({ balance: users.balance })\n      .from(users)\n      .where(eq(users.id, userId));\n    return user?.balance || 0;\n  }\n\n  // Transaction operations\n  async createTransaction(transaction: InsertTransaction): Promise<Transaction> {\n    const [newTransaction] = await db\n      .insert(transactions)\n      .values(transaction)\n      .returning();\n    return newTransaction;\n  }\n\n  async getUserTransactions(userId: string, limit: number = 10): Promise<Transaction[]> {\n    return await db\n      .select()\n      .from(transactions)\n      .where(eq(transactions.userId, userId))\n      .orderBy(desc(transactions.createdAt))\n      .limit(limit);\n  }\n\n  // Game operations\n  async createGameRound(gameRound: InsertGameRound): Promise<GameRound> {\n    const [newGameRound] = await db\n      .insert(gameRounds)\n      .values(gameRound)\n      .returning();\n    return newGameRound;\n  }\n\n  async getUserGameHistory(userId: string, limit: number = 10): Promise<GameRound[]> {\n    return await db\n      .select()\n      .from(gameRounds)\n      .where(eq(gameRounds.userId, userId))\n      .orderBy(desc(gameRounds.createdAt))\n      .limit(limit);\n  }\n\n  async updateUserStats(userId: string, won: boolean, winAmount: number = 0): Promise<void> {\n    const user = await this.getUser(userId);\n    if (!user) return;\n\n    await db\n      .update(users)\n      .set({\n        gamesPlayed: (user.gamesPlayed || 0) + 1,\n        totalWinnings: won ? (user.totalWinnings || 0) + winAmount : (user.totalWinnings || 0),\n        updatedAt: new Date(),\n      })\n      .where(eq(users.id, userId));\n  }\n\n  // Aviator game operations\n  async createAviatorGameState(gameState: InsertAviatorGameState): Promise<AviatorGameState> {\n    const [newGameState] = await db\n      .insert(aviatorGameState)\n      .values(gameState)\n      .returning();\n    return newGameState;\n  }\n\n  async updateAviatorGameState(roundId: string, updates: Partial<AviatorGameState>): Promise<void> {\n    await db\n      .update(aviatorGameState)\n      .set(updates)\n      .where(eq(aviatorGameState.roundId, roundId));\n  }\n\n  async getCurrentAviatorGame(): Promise<AviatorGameState | undefined> {\n    const [currentGame] = await db\n      .select()\n      .from(aviatorGameState)\n      .orderBy(desc(aviatorGameState.createdAt))\n      .limit(1);\n    return currentGame;\n  }\n\n  async createAviatorBet(bet: InsertAviatorBet): Promise<AviatorBet> {\n    const [newBet] = await db\n      .insert(aviatorBets)\n      .values(bet)\n      .returning();\n    return newBet;\n  }\n\n  async updateAviatorBet(id: string, updates: Partial<AviatorBet>): Promise<void> {\n    await db\n      .update(aviatorBets)\n      .set(updates)\n      .where(eq(aviatorBets.id, id));\n  }\n\n  async getAviatorBetsForRound(roundId: string): Promise<AviatorBet[]> {\n    return await db\n      .select()\n      .from(aviatorBets)\n      .where(eq(aviatorBets.roundId, roundId));\n  }\n\n  async getUserAviatorBet(userId: string, roundId: string): Promise<AviatorBet | undefined> {\n    const [bet] = await db\n      .select()\n      .from(aviatorBets)\n      .where(and(eq(aviatorBets.userId, userId), eq(aviatorBets.roundId, roundId)));\n    return bet;\n  }\n\n  async getUserAviatorBets(userId: string, limit: number = 10): Promise<AviatorBet[]> {\n    return await db\n      .select()\n      .from(aviatorBets)\n      .where(eq(aviatorBets.userId, userId))\n      .orderBy(desc(aviatorBets.createdAt))\n      .limit(limit);\n  }\n\n  // Admin and Payment System Methods\n  async updateUserUpiId(userId: string, upiId: string): Promise<void> {\n    await db.update(users)\n      .set({ upiId })\n      .where(eq(users.id, userId));\n  }\n\n  async createPaymentRequest(data: any): Promise<any> {\n    const [result] = await db.insert(paymentRequests).values(data).returning();\n    return result;\n  }\n\n  async getUserPaymentRequests(userId: string): Promise<any[]> {\n    return db.select()\n      .from(paymentRequests)\n      .where(eq(paymentRequests.userId, userId))\n      .orderBy(desc(paymentRequests.createdAt));\n  }\n\n  async createWithdrawalRequest(data: any): Promise<any> {\n    const [result] = await db.insert(withdrawalRequests).values(data).returning();\n    return result;\n  }\n\n  async getUserWithdrawalRequests(userId: string): Promise<any[]> {\n    return db.select()\n      .from(withdrawalRequests)\n      .where(eq(withdrawalRequests.userId, userId))\n      .orderBy(desc(withdrawalRequests.createdAt));\n  }\n\n  async getAdminDashboardStats(): Promise<any> {\n    const [totalPaymentsResult] = await db.select({\n      total: sql<string>`COALESCE(SUM(amount), 0)`\n    }).from(paymentRequests).where(eq(paymentRequests.status, 'approved'));\n\n    const [totalWithdrawalsResult] = await db.select({\n      total: sql<string>`COALESCE(SUM(withdrawal_amount), 0)`\n    }).from(withdrawalRequests).where(eq(withdrawalRequests.status, 'completed'));\n\n    const [pendingPaymentsResult] = await db.select({\n      count: sql<string>`COUNT(*)`\n    }).from(paymentRequests).where(eq(paymentRequests.status, 'pending'));\n\n    const [activeUsersResult] = await db.select({\n      count: sql<string>`COUNT(*)`\n    }).from(users);\n\n    return {\n      totalPayments: totalPaymentsResult?.total || 0,\n      totalWithdrawals: totalWithdrawalsResult?.total || 0,\n      pendingPayments: pendingPaymentsResult?.count || 0,\n      activeUsers: activeUsersResult?.count || 0,\n    };\n  }\n\n  async getPendingPayments(): Promise<any[]> {\n    return db.select()\n      .from(paymentRequests)\n      .where(eq(paymentRequests.status, 'pending'))\n      .orderBy(desc(paymentRequests.createdAt));\n  }\n\n  async approvePayment(paymentId: string, adminId: string): Promise<any> {\n    const [result] = await db.update(paymentRequests)\n      .set({ \n        status: 'approved',\n        approvedBy: adminId,\n        approvedAt: new Date()\n      })\n      .where(eq(paymentRequests.id, paymentId))\n      .returning();\n    \n    return result;\n  }\n\n  async getPendingWithdrawals(): Promise<any[]> {\n    return db.select()\n      .from(withdrawalRequests)\n      .where(eq(withdrawalRequests.status, 'pending'))\n      .orderBy(desc(withdrawalRequests.createdAt));\n  }\n\n  async completeWithdrawal(withdrawalId: string, adminId: string): Promise<any> {\n    const [result] = await db.update(withdrawalRequests)\n      .set({\n        status: 'completed',\n        processedBy: adminId,\n        processedAt: new Date()\n      })\n      .where(eq(withdrawalRequests.id, withdrawalId))\n      .returning();\n\n    return result;\n  }\n}\n\nexport const storage = new DatabaseStorage();\n","size_bytes":9767},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport {\n  index,\n  jsonb,\n  pgTable,\n  timestamp,\n  varchar,\n  integer,\n  decimal,\n  boolean,\n  text\n} from \"drizzle-orm/pg-core\";\nimport { desc } from \"drizzle-orm\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\n// Session storage table (mandatory for Replit Auth)\nexport const sessions = pgTable(\n  \"sessions\",\n  {\n    sid: varchar(\"sid\").primaryKey(),\n    sess: jsonb(\"sess\").notNull(),\n    expire: timestamp(\"expire\").notNull(),\n  },\n  (table) => [index(\"IDX_session_expire\").on(table.expire)],\n);\n\n// User storage table (now OTP-based)\nexport const users = pgTable(\"users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  email: varchar(\"email\").unique(),\n  phone: varchar(\"phone\").unique(),\n  firstName: varchar(\"first_name\"),\n  lastName: varchar(\"last_name\"),\n  profileImageUrl: varchar(\"profile_image_url\"),\n  balance: integer(\"balance\").default(0),\n  totalWinnings: integer(\"total_winnings\").default(0),\n  gamesPlayed: integer(\"games_played\").default(0),\n  upiId: varchar(\"upi_id\"), // Store user's UPI ID for withdrawals\n  lastLoginAt: timestamp(\"last_login_at\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\n// OTP storage for authentication\nexport const otpCodes = pgTable(\"otp_codes\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  identifier: varchar(\"identifier\").notNull(), // email or phone\n  identifierType: varchar(\"identifier_type\").notNull(), // 'email' or 'phone'\n  otp: varchar(\"otp\").notNull(),\n  attempts: integer(\"attempts\").default(0),\n  used: boolean(\"used\").default(false),\n  ipAddress: varchar(\"ip_address\"),\n  expiresAt: timestamp(\"expires_at\").notNull(),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Transactions table for top-ups and game transactions\nexport const transactions = pgTable(\"transactions\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id).notNull(),\n  type: varchar(\"type\").notNull(), // 'topup', 'game_bet', 'game_win'\n  amount: integer(\"amount\").notNull(),\n  status: varchar(\"status\").default('completed'), // 'pending', 'completed', 'failed'\n  gameType: varchar(\"game_type\"), // 'color_game', 'aviator'\n  gameRoundId: varchar(\"game_round_id\"),\n  paymentId: varchar(\"payment_id\"), // for top-ups\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Game rounds for tracking individual game sessions\nexport const gameRounds = pgTable(\"game_rounds\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id).notNull(),\n  gameType: varchar(\"game_type\").notNull(), // 'color_game', 'aviator'\n  betAmount: integer(\"bet_amount\").notNull(),\n  result: varchar(\"result\").notNull(), // 'win', 'loss'\n  winAmount: integer(\"win_amount\").default(0),\n  gameData: jsonb(\"game_data\"), // Store game-specific data\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Aviator game state for real-time multiplayer\nexport const aviatorGameState = pgTable(\"aviator_game_state\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  roundId: varchar(\"round_id\").notNull(),\n  status: varchar(\"status\").default('betting'), // 'betting', 'flying', 'crashed'\n  multiplier: decimal(\"multiplier\", { precision: 10, scale: 2 }).default('1.00'),\n  crashPoint: decimal(\"crash_point\", { precision: 10, scale: 2 }),\n  startTime: timestamp(\"start_time\"),\n  crashTime: timestamp(\"crash_time\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Aviator bets for tracking player bets in each round\nexport const aviatorBets = pgTable(\"aviator_bets\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id).notNull(),\n  roundId: varchar(\"round_id\").notNull(),\n  betAmount: integer(\"bet_amount\").notNull(),\n  autoCashOut: decimal(\"auto_cash_out\", { precision: 10, scale: 2 }),\n  cashOutAt: decimal(\"cash_out_at\", { precision: 10, scale: 2 }),\n  status: varchar(\"status\").default('active'), // 'active', 'cashed_out', 'crashed'\n  winAmount: integer(\"win_amount\").default(0),\n  isNextRoundBet: boolean(\"is_next_round_bet\").default(false),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Admin users for system management\nexport const adminUsers = pgTable(\"admin_users\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  username: varchar(\"username\").unique().notNull(),\n  email: varchar(\"email\").unique().notNull(),\n  passwordHash: varchar(\"password_hash\").notNull(),\n  role: varchar(\"role\").default('admin'), // 'admin', 'super_admin'\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Payment requests for top-ups\nexport const paymentRequests = pgTable(\"payment_requests\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id).notNull(),\n  amount: decimal(\"amount\", { precision: 10, scale: 2 }).notNull(),\n  pointsToCredit: integer(\"points_to_credit\").notNull(),\n  paymentMethod: varchar(\"payment_method\").notNull(), // 'upi', 'bank_transfer', 'card'\n  paymentTransactionId: varchar(\"payment_transaction_id\"),\n  payerUpiId: varchar(\"payer_upi_id\"),\n  payerBankDetails: jsonb(\"payer_bank_details\"),\n  status: varchar(\"status\").default('pending'), // 'pending', 'approved', 'rejected'\n  qrCodeId: varchar(\"qr_code_id\"),\n  approvedBy: varchar(\"approved_by\").references(() => adminUsers.id),\n  approvedAt: timestamp(\"approved_at\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// Withdrawal requests\nexport const withdrawalRequests = pgTable(\"withdrawal_requests\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  userId: varchar(\"user_id\").references(() => users.id).notNull(),\n  pointsToWithdraw: integer(\"points_to_withdraw\").notNull(),\n  withdrawalAmount: decimal(\"withdrawal_amount\", { precision: 10, scale: 2 }).notNull(),\n  recipientUpiId: varchar(\"recipient_upi_id\").notNull(),\n  status: varchar(\"status\").default('pending'), // 'pending', 'processing', 'completed', 'rejected'\n  processedBy: varchar(\"processed_by\").references(() => adminUsers.id),\n  processedAt: timestamp(\"processed_at\"),\n  rejectionReason: text(\"rejection_reason\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// QR codes for payments\nexport const paymentQrCodes = pgTable(\"payment_qr_codes\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  qrCodeData: text(\"qr_code_data\").notNull(),\n  qrCodeImage: text(\"qr_code_image\"), // Base64 or URL\n  merchantUpiId: varchar(\"merchant_upi_id\").notNull(),\n  isActive: boolean(\"is_active\").default(true),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n});\n\n// System configuration\nexport const systemConfig = pgTable(\"system_config\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  configKey: varchar(\"config_key\").unique().notNull(),\n  configValue: text(\"config_value\").notNull(),\n  description: text(\"description\"),\n  updatedBy: varchar(\"updated_by\").references(() => adminUsers.id),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport type UpsertUser = typeof users.$inferInsert;\nexport type User = typeof users.$inferSelect;\nexport type InsertOtpCode = typeof otpCodes.$inferInsert;\nexport type OtpCode = typeof otpCodes.$inferSelect;\nexport type InsertTransaction = typeof transactions.$inferInsert;\nexport type Transaction = typeof transactions.$inferSelect;\nexport type InsertGameRound = typeof gameRounds.$inferInsert;\nexport type GameRound = typeof gameRounds.$inferSelect;\nexport type InsertAviatorGameState = typeof aviatorGameState.$inferInsert;\nexport type AviatorGameState = typeof aviatorGameState.$inferSelect;\nexport type InsertAviatorBet = typeof aviatorBets.$inferInsert;\nexport type AviatorBet = typeof aviatorBets.$inferSelect;\n\n// Admin system types\nexport type AdminUser = typeof adminUsers.$inferSelect;\nexport type InsertAdminUser = typeof adminUsers.$inferInsert;\nexport type PaymentRequest = typeof paymentRequests.$inferSelect;\nexport type InsertPaymentRequest = typeof paymentRequests.$inferInsert;\nexport type WithdrawalRequest = typeof withdrawalRequests.$inferSelect;\nexport type InsertWithdrawalRequest = typeof withdrawalRequests.$inferInsert;\nexport type PaymentQrCode = typeof paymentQrCodes.$inferSelect;\nexport type InsertPaymentQrCode = typeof paymentQrCodes.$inferInsert;\nexport type SystemConfig = typeof systemConfig.$inferSelect;\nexport type InsertSystemConfig = typeof systemConfig.$inferInsert;\n\nexport const insertTransactionSchema = createInsertSchema(transactions).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertGameRoundSchema = createInsertSchema(gameRounds).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertAviatorBetSchema = createInsertSchema(aviatorBets).omit({\n  id: true,\n  createdAt: true,\n});\n\nexport const insertOtpCodeSchema = createInsertSchema(otpCodes).omit({\n  id: true,\n  createdAt: true,\n});\n\n// OTP Authentication Schemas\nexport const sendOtpSchema = z.object({\n  identifier: z.string().min(1, \"Email or phone is required\"),\n  type: z.enum([\"email\", \"phone\"]),\n});\n\nexport const verifyOtpSchema = z.object({\n  identifier: z.string().min(1, \"Email or phone is required\"),\n  otp: z.string().length(6, \"OTP must be 6 digits\"),\n  type: z.enum([\"email\", \"phone\"]),\n});\n\nexport type SendOtpRequest = z.infer<typeof sendOtpSchema>;\nexport type VerifyOtpRequest = z.infer<typeof verifyOtpSchema>;\n","size_bytes":9598},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport Landing from \"@/pages/landing\";\nimport Home from \"@/pages/home\";\nimport Games from \"@/pages/games\";\nimport TopUp from \"@/pages/topup\";\nimport ColorGame from \"@/pages/color-game\";\nimport AviatorGame from \"@/pages/aviator-game\";\nimport OtpLogin from \"@/pages/otp-login\";\nimport PaymentTopup from \"@/pages/payment-topup\";\nimport Withdrawal from \"@/pages/withdrawal\";\nimport AdminLogin from \"@/pages/admin-login\";\nimport AdminDashboard from \"@/pages/admin-dashboard\";\nimport NotFound from \"@/pages/not-found\";\n\nfunction Router() {\n  const { isAuthenticated, isLoading } = useAuth();\n\n  return (\n    <Switch>\n      <Route path=\"/otp-login\" component={OtpLogin} />\n      {isLoading || !isAuthenticated ? (\n        <Route path=\"/\" component={Landing} />\n      ) : (\n        <>\n          <Route path=\"/\" component={Home} />\n          <Route path=\"/games\" component={Games} />\n          <Route path=\"/topup\" component={TopUp} />\n          <Route path=\"/color-game\" component={ColorGame} />\n          <Route path=\"/aviator-game\" component={AviatorGame} />\n          <Route path=\"/payment-topup\" component={PaymentTopup} />\n          <Route path=\"/withdrawal\" component={Withdrawal} />\n          <Route path=\"/admin/login\" component={AdminLogin} />\n          <Route path=\"/admin/dashboard\" component={AdminDashboard} />\n        </>\n      )}\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1917},"client/src/index.css":{"content":"@import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  /* Base Colors */\n  --background: hsl(222, 84%, 5%);\n  --foreground: hsl(210, 40%, 98%);\n  --card: hsl(220, 13%, 18%);\n  --card-foreground: hsl(210, 40%, 98%);\n  --popover: hsl(222, 84%, 5%);\n  --popover-foreground: hsl(210, 40%, 98%);\n  --primary: hsl(243, 75%, 65%);\n  --primary-foreground: hsl(210, 40%, 98%);\n  --secondary: hsl(262, 83%, 70%);\n  --secondary-foreground: hsl(210, 40%, 98%);\n  --muted: hsl(220, 13%, 18%);\n  --muted-foreground: hsl(216, 12%, 64%);\n  --accent: hsl(158, 64%, 52%);\n  --accent-foreground: hsl(210, 40%, 98%);\n  --destructive: hsl(0, 62%, 56%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --border: hsl(220, 13%, 28%);\n  --input: hsl(220, 13%, 23%);\n  --ring: hsl(243, 75%, 65%);\n  --sidebar: hsl(220, 13%, 18%);\n  --sidebar-foreground: hsl(210, 40%, 98%);\n  --sidebar-primary: hsl(243, 75%, 65%);\n  --sidebar-primary-foreground: hsl(210, 40%, 98%);\n  --sidebar-accent: hsl(220, 13%, 28%);\n  --sidebar-accent-foreground: hsl(243, 75%, 65%);\n  --sidebar-border: hsl(220, 13%, 28%);\n  --sidebar-ring: hsl(243, 75%, 65%);\n\n  /* Typography */\n  --font-sans: 'Inter', sans-serif;\n  --font-serif: Georgia, serif;\n  --font-mono: 'Fira Code', monospace;\n  --font-heading: 'Inter', sans-serif;\n  --font-body: 'Inter', sans-serif;\n\n  /* Spacing & Layout */\n  --radius: 1rem;\n  --radius-sm: 0.5rem;\n  --radius-md: 0.75rem;\n  --radius-lg: 1rem;\n  --radius-xl: 1.5rem;\n  --space-xs: 0.25rem;\n  --space-sm: 0.5rem;\n  --space-md: 1rem;\n  --space-lg: 1.5rem;\n  --space-xl: 2rem;\n  --space-2xl: 3rem;\n\n  /* Gaming Theme Colors */\n  --dark: hsl(222, 84%, 5%);\n  --surface: hsl(220, 13%, 18%);\n  --surface-light: hsl(220, 13%, 28%);\n  --surface-lighter: hsl(220, 13%, 35%);\n  --casino-dark: hsl(210, 25%, 8%);\n  --casino-navy: hsl(220, 30%, 12%);\n  --casino-midnight: hsl(225, 35%, 10%);\n\n  /* Neon & Accent Colors */\n  --neon-green: hsl(120, 100%, 50%);\n  --neon-green-dim: hsl(120, 80%, 45%);\n  --neon-red: hsl(0, 100%, 50%);\n  --neon-red-dim: hsl(0, 80%, 45%);\n  --neon-gold: hsl(45, 100%, 50%);\n  --neon-gold-dim: hsl(45, 80%, 45%);\n  --neon-blue: hsl(200, 100%, 50%);\n  --neon-purple: hsl(270, 100%, 50%);\n  --neon-orange: hsl(30, 100%, 50%);\n\n  /* Game State Colors */\n  --success: hsl(120, 60%, 50%);\n  --warning: hsl(45, 100%, 60%);\n  --danger: hsl(0, 60%, 50%);\n  --info: hsl(200, 60%, 50%);\n\n  /* Chart Colors */\n  --chart-1: hsl(243, 75%, 65%);\n  --chart-2: hsl(158, 64%, 52%);\n  --chart-3: hsl(45, 93%, 56%);\n  --chart-4: hsl(142, 76%, 36%);\n  --chart-5: hsl(336, 75%, 40%);\n\n  /* Aviator Game Specific */\n  --aviator-sky: linear-gradient(135deg, hsl(220, 30%, 12%) 0%, hsl(222, 84%, 5%) 100%);\n  --aviator-plane: hsl(45, 100%, 50%);\n  --aviator-multiplier: hsl(120, 100%, 50%);\n  --aviator-danger: hsl(0, 100%, 50%);\n  --aviator-cash-out: hsl(158, 64%, 52%);\n\n  /* Animation Timings */\n  --timing-fast: 150ms;\n  --timing-normal: 300ms;\n  --timing-slow: 500ms;\n  --timing-slower: 700ms;\n  --easing-smooth: cubic-bezier(0.4, 0, 0.2, 1);\n  --easing-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);\n\n  /* Shadows & Effects */\n  --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);\n  --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n  --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);\n  --shadow-xl: 0 20px 25px -5px rgba(0, 0, 0, 0.1);\n  --shadow-neon: 0 0 20px var(--neon-green);\n  --shadow-gold: 0 0 20px var(--neon-gold);\n  --shadow-red: 0 0 20px var(--neon-red);\n}\n\n.dark {\n  --background: hsl(222, 84%, 5%);\n  --foreground: hsl(210, 40%, 98%);\n  --card: hsl(220, 13%, 18%);\n  --card-foreground: hsl(210, 40%, 98%);\n  --popover: hsl(222, 84%, 5%);\n  --popover-foreground: hsl(210, 40%, 98%);\n  --primary: hsl(243, 75%, 65%);\n  --primary-foreground: hsl(210, 40%, 98%);\n  --secondary: hsl(262, 83%, 70%);\n  --secondary-foreground: hsl(210, 40%, 98%);\n  --muted: hsl(220, 13%, 18%);\n  --muted-foreground: hsl(216, 12%, 64%);\n  --accent: hsl(158, 64%, 52%);\n  --accent-foreground: hsl(210, 40%, 98%);\n  --destructive: hsl(0, 62%, 56%);\n  --destructive-foreground: hsl(210, 40%, 98%);\n  --border: hsl(220, 13%, 28%);\n  --input: hsl(220, 13%, 23%);\n  --ring: hsl(243, 75%, 65%);\n  --sidebar: hsl(220, 13%, 18%);\n  --sidebar-foreground: hsl(210, 40%, 98%);\n  --sidebar-primary: hsl(243, 75%, 65%);\n  --sidebar-primary-foreground: hsl(210, 40%, 98%);\n  --sidebar-accent: hsl(220, 13%, 28%);\n  --sidebar-accent-foreground: hsl(243, 75%, 65%);\n  --sidebar-border: hsl(220, 13%, 28%);\n  --sidebar-ring: hsl(243, 75%, 65%);\n}\n\n/* Enhanced Casino-themed animations and effects */\n@keyframes neon-glow {\n  0%, 100% { \n    box-shadow: 0 0 5px currentColor, 0 0 10px currentColor, 0 0 15px currentColor;\n    filter: brightness(1);\n  }\n  50% { \n    box-shadow: 0 0 10px currentColor, 0 0 20px currentColor, 0 0 30px currentColor;\n    filter: brightness(1.2);\n  }\n}\n\n@keyframes intense-glow {\n  0%, 100% { \n    box-shadow: 0 0 10px currentColor, 0 0 20px currentColor, 0 0 30px currentColor;\n  }\n  50% { \n    box-shadow: 0 0 20px currentColor, 0 0 40px currentColor, 0 0 60px currentColor;\n  }\n}\n\n@keyframes profit-pulse {\n  0% { transform: scale(1); opacity: 1; }\n  50% { transform: scale(1.05); opacity: 0.9; }\n  100% { transform: scale(1); opacity: 1; }\n}\n\n@keyframes counter-update {\n  0% { transform: scale(1) rotate(0deg); color: inherit; }\n  25% { transform: scale(1.1) rotate(2deg); color: var(--neon-gold); }\n  75% { transform: scale(1.05) rotate(-1deg); color: var(--neon-gold); }\n  100% { transform: scale(1) rotate(0deg); color: inherit; }\n}\n\n@keyframes leaderboard-highlight {\n  0% { background-color: transparent; transform: scale(1); }\n  50% { background-color: rgba(255, 215, 0, 0.15); transform: scale(1.02); }\n  100% { background-color: transparent; transform: scale(1); }\n}\n\n@keyframes multiplier-escalation {\n  0% { \n    transform: scale(1); \n    color: var(--neon-green);\n    text-shadow: 0 0 10px var(--neon-green);\n  }\n  25% { \n    transform: scale(1.1); \n    color: var(--neon-gold);\n    text-shadow: 0 0 15px var(--neon-gold);\n  }\n  50% { \n    transform: scale(1.2); \n    color: var(--neon-orange);\n    text-shadow: 0 0 20px var(--neon-orange);\n  }\n  75% { \n    transform: scale(1.3); \n    color: var(--neon-red);\n    text-shadow: 0 0 25px var(--neon-red);\n  }\n  100% { \n    transform: scale(1.4); \n    color: var(--neon-red);\n    text-shadow: 0 0 30px var(--neon-red);\n  }\n}\n\n@keyframes plane-takeoff {\n  0% { \n    transform: translateX(-50px) translateY(20px) rotate(-5deg) scale(0.8);\n    opacity: 0.7;\n  }\n  100% { \n    transform: translateX(0px) translateY(0px) rotate(0deg) scale(1);\n    opacity: 1;\n  }\n}\n\n@keyframes plane-crash {\n  0% { \n    transform: translateX(0px) translateY(0px) rotate(0deg);\n    filter: hue-rotate(0deg);\n  }\n  100% { \n    transform: translateX(50px) translateY(100px) rotate(45deg);\n    filter: hue-rotate(180deg);\n    opacity: 0;\n  }\n}\n\n@keyframes cash-out-celebration {\n  0% { \n    transform: scale(1); \n    background: var(--success);\n    box-shadow: 0 0 0 rgba(120, 255, 120, 0.7);\n  }\n  50% { \n    transform: scale(1.05); \n    background: var(--neon-green);\n    box-shadow: 0 0 20px rgba(120, 255, 120, 0.7);\n  }\n  100% { \n    transform: scale(1); \n    background: var(--success);\n    box-shadow: 0 0 0 rgba(120, 255, 120, 0.7);\n  }\n}\n\n@keyframes warning-flash {\n  0%, 100% { background-color: transparent; }\n  50% { background-color: rgba(255, 165, 0, 0.2); }\n}\n\n@keyframes slide-up-fade {\n  0% { \n    transform: translateY(20px); \n    opacity: 0; \n  }\n  100% { \n    transform: translateY(0); \n    opacity: 1; \n  }\n}\n\n/* Enhanced utility classes */\n.neon-text {\n  text-shadow: 0 0 5px currentColor, 0 0 10px currentColor, 0 0 15px currentColor;\n}\n\n.neon-text-intense {\n  text-shadow: 0 0 10px currentColor, 0 0 20px currentColor, 0 0 30px currentColor, 0 0 40px currentColor;\n}\n\n.profit-positive {\n  color: var(--neon-green);\n  animation: profit-pulse var(--timing-slow) var(--easing-smooth);\n}\n\n.profit-negative {\n  color: var(--neon-red);\n  animation: profit-pulse var(--timing-slow) var(--easing-smooth);\n}\n\n.leaderboard-gold {\n  background: linear-gradient(135deg, rgba(255, 215, 0, 0.2) 0%, rgba(255, 215, 0, 0.1) 100%);\n  border-left: 3px solid var(--neon-gold);\n  animation: leaderboard-highlight 2s var(--easing-smooth);\n}\n\n.leaderboard-silver {\n  background: linear-gradient(135deg, rgba(192, 192, 192, 0.15) 0%, rgba(192, 192, 192, 0.05) 100%);\n  border-left: 3px solid #c0c0c0;\n}\n\n.leaderboard-bronze {\n  background: linear-gradient(135deg, rgba(205, 127, 50, 0.15) 0%, rgba(205, 127, 50, 0.05) 100%);\n  border-left: 3px solid #cd7f32;\n}\n\n.aviator-multiplier {\n  animation: multiplier-escalation 0.5s var(--easing-bounce) infinite alternate;\n}\n\n.aviator-plane-takeoff {\n  animation: plane-takeoff var(--timing-slow) var(--easing-smooth);\n}\n\n.aviator-plane-crash {\n  animation: plane-crash var(--timing-normal) var(--easing-smooth) forwards;\n}\n\n.cash-out-btn {\n  transition: all var(--timing-fast) var(--easing-smooth);\n}\n\n.cash-out-btn:hover {\n  animation: cash-out-celebration var(--timing-normal) var(--easing-smooth);\n}\n\n.warning-zone {\n  animation: warning-flash 1s ease-in-out infinite;\n}\n\n.slide-up {\n  animation: slide-up-fade var(--timing-normal) var(--easing-smooth);\n}\n\n/* Responsive design enhancements */\n@media (max-width: 768px) {\n  .neon-text {\n    text-shadow: 0 0 3px currentColor, 0 0 6px currentColor, 0 0 9px currentColor;\n  }\n  \n  .aviator-multiplier {\n    font-size: clamp(1.5rem, 4vw, 3rem);\n  }\n}\n\n/* Dark mode specific enhancements */\n.dark .glass-effect {\n  background: rgba(255, 255, 255, 0.05);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.1);\n}\n\n/* Accessibility improvements */\n@media (prefers-reduced-motion: reduce) {\n  * {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n  }\n}\n\n/* Focus indicators for better keyboard navigation */\n.focus-visible {\n  outline: 2px solid var(--neon-blue);\n  outline-offset: 2px;\n  border-radius: var(--radius-sm);\n}\n\n.leaderboard-silver {\n  background: linear-gradient(135deg, rgba(192, 192, 192, 0.2) 0%, rgba(192, 192, 192, 0.1) 100%);\n  border-left: 3px solid #c0c0c0;\n}\n\n.leaderboard-bronze {\n  background: linear-gradient(135deg, rgba(205, 127, 50, 0.2) 0%, rgba(205, 127, 50, 0.1) 100%);\n  border-left: 3px solid #cd7f32;\n}\n\n.player-count-badge {\n  background: linear-gradient(45deg, rgba(0, 255, 0, 0.1), rgba(0, 255, 0, 0.2));\n  border: 1px solid rgba(0, 255, 0, 0.3);\n  animation: neon-glow 2s infinite;\n}\n\n.profit-meter {\n  background: linear-gradient(90deg, transparent 0%, var(--neon-green) 50%, transparent 100%);\n  height: 4px;\n  border-radius: 2px;\n  position: relative;\n  overflow: hidden;\n}\n\n.loss-meter {\n  background: linear-gradient(90deg, transparent 0%, var(--neon-red) 50%, transparent 100%);\n  height: 4px;\n  border-radius: 2px;\n  position: relative;\n  overflow: hidden;\n}\n\n.biggest-win-badge {\n  background: radial-gradient(circle at center, rgba(255, 215, 0, 0.2), transparent);\n  border: 2px solid var(--neon-gold);\n  animation: neon-glow 3s infinite;\n}\n\n.custom-scrollbar {\n  scrollbar-width: thin;\n  scrollbar-color: rgba(59, 130, 246, 0.5) rgba(0, 0, 0, 0.1);\n}\n\n.custom-scrollbar::-webkit-scrollbar {\n  width: 6px;\n}\n\n.custom-scrollbar::-webkit-scrollbar-track {\n  background: rgba(0, 0, 0, 0.1);\n  border-radius: 3px;\n}\n\n.custom-scrollbar::-webkit-scrollbar-thumb {\n  background: rgba(59, 130, 246, 0.5);\n  border-radius: 3px;\n}\n\n.custom-scrollbar::-webkit-scrollbar-thumb:hover {\n  background: rgba(59, 130, 246, 0.7);\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n@layer utilities {\n  .glassmorphism {\n    backdrop-filter: blur(10px);\n    background: rgba(30, 41, 59, 0.8);\n  }\n  \n  .animate-fly {\n    animation: fly 8s linear infinite;\n  }\n  \n  @keyframes fly {\n    0% { transform: translateX(-100px) translateY(50px) rotate(-10deg); }\n    100% { transform: translateX(calc(100vw + 100px)) translateY(-200px) rotate(15deg); }\n  }\n  \n  .multiplier-animation {\n    animation: pulse 0.5s ease-in-out infinite alternate;\n  }\n  \n  @keyframes pulse {\n    0% { transform: scale(1); }\n    100% { transform: scale(1.05); }\n  }\n\n  .aviator-flight {\n    animation: aviatorFlight 0.1s ease-out forwards;\n  }\n\n  .aviator-crash {\n    animation: aviatorCrash 1s ease-in forwards;\n  }\n\n  .aviator-smoke {\n    animation: smokeTrail 2s ease-out infinite;\n  }\n\n  .aviator-explosion {\n    animation: explosion 0.8s ease-out forwards;\n  }\n\n  @keyframes aviatorFlight {\n    from { \n      transform: translateX(var(--start-x, 0px)) translateY(var(--start-y, 0px)) rotate(12deg);\n    }\n    to { \n      transform: translateX(var(--end-x, 200px)) translateY(var(--end-y, -80px)) rotate(12deg) scale(1.1);\n    }\n  }\n\n  @keyframes aviatorCrash {\n    0% { \n      transform: translateX(var(--crash-x, 300px)) translateY(var(--crash-y, -100px)) rotate(12deg) scale(1.1);\n    }\n    50% {\n      transform: translateX(var(--crash-x, 300px)) translateY(var(--crash-y, -100px)) rotate(45deg) scale(1.2);\n    }\n    100% { \n      transform: translateX(calc(var(--crash-x, 300px) + 100px)) translateY(calc(var(--crash-y, -100px) + 200px)) rotate(180deg) scale(0.5);\n      opacity: 0.3;\n    }\n  }\n\n  @keyframes smokeTrail {\n    0% { \n      transform: scale(0.5);\n      opacity: 0.8;\n    }\n    50% {\n      transform: scale(1.2);\n      opacity: 0.4;\n    }\n    100% { \n      transform: scale(2);\n      opacity: 0;\n    }\n  }\n\n  @keyframes explosion {\n    0% { \n      transform: scale(0);\n      opacity: 1;\n    }\n    30% {\n      transform: scale(1.5);\n      opacity: 1;\n    }\n    100% { \n      transform: scale(3);\n      opacity: 0;\n    }\n  }\n\n  @keyframes dash {\n    to {\n      stroke-dashoffset: -100px;\n    }\n  }\n\n  .flight-trail {\n    animation: dash 2s linear infinite;\n  }\n\n  .multiplier-glow {\n    animation: multiplierGlow 0.5s ease-in-out infinite alternate;\n  }\n\n  @keyframes multiplierGlow {\n    0% { \n      text-shadow: 0 0 10px rgba(34, 197, 94, 0.5);\n      transform: scale(1);\n    }\n    100% { \n      text-shadow: 0 0 20px rgba(34, 197, 94, 0.8), 0 0 30px rgba(34, 197, 94, 0.4);\n      transform: scale(1.05);\n    }\n  }\n\n  .plane-takeoff {\n    animation: planeTakeoff 2s ease-out forwards;\n  }\n\n  .plane-ascent {\n    animation: planeAscent 3s linear forwards;\n  }\n\n  .plane-speed {\n    animation: planeSpeed 5s ease-in forwards;\n  }\n\n  .plane-warning {\n    animation: planeWarning 4s ease-in-out forwards;\n  }\n\n  .plane-crash {\n    animation: planeCrash 2s ease-in forwards;\n  }\n\n  @keyframes planeTakeoff {\n    0% { \n      transform: translateX(0px) translateY(0px) rotate(12deg) scale(1);\n      filter: blur(0px);\n    }\n    100% { \n      transform: translateX(100px) translateY(-50px) rotate(15deg) scale(1.1);\n      filter: blur(1px);\n    }\n  }\n\n  @keyframes planeAscent {\n    0% { \n      transform: translateX(100px) translateY(-50px) rotate(15deg) scale(1.1);\n      filter: blur(1px);\n    }\n    100% { \n      transform: translateX(250px) translateY(-130px) rotate(18deg) scale(1.15);\n      filter: blur(1.5px);\n    }\n  }\n\n  @keyframes planeSpeed {\n    0% { \n      transform: translateX(250px) translateY(-130px) rotate(18deg) scale(1.15);\n      filter: blur(1.5px);\n    }\n    100% { \n      transform: translateX(400px) translateY(-190px) rotate(22deg) scale(1.25);\n      filter: blur(2px);\n    }\n  }\n\n  @keyframes planeWarning {\n    0% { \n      transform: translateX(400px) translateY(-190px) rotate(22deg) scale(1.25);\n      filter: blur(2px);\n    }\n    50% {\n      transform: translateX(450px) translateY(-210px) rotate(25deg) scale(1.3);\n      filter: blur(2.5px) hue-rotate(30deg);\n    }\n    100% { \n      transform: translateX(480px) translateY(-220px) rotate(28deg) scale(1.35);\n      filter: blur(3px) hue-rotate(60deg);\n    }\n  }\n\n  @keyframes planeCrash {\n    0% { \n      transform: translateX(480px) translateY(-220px) rotate(28deg) scale(1.35);\n      opacity: 1;\n    }\n    30% {\n      transform: translateX(500px) translateY(-200px) rotate(90deg) scale(1.5);\n      opacity: 0.8;\n    }\n    100% { \n      transform: translateX(600px) translateY(-50px) rotate(180deg) scale(0.3);\n      opacity: 0;\n    }\n  }\n\n  .vapor-trail {\n    animation: vaporTrail 1s ease-out infinite;\n  }\n\n  @keyframes vaporTrail {\n    0% {\n      opacity: 0.8;\n      transform: scale(1) translateX(0);\n    }\n    50% {\n      opacity: 0.4;\n      transform: scale(1.5) translateX(-20px);\n    }\n    100% {\n      opacity: 0;\n      transform: scale(2) translateX(-40px);\n    }\n  }\n  \n  .slide-in {\n    animation: slideIn 0.3s ease-out;\n  }\n  \n  @keyframes slideIn {\n    from { opacity: 0; transform: translateY(20px); }\n    to { opacity: 1; transform: translateY(0); }\n  }\n}\n","size_bytes":16873},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/game-card.tsx":{"content":"import { Link } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent } from \"@/components/ui/card\";\nimport { PlayIcon } from \"lucide-react\";\n\ninterface GameRule {\n  label: string;\n  reward: string;\n}\n\ninterface GameCardProps {\n  title: string;\n  description: string;\n  preview: React.ReactNode;\n  rules: GameRule[];\n  href: string;\n  buttonText: string;\n  buttonGradient: string;\n}\n\nexport default function GameCard({ \n  title, \n  description, \n  preview, \n  rules, \n  href, \n  buttonText, \n  buttonGradient \n}: GameCardProps) {\n  return (\n    <Card className=\"bg-surface/80 border-surface-light backdrop-blur-sm overflow-hidden hover:border-primary transition-colors duration-300\">\n      {preview}\n      \n      <CardContent className=\"p-6\">\n        <p className=\"text-gray-400 mb-4\">{description}</p>\n        \n        <div className=\"space-y-3 mb-6\">\n          {rules.map((rule, index) => (\n            <div key={index} className=\"flex justify-between items-center text-sm\">\n              <span className=\"text-gray-300\">{rule.label}</span>\n              <span className=\"text-accent font-semibold\">{rule.reward}</span>\n            </div>\n          ))}\n        </div>\n        \n        <Link href={href}>\n          <Button className={`w-full bg-gradient-to-r ${buttonGradient} text-white font-semibold py-3 px-4 rounded-lg hover:opacity-90 transition-opacity`}>\n            <PlayIcon className=\"w-4 h-4 mr-2\" />\n            {buttonText}\n          </Button>\n        </Link>\n      </CardContent>\n    </Card>\n  );\n}\n","size_bytes":1551},"client/src/components/navigation.tsx":{"content":"import { Link, useLocation } from \"wouter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { HomeIcon, GamepadIcon, WalletIcon, UserIcon, MenuIcon, CoinsIcon } from \"lucide-react\";\nimport {\n  Sheet,\n  SheetContent,\n  SheetTrigger,\n} from \"@/components/ui/sheet\";\n\nexport default function Navigation() {\n  const { user } = useAuth();\n  const [location] = useLocation();\n\n  const { data: balanceData } = useQuery({\n    queryKey: ['/api/balance'],\n  });\n\n  const handleLogout = () => {\n    window.location.href = \"/api/logout\";\n  };\n\n  const navItems = [\n    { href: \"/\", icon: HomeIcon, label: \"Dashboard\" },\n    { href: \"/games\", icon: GamepadIcon, label: \"Games\" },\n    { href: \"/payment-topup\", icon: WalletIcon, label: \"Top Up\" },\n    { href: \"/withdrawal\", icon: CoinsIcon, label: \"Withdraw\" },\n  ];\n\n  const isActive = (href: string) => {\n    if (href === \"/\") return location === \"/\";\n    return location.startsWith(href);\n  };\n\n  return (\n    <>\n      {/* Desktop Navigation */}\n      <nav className=\"bg-surface/80 border-b border-surface-light sticky top-0 z-50 backdrop-blur-sm\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n          <div className=\"flex items-center justify-between h-16\">\n            <Link href=\"/\" className=\"flex items-center space-x-4\">\n              <div className=\"text-2xl font-bold bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">\n                🎮 GameHub Pro\n              </div>\n            </Link>\n            \n            <div className=\"hidden md:flex items-center space-x-6\">\n              {navItems.map((item) => (\n                <Link key={item.href} href={item.href}>\n                  <Button\n                    variant=\"ghost\"\n                    className={`text-gray-300 hover:text-white transition-colors ${\n                      isActive(item.href) ? 'text-primary' : ''\n                    }`}\n                  >\n                    <item.icon className=\"w-4 h-4 mr-2\" />\n                    {item.label}\n                  </Button>\n                </Link>\n              ))}\n            </div>\n            \n            {/* User Profile */}\n            <div className=\"flex items-center space-x-4\">\n              <div className=\"bg-surface rounded-lg px-3 py-2 flex items-center space-x-2\">\n                <CoinsIcon className=\"w-4 h-4 text-accent\" />\n                <span className=\"text-white font-semibold\">\n                  {balanceData?.balance || user?.balance || 0}\n                </span>\n                <span className=\"text-gray-400 text-sm\">Points</span>\n              </div>\n              <img \n                src={user?.profileImageUrl || \"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-4.0.3&auto=format&fit=crop&w=100&h=100\"} \n                alt=\"User Avatar\" \n                className=\"w-10 h-10 rounded-full border-2 border-primary cursor-pointer hover:border-secondary transition-colors object-cover\"\n                onClick={handleLogout}\n                title=\"Click to logout\"\n              />\n              \n              {/* Mobile menu button */}\n              <Sheet>\n                <SheetTrigger asChild>\n                  <Button variant=\"ghost\" size=\"icon\" className=\"md:hidden text-gray-400 hover:text-white\">\n                    <MenuIcon className=\"w-5 h-5\" />\n                  </Button>\n                </SheetTrigger>\n                <SheetContent side=\"right\" className=\"bg-surface border-surface-light\">\n                  <div className=\"flex flex-col space-y-4 mt-8\">\n                    {navItems.map((item) => (\n                      <Link key={item.href} href={item.href}>\n                        <Button\n                          variant=\"ghost\"\n                          className={`w-full justify-start text-gray-300 hover:text-white transition-colors ${\n                            isActive(item.href) ? 'text-primary bg-primary/10' : ''\n                          }`}\n                        >\n                          <item.icon className=\"w-4 h-4 mr-2\" />\n                          {item.label}\n                        </Button>\n                      </Link>\n                    ))}\n                    <Button\n                      onClick={handleLogout}\n                      variant=\"outline\"\n                      className=\"w-full justify-start mt-8 text-gray-300 hover:text-white border-surface-light\"\n                    >\n                      <UserIcon className=\"w-4 h-4 mr-2\" />\n                      Logout\n                    </Button>\n                  </div>\n                </SheetContent>\n              </Sheet>\n            </div>\n          </div>\n        </div>\n      </nav>\n\n      {/* Mobile Bottom Navigation */}\n      <div className=\"fixed bottom-0 left-0 right-0 bg-surface/90 border-t border-surface-light p-4 md:hidden z-40 backdrop-blur-sm\">\n        <div className=\"flex justify-around\">\n          {navItems.map((item) => (\n            <Link key={item.href} href={item.href}>\n              <Button\n                variant=\"ghost\"\n                size=\"sm\"\n                className={`flex flex-col items-center text-gray-400 hover:text-white transition-colors ${\n                  isActive(item.href) ? 'text-primary' : ''\n                }`}\n              >\n                <item.icon className=\"w-5 h-5 mb-1\" />\n                <span className=\"text-xs\">{item.label}</span>\n              </Button>\n            </Link>\n          ))}\n          <Button\n            onClick={handleLogout}\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"flex flex-col items-center text-gray-400 hover:text-white transition-colors\"\n          >\n            <UserIcon className=\"w-5 h-5 mb-1\" />\n            <span className=\"text-xs\">Logout</span>\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n}\n","size_bytes":5969},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/hooks/useAuth.ts":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { isOtpAuthenticated } from \"../lib/authUtils\";\n\nexport function useAuth() {\n  const { data: user, isLoading } = useQuery({\n    queryKey: [\"/api/auth/user\"],\n    retry: false,\n  });\n\n  // Check for both OTP and Replit authentication\n  const hasOtpAuth = isOtpAuthenticated();\n  const hasReplitAuth = !!user;\n\n  return {\n    user,\n    isLoading,\n    isAuthenticated: hasOtpAuth || hasReplitAuth,\n  };\n}\n","size_bytes":459},"client/src/hooks/useWebSocket.ts":{"content":"import { useEffect, useRef, useCallback } from 'react';\n\ninterface UseWebSocketOptions {\n  onMessage?: (data: any) => void;\n  onOpen?: () => void;\n  onClose?: () => void;\n  onError?: (error: Event) => void;\n}\n\nexport function useWebSocket(url: string, options: UseWebSocketOptions = {}) {\n  const ws = useRef<WebSocket | null>(null);\n  const { onMessage, onOpen, onClose, onError } = options;\n\n  const sendMessage = useCallback((data: any) => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(JSON.stringify(data));\n    }\n  }, []);\n\n  useEffect(() => {\n    let reconnectTimeout: NodeJS.Timeout;\n\n    const connect = () => {\n      try {\n        ws.current = new WebSocket(url);\n\n        ws.current.onopen = () => {\n          console.log('WebSocket connected');\n          onOpen?.();\n        };\n\n        ws.current.onmessage = (event) => {\n          try {\n            const data = JSON.parse(event.data);\n            onMessage?.(data);\n          } catch (error) {\n            console.error('Error parsing WebSocket message:', error);\n          }\n        };\n\n        ws.current.onclose = (event) => {\n          console.log('WebSocket disconnected');\n          onClose?.();\n          \n          // Only attempt to reconnect if it wasn't a manual close\n          if (event.code !== 1000) {\n            reconnectTimeout = setTimeout(() => {\n              console.log('Attempting to reconnect WebSocket...');\n              connect();\n            }, 3000);\n          }\n        };\n\n        ws.current.onerror = (error) => {\n          console.error('WebSocket error:', error);\n          onError?.(error);\n        };\n      } catch (error) {\n        console.error('Error creating WebSocket:', error);\n      }\n    };\n\n    connect();\n\n    return () => {\n      if (reconnectTimeout) {\n        clearTimeout(reconnectTimeout);\n      }\n      if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n        ws.current.close(1000, 'Component unmounted');\n      }\n    };\n  }, [url, onMessage, onOpen, onClose, onError]);\n\n  return { sendMessage };\n}","size_bytes":2074},"client/src/lib/authUtils.ts":{"content":"// Auth utilities for JWT token management and dual authentication support\n\nexport function getAuthToken(): string | null {\n  return localStorage.getItem('authToken');\n}\n\nexport function setAuthToken(token: string): void {\n  localStorage.setItem('authToken', token);\n}\n\nexport function removeAuthToken(): void {\n  localStorage.removeItem('authToken');\n}\n\nexport function isTokenExpired(token: string): boolean {\n  try {\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    return payload.exp * 1000 < Date.now();\n  } catch {\n    return true;\n  }\n}\n\nexport function getAuthHeaders(): HeadersInit {\n  const token = getAuthToken();\n  if (token && !isTokenExpired(token)) {\n    return {\n      'Authorization': `Bearer ${token}`,\n      'Content-Type': 'application/json',\n    };\n  }\n  return {\n    'Content-Type': 'application/json',\n  };\n}\n\nexport function isOtpAuthenticated(): boolean {\n  const token = getAuthToken();\n  return token ? !isTokenExpired(token) : false;\n}\n\nexport function logout(): void {\n  removeAuthToken();\n  // Force page reload to clear any cached state\n  window.location.href = '/otp-login';\n}\n\nexport function isUnauthorizedError(error: Error): boolean {\n  return /^401: .*Unauthorized/.test(error.message);\n}","size_bytes":1239},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  // Get JWT token if available\n  const token = localStorage.getItem('authToken');\n  const headers: Record<string, string> = {\n    \"Content-Type\": \"application/json\",\n  };\n  \n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token}`;\n  }\n\n  const res = await fetch(url, {\n    method,\n    headers: data ? headers : (token ? { \"Authorization\": `Bearer ${token}` } : {}),\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    // Include JWT token in queries if available\n    const token = localStorage.getItem('authToken');\n    const headers: Record<string, string> = {};\n    \n    if (token) {\n      headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n      headers,\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1894},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/aviator-game.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link } from \"wouter\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\nimport { useWebSocket } from \"@/hooks/useWebSocket\";\nimport Navigation from \"@/components/navigation\";\nimport { MultiplierDisplay } from \"@/components/aviator/MultiplierDisplay\";\nimport { GameCanvas } from \"@/components/aviator/GameCanvas\";\nimport { BettingPanel } from \"@/components/aviator/BettingPanel\";\nimport { StatisticsPanel } from \"@/components/aviator/StatisticsPanel\";\nimport { ArrowLeftIcon } from \"lucide-react\";\n\ninterface GameState {\n  roundId: string;\n  status: 'betting' | 'flying' | 'crashed';\n  multiplier: number;\n  startTime?: string;\n}\n\ninterface LivePlayer {\n  userId: string;\n  betAmount: number;\n  status: 'active' | 'cashed_out' | 'crashed';\n  cashOutAt?: number;\n}\n\nexport default function AviatorGame() {\n  const [gameState, setGameState] = useState<GameState | null>(null);\n  const [betAmount, setBetAmount] = useState(50);\n  const [autoCashOut, setAutoCashOut] = useState<string>(\"\");\n  const [userBet, setUserBet] = useState<any>(null);\n  const [nextRoundBet, setNextRoundBet] = useState<any>(null);\n  const [livePlayers, setLivePlayers] = useState<LivePlayer[]>([]);\n  const [lastMultipliers, setLastMultipliers] = useState<number[]>([2.34, 1.15, 5.67, 1.87, 3.21]);\n  const [planePosition, setPlanePosition] = useState({ x: 0, y: 0 });\n  const [animationSpeed, setAnimationSpeed] = useState(1);\n  const [showCrashEffect, setShowCrashEffect] = useState(false);\n  const [animationPhase, setAnimationPhase] = useState<'takeoff' | 'ascent' | 'speed' | 'warning' | 'crash'>('takeoff');\n  const [flightTime, setFlightTime] = useState(0);\n  const [showWarning, setShowWarning] = useState(false);\n\n  // Enhanced statistics state\n  const [activePlayerCount, setActivePlayerCount] = useState(Math.floor(Math.random() * 15) + 8);\n  const [totalProfit, setTotalProfit] = useState(0);\n  const [totalLoss, setTotalLoss] = useState(0);\n  const [biggestWinOfDay, setBiggestWinOfDay] = useState({ amount: 5850, player: 'Flyer_47' });\n  const [profitChangePercent, setProfitChangePercent] = useState(0);\n  \n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const { data: balanceData } = useQuery<{balance: number}>({\n    queryKey: ['/api/balance'],\n  });\n\n  const { sendMessage } = useWebSocket(`${window.location.protocol === 'https:' ? 'wss:' : 'ws:'}//${window.location.host}/ws`, {\n    onMessage: (data) => {\n      switch (data.type) {\n        case 'game_state':\n          setGameState(data.data);\n          break;\n        case 'round_started':\n          setGameState({\n            roundId: data.data.roundId,\n            status: 'betting',\n            multiplier: 1.00,\n          });\n          setUserBet(null);\n          setShowCrashEffect(false);\n          setAnimationPhase('takeoff');\n          setFlightTime(0);\n          setShowWarning(false);\n          break;\n        case 'next_bet_placed':\n          if (data.data.userId === 'user') {\n            setNextRoundBet({\n              betAmount: data.data.betAmount,\n              autoCashOut: data.data.autoCashOut,\n              status: 'waiting',\n            });\n            toast({\n              title: \"Next Round Bet Placed!\",\n              description: `${data.data.betAmount} points bet placed for next round`,\n            });\n          }\n          break;\n        case 'next_bet_activated':\n          if (data.data.userId === 'user') {\n            setUserBet({\n              betAmount: data.data.betAmount,\n              autoCashOut: data.data.autoCashOut,\n              status: 'active',\n            });\n            setNextRoundBet(null);\n            toast({\n              title: \"Next Round Bet Activated!\",\n              description: `Your ${data.data.betAmount} points bet is now active`,\n            });\n          }\n          break;\n        case 'flying_started':\n          setGameState(prev => prev ? {\n            ...prev,\n            status: 'flying',\n            startTime: data.data.startTime,\n          } : null);\n          setFlightTime(0);\n          setAnimationPhase('takeoff');\n          setShowWarning(false);\n          setShowCrashEffect(false);\n          break;\n        case 'multiplier_update':\n          setGameState(prev => prev ? {\n            ...prev,\n            multiplier: data.data.multiplier,\n          } : null);\n          \n          // Update animation phase based on multiplier\n          if (data.data.multiplier > 8) {\n            setAnimationPhase('warning');\n            setShowWarning(true);\n          } else if (data.data.multiplier > 5) {\n            setAnimationPhase('speed');\n          } else if (data.data.multiplier > 2) {\n            setAnimationPhase('ascent');\n          }\n          break;\n        case 'crashed':\n          setShowCrashEffect(true);\n          setAnimationPhase('crash');\n          setGameState(prev => prev ? {\n            ...prev,\n            status: 'crashed',\n            multiplier: data.data.multiplier,\n          } : null);\n          setLastMultipliers(prev => [data.data.multiplier, ...prev.slice(0, 4)]);\n          \n          if (userBet && userBet.status === 'active') {\n            setUserBet((prev: any) => ({ ...prev, status: 'crashed' }));\n            toast({\n              title: \"Round Ended\",\n              description: `Plane crashed at ${data.data.multiplier.toFixed(2)}x`,\n              variant: \"destructive\",\n            });\n          }\n          \n          setTimeout(() => setShowCrashEffect(false), 3000);\n          break;\n        case 'bet_placed':\n          if (data.data.userId === 'user') {\n            setUserBet({\n              betAmount: data.data.betAmount,\n              autoCashOut: data.data.autoCashOut,\n              status: 'active',\n            });\n            queryClient.invalidateQueries({ queryKey: ['/api/balance'] });\n            toast({\n              title: \"Bet Placed!\",\n              description: `${data.data.betAmount} points bet placed`,\n            });\n          }\n          break;\n        case 'cashed_out':\n          if (data.data.userId === 'user') {\n            setUserBet((prev: any) => ({\n              ...prev,\n              status: 'cashed_out',\n              winAmount: data.data.winAmount,\n              cashOutAt: data.data.multiplier,\n            }));\n            setTotalProfit(prev => prev + data.data.winAmount);\n            queryClient.invalidateQueries({ queryKey: ['/api/balance'] });\n            toast({\n              title: \"Cashed Out Successfully!\",\n              description: `Won ${data.data.winAmount} points at ${data.data.multiplier.toFixed(2)}x`,\n            });\n          }\n          break;\n        case 'live_players':\n          setLivePlayers(data.data);\n          setActivePlayerCount(data.data.length);\n          break;\n      }\n    },\n  });\n\n  // Enhanced flight animation with smooth positioning\n  useEffect(() => {\n    if (gameState?.status === 'flying') {\n      const interval = setInterval(() => {\n        setFlightTime(prev => prev + 0.1);\n        setPlanePosition(prev => {\n          const progress = Math.min(gameState.multiplier / 10, 1);\n          return {\n            x: 50 + (progress * 300),\n            y: progress * 150,\n          };\n        });\n      }, 100);\n      return () => clearInterval(interval);\n    }\n  }, [gameState?.status, gameState?.multiplier]);\n\n  // Mutations for game actions\n  const placeBetMutation = useMutation({\n    mutationFn: async () => {\n      return await fetch('/api/aviator/bet', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          betAmount,\n          autoCashOut: autoCashOut ? parseFloat(autoCashOut) : null,\n        }),\n      }).then(res => res.json());\n    },\n    onSuccess: () => {\n      // Success handled by WebSocket\n    },\n    onError: (error: any) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Please log in\",\n          description: \"You need to be logged in to place bets\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = '/auth';\n        }, 2000);\n        return;\n      }\n      toast({\n        title: \"Failed to place bet\",\n        description: error.message || \"Failed to place bet\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const placeNextBetMutation = useMutation({\n    mutationFn: async () => {\n      return await fetch('/api/aviator/next-bet', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          betAmount,\n          autoCashOut: autoCashOut ? parseFloat(autoCashOut) : null,\n        }),\n      }).then(res => res.json());\n    },\n    onSuccess: () => {\n      // Success handled by WebSocket\n    },\n    onError: (error: any) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Please log in\",\n          description: \"You need to be logged in to place bets\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = '/auth';\n        }, 2000);\n        return;\n      }\n      toast({\n        title: \"Failed to place next bet\",\n        description: error.message || \"Failed to place next bet\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const cashOutMutation = useMutation({\n    mutationFn: async () => {\n      return await fetch('/api/aviator/cash-out', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }).then(res => res.json());\n    },\n    onSuccess: () => {\n      // Success handled by WebSocket\n    },\n    onError: (error: any) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Please log in\",\n          description: \"You need to be logged in to cash out\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = '/auth';\n        }, 2000);\n        return;\n      }\n      toast({\n        title: \"Failed to cash out\",\n        description: error.message || \"Failed to cash out\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const getStatusText = () => {\n    if (!gameState) return \"Connecting...\";\n    switch (gameState.status) {\n      case 'betting':\n        return \"Place your bet!\";\n      case 'flying':\n        return \"Plane is flying!\";\n      case 'crashed':\n        return \"💥 Plane crashed!\";\n      default:\n        return \"Waiting...\";\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-casino-dark via-casino-navy to-casino-midnight\">\n      <Navigation />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <Link href=\"/games\">\n            <button className=\"flex items-center gap-2 text-muted-foreground hover:text-foreground transition-colors mb-4 bg-surface-light hover:bg-surface-lighter px-4 py-2 rounded-lg\">\n              <ArrowLeftIcon className=\"w-4 h-4\" />\n              Back to Games\n            </button>\n          </Link>\n          <h1 className=\"text-4xl font-bold mb-2 text-foreground neon-text\">Aviator ✈️</h1>\n          <p className=\"text-muted-foreground text-lg\">Cash out before you crash out!</p>\n        </div>\n\n        {/* Enterprise-Grade Game Layout */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Main Game Area - Left Column */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            {/* Game Canvas and Multiplier Display */}\n            <div className=\"relative bg-gradient-to-br from-casino-navy via-casino-midnight to-dark rounded-xl p-8 border border-surface-light overflow-hidden min-h-[400px]\">\n              <div className=\"absolute inset-0 bg-gradient-to-t from-transparent to-white opacity-5\"></div>\n              \n              {/* Enhanced Multiplier Display */}\n              <div className=\"relative z-10 mb-6\">\n                <MultiplierDisplay\n                  multiplier={gameState?.multiplier || 1.0}\n                  gameStatus={gameState?.status || 'betting'}\n                  isWarningZone={showWarning && animationPhase === 'warning'}\n                  className=\"mb-4\"\n                />\n                <div className=\"text-center text-muted-foreground\">\n                  {getStatusText()}\n                </div>\n              </div>\n\n              {/* Game Canvas */}\n              <div className=\"relative z-10 h-64\">\n                <GameCanvas\n                  gameStatus={gameState?.status || 'betting'}\n                  multiplier={gameState?.multiplier || 1.0}\n                  showCrashEffect={showCrashEffect}\n                  className=\"w-full h-full\"\n                />\n              </div>\n            </div>\n\n            {/* Betting Panel */}\n            <BettingPanel\n              balance={balanceData?.balance || 0}\n              gameStatus={gameState?.status || 'betting'}\n              betAmount={betAmount}\n              setBetAmount={setBetAmount}\n              autoCashOut={autoCashOut}\n              setAutoCashOut={setAutoCashOut}\n              userBet={userBet}\n              nextRoundBet={nextRoundBet}\n              onPlaceBet={() => placeBetMutation.mutate()}\n              onCashOut={() => cashOutMutation.mutate()}\n              onPlaceNextBet={() => placeNextBetMutation.mutate()}\n              isLoading={placeBetMutation.isPending || cashOutMutation.isPending || placeNextBetMutation.isPending}\n            />\n          </div>\n\n          {/* Statistics Panel - Right Column */}\n          <div className=\"lg:col-span-1\">\n            <StatisticsPanel\n              activePlayerCount={activePlayerCount}\n              totalProfit={totalProfit}\n              totalLoss={totalLoss}\n              biggestWinOfDay={biggestWinOfDay}\n              profitChangePercent={profitChangePercent}\n              lastMultipliers={lastMultipliers}\n            />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}","size_bytes":14195},"client/src/pages/color-game.tsx":{"content":"import { useState } from \"react\";\nimport { Link } from \"wouter\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\nimport Navigation from \"@/components/navigation\";\nimport { ArrowLeftIcon, RotateCcwIcon, PlayIcon, RefreshCwIcon } from \"lucide-react\";\n\nconst gameColors = [\n  { id: 1, class: \"bg-gradient-to-br from-red-500 to-red-600\" },\n  { id: 2, class: \"bg-gradient-to-br from-cyan-500 to-cyan-600\" },\n  { id: 3, class: \"bg-gradient-to-br from-blue-500 to-blue-600\" },\n  { id: 4, class: \"bg-gradient-to-br from-green-500 to-green-600\" },\n  { id: 5, class: \"bg-gradient-to-br from-yellow-500 to-yellow-600\" },\n  { id: 6, class: \"bg-gradient-to-br from-pink-500 to-pink-600\" },\n];\n\nconst pricing = {\n  1: { entry: 20, win: 40 },\n  2: { entry: 30, win: 60 },\n  3: { entry: 45, win: 90 }\n};\n\nexport default function ColorGame() {\n  const [selectedColors, setSelectedColors] = useState<Set<number>>(new Set());\n  const [gameResult, setGameResult] = useState<{\n    result: 'win' | 'loss';\n    winningColor: number;\n    winAmount: number;\n  } | null>(null);\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const { data: balanceData } = useQuery({\n    queryKey: ['/api/balance'],\n  });\n\n  const playGameMutation = useMutation({\n    mutationFn: async () => {\n      const selectedColorsArray = Array.from(selectedColors);\n      const betAmount = pricing[selectedColorsArray.length as keyof typeof pricing].entry;\n      \n      const response = await apiRequest('POST', '/api/color-game/play', {\n        selectedColors: selectedColorsArray,\n        betAmount,\n      });\n      return response.json();\n    },\n    onSuccess: (data) => {\n      setGameResult({\n        result: data.result,\n        winningColor: data.winningColor,\n        winAmount: data.winAmount,\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/balance'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/auth/user'] });\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      toast({\n        title: \"Game Error\",\n        description: error.message || \"Failed to play game\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const toggleColor = (colorId: number) => {\n    if (gameResult) return; // Don't allow selection during result display\n    \n    const newSelected = new Set(selectedColors);\n    if (newSelected.has(colorId)) {\n      newSelected.delete(colorId);\n    } else if (newSelected.size < 3) {\n      newSelected.add(colorId);\n    }\n    setSelectedColors(newSelected);\n  };\n\n  const clearSelection = () => {\n    setSelectedColors(new Set());\n  };\n\n  const playRound = () => {\n    if (selectedColors.size === 0) return;\n    playGameMutation.mutate();\n  };\n\n  const playAgain = () => {\n    setGameResult(null);\n    setSelectedColors(new Set());\n  };\n\n  const count = selectedColors.size;\n  const entryPrice = count > 0 ? pricing[count as keyof typeof pricing].entry : 0;\n  const potentialWin = count > 0 ? pricing[count as keyof typeof pricing].win : 0;\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-dark via-surface to-dark\">\n      <Navigation />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <Link href=\"/games\">\n            <Button variant=\"ghost\" className=\"text-gray-400 hover:text-white transition-colors mb-4\">\n              <ArrowLeftIcon className=\"w-4 h-4 mr-2\" />\n              Back to Games\n            </Button>\n          </Link>\n          <h1 className=\"text-3xl font-bold mb-2 text-white\">Six-Color Challenge 🎨</h1>\n          <p className=\"text-gray-400\">Pick up to 3 colors and win big!</p>\n        </div>\n\n        <div className=\"max-w-4xl\">\n          {/* Game Status */}\n          <Card className=\"bg-surface/80 border-surface-light backdrop-blur-sm mb-6\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between mb-4\">\n                <div>\n                  <p className=\"text-gray-400\">Round Status</p>\n                  <p className=\"text-xl font-bold text-primary\">\n                    {gameResult ? 'Round Complete' : 'Select Colors'}\n                  </p>\n                </div>\n                <div className=\"text-right\">\n                  <p className=\"text-gray-400\">Your Balance</p>\n                  <p className=\"text-xl font-bold text-accent\">\n                    {balanceData?.balance || 0} Points\n                  </p>\n                </div>\n              </div>\n\n              {/* Bet Info */}\n              <div className=\"bg-surface-light rounded-lg p-4\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <p className=\"text-gray-400\">\n                      Colors Selected: <span className=\"text-white font-semibold\">{count}</span>/3\n                    </p>\n                    <p className=\"text-gray-400\">\n                      Entry Price: <span className=\"text-white font-semibold\">{entryPrice} Points</span>\n                    </p>\n                  </div>\n                  <div className=\"text-right\">\n                    <p className=\"text-gray-400\">Potential Win:</p>\n                    <p className=\"text-2xl font-bold text-accent\">{potentialWin} Points</p>\n                  </div>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Color Selection Grid */}\n          <Card className=\"bg-surface/80 border-surface-light backdrop-blur-sm mb-6\">\n            <CardHeader>\n              <CardTitle className=\"text-xl font-semibold text-center text-white\">Choose Your Colors</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 md:grid-cols-3 gap-6 max-w-2xl mx-auto\">\n                {gameColors.map((color) => (\n                  <button\n                    key={color.id}\n                    onClick={() => toggleColor(color.id)}\n                    disabled={playGameMutation.isPending}\n                    className={`w-24 h-24 rounded-full ${color.class} hover:scale-110 transition-transform shadow-lg ${\n                      selectedColors.has(color.id) ? 'ring-4 ring-primary scale-95' : ''\n                    } ${gameResult ? 'cursor-not-allowed' : 'cursor-pointer'}`}\n                  />\n                ))}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Action Buttons */}\n          {!gameResult && (\n            <div className=\"flex gap-4 justify-center mb-6\">\n              <Button\n                onClick={clearSelection}\n                variant=\"outline\"\n                className=\"bg-surface-light text-white border-surface-light hover:bg-surface\"\n              >\n                <RotateCcwIcon className=\"w-4 h-4 mr-2\" />\n                Clear Selection\n              </Button>\n              <Button\n                onClick={playRound}\n                disabled={count === 0 || playGameMutation.isPending}\n                className=\"bg-gradient-to-r from-primary to-secondary text-white px-8\"\n              >\n                {playGameMutation.isPending ? (\n                  <>Processing...</>\n                ) : (\n                  <>\n                    <PlayIcon className=\"w-4 h-4 mr-2\" />\n                    Play Round\n                  </>\n                )}\n              </Button>\n            </div>\n          )}\n\n          {/* Results Area */}\n          {gameResult && (\n            <Card className=\"bg-surface/80 border-surface-light backdrop-blur-sm animate-in slide-in-from-bottom\">\n              <CardHeader>\n                <CardTitle className=\"text-xl font-semibold text-center text-white\">Round Result</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-center mb-6\">\n                  <p className=\"text-gray-400 mb-2\">Winning Color:</p>\n                  <div \n                    className={`w-20 h-20 rounded-full mx-auto shadow-lg ${\n                      gameColors.find(c => c.id === gameResult.winningColor)?.class\n                    }`}\n                  />\n                </div>\n                <div className=\"text-center\">\n                  <div className={`text-2xl font-bold mb-4 ${\n                    gameResult.result === 'win' ? 'text-accent' : 'text-red-400'\n                  }`}>\n                    {gameResult.result === 'win' \n                      ? `🎉 You Won ${gameResult.winAmount} Points!`\n                      : `😔 You Lost ${entryPrice} Points`\n                    }\n                  </div>\n                  <Button\n                    onClick={playAgain}\n                    className=\"bg-gradient-to-r from-primary to-secondary text-white px-8\"\n                  >\n                    <RefreshCwIcon className=\"w-4 h-4 mr-2\" />\n                    Play Again\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </div>\n      </main>\n    </div>\n  );\n}\n","size_bytes":9590},"client/src/pages/games.tsx":{"content":"import { Link } from \"wouter\";\nimport Navigation from \"@/components/navigation\";\nimport GameCard from \"@/components/game-card\";\n\nexport default function Games() {\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-dark via-surface to-dark\">\n      <Navigation />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2 text-white\">Game Lobby 🎯</h1>\n          <p className=\"text-gray-400\">Choose your game and test your luck!</p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Game 1: Six-Color Challenge */}\n          <GameCard\n            title=\"Six-Color Challenge\"\n            description=\"Pick up to 3 colors and win if the random color matches your selection!\"\n            preview={\n              <div className=\"h-48 bg-gradient-to-br from-primary via-secondary to-accent p-6 relative overflow-hidden\">\n                <div className=\"absolute top-4 right-4 bg-black bg-opacity-50 rounded-full px-3 py-1 text-sm font-semibold text-white\">\n                  Live\n                </div>\n                <div className=\"flex flex-wrap gap-2 mt-8\">\n                  <div className=\"w-12 h-12 rounded-full bg-gradient-to-br from-red-500 to-red-600 shadow-lg\"></div>\n                  <div className=\"w-12 h-12 rounded-full bg-gradient-to-br from-cyan-500 to-cyan-600 shadow-lg\"></div>\n                  <div className=\"w-12 h-12 rounded-full bg-gradient-to-br from-blue-500 to-blue-600 shadow-lg\"></div>\n                  <div className=\"w-12 h-12 rounded-full bg-gradient-to-br from-green-500 to-green-600 shadow-lg\"></div>\n                  <div className=\"w-12 h-12 rounded-full bg-gradient-to-br from-yellow-500 to-yellow-600 shadow-lg\"></div>\n                  <div className=\"w-12 h-12 rounded-full bg-gradient-to-br from-pink-500 to-pink-600 shadow-lg\"></div>\n                </div>\n                <h3 className=\"text-2xl font-bold text-white mt-4\">Six-Color Challenge</h3>\n              </div>\n            }\n            rules={[\n              { label: \"1 Color:\", reward: \"20 → 40 Points\" },\n              { label: \"2 Colors:\", reward: \"30 → 60 Points\" },\n              { label: \"3 Colors:\", reward: \"45 → 90 Points\" },\n            ]}\n            href=\"/color-game\"\n            buttonText=\"Play Now\"\n            buttonGradient=\"from-primary to-secondary\"\n          />\n\n          {/* Game 2: Aviator */}\n          <GameCard\n            title=\"Aviator\"\n            description=\"Watch the multiplier rise and cash out before the plane flies away!\"\n            preview={\n              <div className=\"h-48 bg-gradient-to-br from-blue-900 via-blue-700 to-cyan-500 p-6 relative overflow-hidden\">\n                <div className=\"absolute top-4 right-4 bg-black bg-opacity-50 rounded-full px-3 py-1 text-sm font-semibold text-white\">\n                  Live\n                </div>\n                <div className=\"absolute bottom-8 left-8\">\n                  <div className=\"text-4xl text-white opacity-80 transform rotate-12\">✈️</div>\n                </div>\n                <div className=\"absolute top-8 right-16 text-3xl font-bold text-white animate-pulse\">\n                  2.45x\n                </div>\n                <h3 className=\"text-2xl font-bold text-white mt-16\">Aviator</h3>\n                <p className=\"text-blue-200 text-sm\">Cash out before you crash out!</p>\n              </div>\n            }\n            rules={[\n              { label: \"Min Bet:\", reward: \"10 Points\" },\n              { label: \"Max Multiplier:\", reward: \"∞\" },\n              { label: \"House Edge:\", reward: \"3%\" },\n            ]}\n            href=\"/aviator-game\"\n            buttonText=\"Take Flight\"\n            buttonGradient=\"from-secondary to-primary\"\n          />\n        </div>\n      </main>\n    </div>\n  );\n}\n","size_bytes":3880},"client/src/pages/home.tsx":{"content":"import { useAuth } from \"@/hooks/useAuth\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport Navigation from \"@/components/navigation\";\nimport { CoinsIcon, GamepadIcon, TrophyIcon, TrendingUpIcon } from \"lucide-react\";\n\nexport default function Home() {\n  const { user } = useAuth();\n\n  const { data: gameHistory } = useQuery({\n    queryKey: ['/api/game-history'],\n  });\n\n  const { data: balanceData } = useQuery({\n    queryKey: ['/api/balance'],\n  });\n\n  const winRate = user?.gamesPlayed ? Math.round((user.totalWinnings / (user.gamesPlayed * 30)) * 100) : 0;\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-dark via-surface to-dark\">\n      <Navigation />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        {/* Welcome Header */}\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2 text-white\">\n            Welcome back, <span className=\"text-primary\">{user?.firstName || \"Player\"}</span>! 🎮\n          </h1>\n          <p className=\"text-gray-400\">Ready to test your luck and skills?</p>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\n          <Card className=\"bg-surface/80 border-surface-light backdrop-blur-sm\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-gray-400 text-sm\">Current Balance</p>\n                  <p className=\"text-2xl font-bold text-accent\">\n                    {balanceData?.balance || user?.balance || 0}\n                  </p>\n                </div>\n                <CoinsIcon className=\"h-8 w-8 text-accent opacity-60\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-surface/80 border-surface-light backdrop-blur-sm\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-gray-400 text-sm\">Games Played</p>\n                  <p className=\"text-2xl font-bold text-primary\">{user?.gamesPlayed || 0}</p>\n                </div>\n                <GamepadIcon className=\"h-8 w-8 text-primary opacity-60\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-surface/80 border-surface-light backdrop-blur-sm\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-gray-400 text-sm\">Total Winnings</p>\n                  <p className=\"text-2xl font-bold text-secondary\">{user?.totalWinnings || 0}</p>\n                </div>\n                <TrophyIcon className=\"h-8 w-8 text-secondary opacity-60\" />\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-surface/80 border-surface-light backdrop-blur-sm\">\n            <CardContent className=\"p-6\">\n              <div className=\"flex items-center justify-between\">\n                <div>\n                  <p className=\"text-gray-400 text-sm\">Win Rate</p>\n                  <p className=\"text-2xl font-bold text-white\">{winRate}%</p>\n                </div>\n                <TrendingUpIcon className=\"h-8 w-8 text-white opacity-60\" />\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Recent Games */}\n        <Card className=\"bg-surface/80 border-surface-light backdrop-blur-sm mb-8\">\n          <CardHeader>\n            <CardTitle className=\"text-xl font-semibold text-white\">Recent Activity</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {gameHistory && gameHistory.length > 0 ? (\n                gameHistory.slice(0, 5).map((game: any) => (\n                  <div key={game.id} className=\"flex items-center justify-between py-3 border-b border-surface-light last:border-b-0\">\n                    <div className=\"flex items-center space-x-3\">\n                      <div className={`w-10 h-10 rounded-lg flex items-center justify-center ${\n                        game.gameType === 'color_game' \n                          ? 'bg-gradient-to-br from-primary to-secondary' \n                          : 'bg-gradient-to-br from-secondary to-primary'\n                      }`}>\n                        {game.gameType === 'color_game' ? (\n                          <div className=\"text-white\">🎨</div>\n                        ) : (\n                          <div className=\"text-white\">✈️</div>\n                        )}\n                      </div>\n                      <div>\n                        <p className=\"font-medium text-white\">\n                          {game.gameType === 'color_game' ? 'Six-Color Challenge' : 'Aviator'}\n                        </p>\n                        <p className=\"text-sm text-gray-400\">\n                          {new Date(game.createdAt).toLocaleString()}\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <p className={`font-semibold ${game.result === 'win' ? 'text-accent' : 'text-red-400'}`}>\n                        {game.result === 'win' ? '+' : '-'}{game.result === 'win' ? game.winAmount : game.betAmount} Points\n                      </p>\n                      <Badge variant={game.result === 'win' ? 'default' : 'destructive'} className=\"text-xs\">\n                        {game.result === 'win' ? 'Win' : 'Loss'}\n                      </Badge>\n                    </div>\n                  </div>\n                ))\n              ) : (\n                <div className=\"text-center py-8\">\n                  <GamepadIcon className=\"h-12 w-12 text-gray-500 mx-auto mb-4\" />\n                  <p className=\"text-gray-400\">No games played yet</p>\n                  <p className=\"text-sm text-gray-500 mt-2\">Start playing to see your activity here!</p>\n                </div>\n              )}\n            </div>\n          </CardContent>\n        </Card>\n      </main>\n    </div>\n  );\n}\n","size_bytes":6297},"client/src/pages/landing.tsx":{"content":"import { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { GamepadIcon, CoinsIcon, TrophyIcon, UsersIcon } from \"lucide-react\";\n\nexport default function Landing() {\n  const handleReplitLogin = () => {\n    window.location.href = \"/api/login\";\n  };\n\n  const handleOtpLogin = () => {\n    window.location.href = \"/otp-login\";\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-dark via-surface to-dark\">\n      {/* Hero Section */}\n      <div className=\"relative overflow-hidden\">\n        <div className=\"absolute inset-0 bg-gradient-to-r from-primary/20 to-secondary/20\"></div>\n        <div className=\"relative max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-24\">\n          <div className=\"text-center\">\n            <div className=\"text-6xl mb-6\">🎮</div>\n            <h1 className=\"text-4xl md:text-6xl font-bold mb-6 bg-gradient-to-r from-primary to-secondary bg-clip-text text-transparent\">\n              GameHub Pro\n            </h1>\n            <p className=\"text-xl md:text-2xl text-gray-300 mb-8 max-w-3xl mx-auto\">\n              Experience the thrill of premium gaming with our cutting-edge platform. \n              Play, win, and compete with players worldwide.\n            </p>\n            <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\n              <Button \n                onClick={handleOtpLogin} \n                size=\"lg\" \n                className=\"bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white text-lg px-8 py-6 rounded-xl transition-all duration-200 transform hover:scale-[1.02]\"\n              >\n                Login with Email/Phone\n              </Button>\n              <Button \n                onClick={handleReplitLogin} \n                variant=\"outline\"\n                size=\"lg\" \n                className=\"border-purple-500 text-purple-400 hover:bg-purple-500 hover:text-white text-lg px-8 py-6 rounded-xl transition-all duration-200\"\n              >\n                Continue with Replit\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Features Section */}\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-24\">\n        <div className=\"text-center mb-16\">\n          <h2 className=\"text-3xl md:text-4xl font-bold mb-4 text-white\">\n            Why Choose GameHub Pro?\n          </h2>\n          <p className=\"text-xl text-gray-400 max-w-2xl mx-auto\">\n            Join thousands of players in the ultimate gaming experience\n          </p>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n          <Card className=\"bg-surface/80 border-surface-light backdrop-blur-sm\">\n            <CardHeader className=\"text-center\">\n              <GamepadIcon className=\"w-12 h-12 text-primary mx-auto mb-4\" />\n              <CardTitle className=\"text-white\">Premium Games</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <CardDescription className=\"text-gray-400 text-center\">\n                Experience our exclusive Six-Color Challenge and thrilling Aviator games\n              </CardDescription>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-surface/80 border-surface-light backdrop-blur-sm\">\n            <CardHeader className=\"text-center\">\n              <CoinsIcon className=\"w-12 h-12 text-accent mx-auto mb-4\" />\n              <CardTitle className=\"text-white\">Instant Rewards</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <CardDescription className=\"text-gray-400 text-center\">\n                Win points instantly and cash out your earnings anytime\n              </CardDescription>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-surface/80 border-surface-light backdrop-blur-sm\">\n            <CardHeader className=\"text-center\">\n              <TrophyIcon className=\"w-12 h-12 text-secondary mx-auto mb-4\" />\n              <CardTitle className=\"text-white\">Competitive Play</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <CardDescription className=\"text-gray-400 text-center\">\n                Climb the leaderboards and prove you're the ultimate gamer\n              </CardDescription>\n            </CardContent>\n          </Card>\n\n          <Card className=\"bg-surface/80 border-surface-light backdrop-blur-sm\">\n            <CardHeader className=\"text-center\">\n              <UsersIcon className=\"w-12 h-12 text-primary mx-auto mb-4\" />\n              <CardTitle className=\"text-white\">Live Multiplayer</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <CardDescription className=\"text-gray-400 text-center\">\n                Play against real players in real-time multiplayer games\n              </CardDescription>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n\n      {/* CTA Section */}\n      <div className=\"bg-gradient-to-r from-primary to-secondary py-24\">\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-center\">\n          <h2 className=\"text-3xl md:text-4xl font-bold mb-6 text-white\">\n            Ready to Start Your Gaming Journey?\n          </h2>\n          <p className=\"text-xl text-white/90 mb-8 max-w-2xl mx-auto\">\n            Join GameHub Pro today and experience the future of online gaming\n          </p>\n          <Button \n            onClick={handleOtpLogin} \n            size=\"lg\" \n            variant=\"secondary\"\n            className=\"bg-white text-primary text-lg px-8 py-6 rounded-xl hover:bg-gray-100 transition-colors\"\n          >\n            Get Started Free\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":5783},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/otp-login.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useLocation } from \"wouter\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { apiRequest } from \"../lib/queryClient\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Loader2, Mail, Phone, Lock, Sparkles } from \"lucide-react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport OtpInfoAlert from \"@/components/otp-info-alert\";\n\ninterface SendOtpResponse {\n  success: boolean;\n  message: string;\n}\n\ninterface VerifyOtpResponse {\n  success: boolean;\n  message: string;\n  token?: string;\n  user?: any;\n  isNewUser?: boolean;\n}\n\nexport default function OtpLogin() {\n  const [location, setLocation] = useLocation();\n  const { toast } = useToast();\n  \n  const [authType, setAuthType] = useState<\"email\" | \"phone\">(\"email\");\n  const [identifier, setIdentifier] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [step, setStep] = useState<\"identifier\" | \"otp\">(\"identifier\");\n  const [timer, setTimer] = useState(0);\n\n  // Timer for OTP resend\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n    if (timer > 0) {\n      interval = setInterval(() => {\n        setTimer((prev) => prev - 1);\n      }, 1000);\n    }\n    return () => clearInterval(interval);\n  }, [timer]);\n\n  // Send OTP mutation\n  const sendOtpMutation = useMutation({\n    mutationFn: async (data: { identifier: string; type: \"email\" | \"phone\" }) => {\n      const response = await apiRequest('POST', '/api/auth/send-otp', data);\n      return response.json() as Promise<SendOtpResponse>;\n    },\n    onSuccess: (data) => {\n      if (data.success) {\n        setStep(\"otp\");\n        setTimer(120); // 2 minutes\n        toast({\n          title: \"OTP Sent!\",\n          description: data.message,\n        });\n      } else {\n        toast({\n          title: \"Error\",\n          description: data.message,\n          variant: \"destructive\",\n        });\n      }\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Error\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Verify OTP mutation\n  const verifyOtpMutation = useMutation({\n    mutationFn: async (data: { identifier: string; otp: string; type: \"email\" | \"phone\" }) => {\n      const response = await apiRequest('POST', '/api/auth/verify-otp', data);\n      return response.json() as Promise<VerifyOtpResponse>;\n    },\n    onSuccess: (data) => {\n      if (data.success && data.token) {\n        // Store JWT token\n        localStorage.setItem('authToken', data.token);\n        \n        toast({\n          title: data.isNewUser ? \"Welcome!\" : \"Login Successful!\",\n          description: data.message,\n        });\n\n        // Redirect to home or previous page\n        const redirectTo = new URLSearchParams(window.location.search).get('redirect') || '/';\n        window.location.href = redirectTo;\n      } else {\n        toast({\n          title: \"Error\",\n          description: data.message,\n          variant: \"destructive\",\n        });\n      }\n    },\n    onError: (error: Error) => {\n      toast({\n        title: \"Error\",\n        description: error.message,\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleSendOtp = () => {\n    if (!identifier.trim()) {\n      toast({\n        title: \"Error\",\n        description: `Please enter your ${authType === 'email' ? 'email' : 'phone number'}`,\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    // Validate email format (Gmail only)\n    if (authType === 'email' && !identifier.endsWith('@gmail.com')) {\n      toast({\n        title: \"Error\",\n        description: \"Please use a Gmail address\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    // Validate phone format\n    if (authType === 'phone' && (!identifier.startsWith('+') || identifier.length < 10)) {\n      toast({\n        title: \"Error\",\n        description: \"Please enter a valid phone number with country code\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    sendOtpMutation.mutate({ identifier, type: authType });\n  };\n\n  const handleVerifyOtp = () => {\n    if (otp.length !== 6) {\n      toast({\n        title: \"Error\",\n        description: \"Please enter the complete 6-digit OTP\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    verifyOtpMutation.mutate({ identifier, otp, type: authType });\n  };\n\n  const handleResendOtp = () => {\n    if (timer > 0) return;\n    sendOtpMutation.mutate({ identifier, type: authType });\n  };\n\n  const handleBackToIdentifier = () => {\n    setStep(\"identifier\");\n    setOtp(\"\");\n    setTimer(0);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-violet-800 flex items-center justify-center p-4\">\n      <div className=\"w-full max-w-md\">\n        <Card className=\"bg-black/80 border-purple-500/30 shadow-2xl shadow-purple-500/20\">\n          <CardHeader className=\"text-center\">\n            <div className=\"flex items-center justify-center mb-4\">\n              <div className=\"relative\">\n                <Sparkles className=\"h-12 w-12 text-purple-400 animate-pulse\" />\n                <div className=\"absolute inset-0 bg-purple-400 rounded-full animate-ping opacity-20\" />\n              </div>\n            </div>\n            <CardTitle className=\"text-2xl font-bold bg-gradient-to-r from-purple-400 to-pink-400 bg-clip-text text-transparent\">\n              GameHub Pro\n            </CardTitle>\n            <CardDescription className=\"text-gray-300\">\n              {step === \"identifier\" \n                ? \"Enter your details to get started\" \n                : \"Enter the OTP sent to your \" + authType}\n            </CardDescription>\n          </CardHeader>\n\n          <CardContent className=\"space-y-6\">\n            <OtpInfoAlert />\n            {step === \"identifier\" ? (\n              <>\n                <Tabs value={authType} onValueChange={(value) => setAuthType(value as \"email\" | \"phone\")}>\n                  <TabsList className=\"grid w-full grid-cols-2 bg-gray-800 border-gray-700\">\n                    <TabsTrigger value=\"email\" className=\"flex items-center gap-2 data-[state=active]:bg-purple-600\">\n                      <Mail className=\"h-4 w-4\" />\n                      Gmail\n                    </TabsTrigger>\n                    <TabsTrigger value=\"phone\" className=\"flex items-center gap-2 data-[state=active]:bg-purple-600\">\n                      <Phone className=\"h-4 w-4\" />\n                      Phone\n                    </TabsTrigger>\n                  </TabsList>\n\n                  <TabsContent value=\"email\" className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"email\" className=\"text-gray-200\">Gmail Address</Label>\n                      <Input\n                        id=\"email\"\n                        type=\"email\"\n                        placeholder=\"your.email@gmail.com\"\n                        value={identifier}\n                        onChange={(e) => setIdentifier(e.target.value)}\n                        className=\"bg-gray-800 border-gray-600 text-white placeholder:text-gray-400 focus:border-purple-500 focus:ring-purple-500\"\n                        onKeyDown={(e) => e.key === 'Enter' && handleSendOtp()}\n                      />\n                    </div>\n                    <Alert className=\"bg-blue-900/50 border-blue-500/50\">\n                      <Mail className=\"h-4 w-4 text-blue-400\" />\n                      <AlertDescription className=\"text-blue-200\">\n                        We support Gmail addresses only. You'll receive a 6-digit code via email.\n                      </AlertDescription>\n                    </Alert>\n                  </TabsContent>\n\n                  <TabsContent value=\"phone\" className=\"space-y-4\">\n                    <div className=\"space-y-2\">\n                      <Label htmlFor=\"phone\" className=\"text-gray-200\">Phone Number</Label>\n                      <Input\n                        id=\"phone\"\n                        type=\"tel\"\n                        placeholder=\"+919876543210\"\n                        value={identifier}\n                        onChange={(e) => {\n                          let value = e.target.value;\n                          // Auto-add +91 if user starts typing without country code\n                          if (value && !value.startsWith('+') && /^\\d/.test(value)) {\n                            value = '+91' + value;\n                          }\n                          setIdentifier(value);\n                        }}\n                        className=\"bg-gray-800 border-gray-600 text-white placeholder:text-gray-400 focus:border-purple-500 focus:ring-purple-500\"\n                        onKeyDown={(e) => e.key === 'Enter' && handleSendOtp()}\n                        onFocus={(e) => {\n                          // Set default +91 if field is empty\n                          if (!identifier) {\n                            setIdentifier('+91');\n                          }\n                        }}\n                      />\n                    </div>\n                    <Alert className=\"bg-green-900/50 border-green-500/50\">\n                      <Phone className=\"h-4 w-4 text-green-400\" />\n                      <AlertDescription className=\"text-green-200\">\n                        +91 (India) is set by default. You'll receive a 6-digit code via SMS.\n                      </AlertDescription>\n                    </Alert>\n                  </TabsContent>\n                </Tabs>\n\n                <Button\n                  onClick={handleSendOtp}\n                  disabled={sendOtpMutation.isPending}\n                  className=\"w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white font-semibold py-2 px-4 rounded-lg transition-all duration-200 transform hover:scale-[1.02] disabled:opacity-50 disabled:cursor-not-allowed\"\n                >\n                  {sendOtpMutation.isPending ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                      Sending OTP...\n                    </>\n                  ) : (\n                    <>\n                      <Lock className=\"mr-2 h-4 w-4\" />\n                      Send OTP\n                    </>\n                  )}\n                </Button>\n              </>\n            ) : (\n              <>\n                <div className=\"space-y-4\">\n                  <div className=\"text-center\">\n                    <p className=\"text-gray-300 mb-2\">\n                      OTP sent to:\n                    </p>\n                    <p className=\"font-semibold text-purple-400\">\n                      {authType === 'email' ? identifier : identifier.replace(/(\\d{3})\\d{4}(\\d{3})/, '$1****$2')}\n                    </p>\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"otp\" className=\"text-gray-200\">Enter 6-Digit OTP</Label>\n                    <Input\n                      id=\"otp\"\n                      type=\"text\"\n                      placeholder=\"123456\"\n                      value={otp}\n                      onChange={(e) => setOtp(e.target.value.replace(/\\D/g, '').slice(0, 6))}\n                      className=\"bg-gray-800 border-gray-600 text-white placeholder:text-gray-400 focus:border-purple-500 focus:ring-purple-500 text-center text-lg tracking-widest\"\n                      maxLength={6}\n                      onKeyDown={(e) => e.key === 'Enter' && handleVerifyOtp()}\n                      autoFocus\n                    />\n                  </div>\n\n                  <div className=\"flex justify-between items-center text-sm\">\n                    <Button\n                      variant=\"ghost\"\n                      onClick={handleBackToIdentifier}\n                      className=\"text-gray-400 hover:text-white p-0 h-auto\"\n                    >\n                      ← Change {authType}\n                    </Button>\n                    \n                    <Button\n                      variant=\"ghost\"\n                      onClick={handleResendOtp}\n                      disabled={timer > 0 || sendOtpMutation.isPending}\n                      className=\"text-purple-400 hover:text-purple-300 p-0 h-auto disabled:opacity-50\"\n                    >\n                      {timer > 0 ? `Resend in ${timer}s` : 'Resend OTP'}\n                    </Button>\n                  </div>\n\n                  <Button\n                    onClick={handleVerifyOtp}\n                    disabled={verifyOtpMutation.isPending || otp.length !== 6}\n                    className=\"w-full bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white font-semibold py-2 px-4 rounded-lg transition-all duration-200 transform hover:scale-[1.02] disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    {verifyOtpMutation.isPending ? (\n                      <>\n                        <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                        Verifying...\n                      </>\n                    ) : (\n                      'Verify & Login'\n                    )}\n                  </Button>\n                </div>\n              </>\n            )}\n\n            <div className=\"text-center text-sm text-gray-400\">\n              <p>\n                New users get <span className=\"text-purple-400 font-semibold\">1000 bonus points</span> upon registration!\n              </p>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}","size_bytes":13891},"client/src/pages/topup.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\nimport Navigation from \"@/components/navigation\";\nimport { CoinsIcon, CreditCardIcon, DollarSignIcon, CrownIcon } from \"lucide-react\";\n\ninterface TopUpPackage {\n  id: string;\n  name: string;\n  price: number;\n  points: number;\n  bonus?: number;\n  popular?: boolean;\n  icon: React.ReactNode;\n}\n\nconst packages: TopUpPackage[] = [\n  {\n    id: 'starter',\n    name: 'Starter Pack',\n    price: 50,\n    points: 500,\n    icon: <CoinsIcon className=\"w-8 h-8 text-primary\" />,\n  },\n  {\n    id: 'value',\n    name: 'Value Pack',\n    price: 100,\n    points: 1100,\n    bonus: 100,\n    popular: true,\n    icon: <DollarSignIcon className=\"w-8 h-8 text-accent\" />,\n  },\n  {\n    id: 'premium',\n    name: 'Premium Pack',\n    price: 200,\n    points: 2500,\n    bonus: 300,\n    icon: <CrownIcon className=\"w-8 h-8 text-secondary\" />,\n  },\n];\n\nexport default function TopUp() {\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const { data: balanceData } = useQuery({\n    queryKey: ['/api/balance'],\n  });\n\n  const topUpMutation = useMutation({\n    mutationFn: async (packageId: string) => {\n      const response = await apiRequest('POST', '/api/topup', {\n        package: packageId,\n      });\n      return response.json();\n    },\n    onSuccess: (data) => {\n      toast({\n        title: \"Top-up Successful!\",\n        description: `${data.transaction.amount} points added to your balance.`,\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/balance'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/auth/user'] });\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      toast({\n        title: \"Top-up Failed\",\n        description: error.message || \"Failed to process payment\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handlePurchase = (packageId: string) => {\n    topUpMutation.mutate(packageId);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-dark via-surface to-dark\">\n      <Navigation />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2 text-white\">Top Up Points 💳</h1>\n          <p className=\"text-gray-400\">Add more points to continue playing!</p>\n        </div>\n\n        {/* Current Balance */}\n        <Card className=\"bg-surface/80 border-surface-light backdrop-blur-sm mb-8\">\n          <CardContent className=\"p-6\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-gray-400 text-sm\">Current Balance</p>\n                <p className=\"text-3xl font-bold text-accent\">\n                  {balanceData?.balance || 0} Points\n                </p>\n              </div>\n              <CoinsIcon className=\"h-12 w-12 text-accent opacity-60\" />\n            </div>\n          </CardContent>\n        </Card>\n\n        <div className=\"max-w-4xl\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6 mb-8\">\n            {packages.map((pkg) => (\n              <Card key={pkg.id} className={`bg-surface/80 border-surface-light backdrop-blur-sm hover:border-primary transition-colors relative ${pkg.popular ? 'border-accent' : ''}`}>\n                {pkg.popular && (\n                  <div className=\"absolute -top-3 left-1/2 transform -translate-x-1/2\">\n                    <Badge className=\"bg-accent text-white\">\n                      POPULAR\n                    </Badge>\n                  </div>\n                )}\n                <CardContent className=\"p-6 text-center\">\n                  <div className=\"bg-primary/20 rounded-full w-16 h-16 flex items-center justify-center mx-auto mb-4\">\n                    {pkg.icon}\n                  </div>\n                  <CardTitle className=\"text-xl font-bold mb-2 text-white\">{pkg.name}</CardTitle>\n                  <p className=\"text-3xl font-bold text-primary mb-2\">₹{pkg.price}</p>\n                  <p className=\"text-gray-400 mb-2\">{pkg.points} Points</p>\n                  {pkg.bonus && (\n                    <p className=\"text-xs text-accent mb-4\">+{pkg.bonus} Bonus Points</p>\n                  )}\n                  <Button \n                    onClick={() => handlePurchase(pkg.id)}\n                    disabled={topUpMutation.isPending}\n                    className={`w-full font-semibold py-3 px-4 rounded-lg transition-opacity ${\n                      pkg.popular \n                        ? 'bg-accent text-white hover:bg-accent/90' \n                        : pkg.id === 'premium'\n                        ? 'bg-secondary text-white hover:bg-secondary/90'\n                        : 'bg-primary text-white hover:bg-primary/90'\n                    }`}\n                  >\n                    {topUpMutation.isPending ? 'Processing...' : 'Purchase'}\n                  </Button>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n\n          {/* Payment Methods */}\n          <Card className=\"bg-surface/80 border-surface-light backdrop-blur-sm\">\n            <CardHeader>\n              <CardTitle className=\"text-xl font-semibold text-white\">Payment Methods</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n                <div className=\"flex items-center justify-center p-4 bg-surface-light rounded-lg\">\n                  <CreditCardIcon className=\"w-6 h-6 text-blue-500 mr-2\" />\n                  <span className=\"font-medium text-white\">Visa</span>\n                </div>\n                <div className=\"flex items-center justify-center p-4 bg-surface-light rounded-lg\">\n                  <CreditCardIcon className=\"w-6 h-6 text-red-500 mr-2\" />\n                  <span className=\"font-medium text-white\">Mastercard</span>\n                </div>\n                <div className=\"flex items-center justify-center p-4 bg-surface-light rounded-lg\">\n                  <div className=\"w-6 h-6 bg-blue-600 rounded mr-2\"></div>\n                  <span className=\"font-medium text-white\">PayPal</span>\n                </div>\n                <div className=\"flex items-center justify-center p-4 bg-surface-light rounded-lg\">\n                  <div className=\"w-6 h-6 bg-green-500 rounded mr-2\"></div>\n                  <span className=\"font-medium text-white\">UPI</span>\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n    </div>\n  );\n}\n","size_bytes":7180},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n","size_bytes":1419},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n","size_bytes":1128},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-2 w-full overflow-hidden rounded-full bg-surface-light\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-neon-blue transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }","size_bytes":782},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Textarea = React.forwardRef<\n  HTMLTextAreaElement,\n  React.ComponentProps<\"textarea\">\n>(({ className, ...props }, ref) => {\n  return (\n    <textarea\n      className={cn(\n        \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  )\n})\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n","size_bytes":689},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"attached_assets/Aviator_UI_Enhancement_Prompt_5000_lines_1755159843866.md":{"content":"# Aviator Game — Enterprise-Grade UI & Styling Enhancement Prompt (5000 Lines)\nGenerated: 2025-08-14 08:22:50 \n\n> Objective: Deliver a boardroom-ready, end-to-end enhancement charter for the **existing Aviator Game** UI/UX, theming, and front-end engineering practices. This prompt is designed for cross-functional execution across Product, Design, Frontend, QA, and Compliance, with a bias for action and measurable outcomes.\n> Tone: Corporate, outcomes-driven, and optimization-focused.\n\n---\n## 1. North-Star KPIs & Guardrails\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 2. Foundational Design System (FDS) — Tokens & Primitives\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 3. Atomic Components — Definition of Done\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 4. Molecules & Organisms — Interaction Contracts\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 5. Responsive Grid Strategy & Breakpoints\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 6. Accessibility (A11y) — WCAG 2.2 AA Objectives\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 7. Motion Language & Micro-Interactions\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 8. Theming Architecture (Light/Dark/High-Contrast)\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 9. Internationalization & Localization (i18n/L10n)\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 10. Performance Engineering SLAs\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 11. Observability, Telemetry & UX Analytics\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 12. Security & Compliance (Payments/GDPR/PCI)\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 13. Brand & Visual Language Governance\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 14. Design QA & Visual Regression Testing\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 15. Prototyping, Handoff & Storybook Coverage\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 16. UI States Matrix: Idle, Loading, Success, Empty, Error\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 17. Notifications & Toaster Framework\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 18. Forms, Inputs & Validation UX\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 19. Payment Flows — UI & Edge Case Handling\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 20. Onboarding & First-Time User Experience (FTUE)\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 21. Player Dashboard & Live Ops Widgets\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 22. Bet Placement Panel — Ergonomics & Safety\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 23. Real-Time Multiplier Visualization — Flight HUD\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 24. Leaderboard & Social Proof Surfaces\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 25. Session Persistence & Re-Entry UX\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 26. Offline/Low-Bandwidth UX\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 27. Progressive Enhancement & Graceful Degradation\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 28. Animation & GPU Budgeting\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 29. Iconography & Illustration System\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 30. Copywriting, Tone & Microcopy System\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 31. Design Debt Backlog & Sunsetting\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 32. Governance: RACI & Decision Logs\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 33. Release Readiness & Rollout Strategy\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 34. A/B/n Experimentation Playbook\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 35. Design Tokens to Code Pipeline (CI/CD)\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 36. Themeable Charting for Telemetry Panels\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 37. Dark Mode Audits & Contrast Budget\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 38. Screen Reader Narratives & Roles\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 39. Keyboard Navigation & Focus Rings\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 40. Localization Edge Cases (RTL/CTC/Pluralization)\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 41. Color System & Contrast Ratios\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 42. Spacing, Grids & Rhythm\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 43. Typography Scale & Legibility\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 44. Assets, Sprites & Compression\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 45. SVGs, Lottie & Sprite Sheets\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 46. Live Animations Sync with Game Loop\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 47. HUD (Head-Up Display) Refinements\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 48. Skeuomorphic vs. Flat — Decision Brief\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 49. Sound & Haptics (if applicable)\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 50. Anti-Pattern Watchlist & Do-Not-Do\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n## 51. Operational Playbooks & SLAs\n**Mandate:** Drive north-star alignment and harden the UI surface area to enterprise-grade benchmarks, with zero regression tolerance for core revenue flows.\n**Key Outcomes:**\n- Codify a **Definition of Awesome (DoA)** for the Aviator UI that uplifts trust, clarity, and speed-to-decision.\n- Reduce cognitive load via **information scent** and **progressive disclosure**.\n- Instrument the experience with **leading indicators** (interaction friction, drop-off heatmaps) and **lagging indicators** (ARPU uplift, session length).\n- Create a **closed-loop design-to-code pipeline** with automated guardrails (linting, visual regression, a11y gates).\n**Deliverables:**\n- Architecture diagrams, Storybook coverage, token JSON files, Figma library parity.\n- Signed-off acceptance criteria with edge-case coverage and rollback plans.\n**KPIs:** Time-to-first-bet (TTFB*UI), error rate in payment confirmation modals, tooltip engagement, average scan time on bet panel.\n### 52. Component — Primary Button\n**Definition of Done (DoD):**\n- States: default, hover, active, focus-visible, disabled, loading (spinner with ARIA live polite).\n- Min touch target: 44x44 dp; spacing tokens: `space.2` horizontal padding, `space.3` vertical.\n- Focus ring: 2px outline offset by 2px; must pass contrast ratio >= 3:1 against adjacent surfaces.\n- Microcopy: verb-first, e.g., 'Place Bet', 'Cash Out Now', avoid ambiguity.\n- Latency masking: optimistic UI with rollback on server NACK.\n**Non-Goals:** Avoid novelty animations that compromise scanability or legibility.\n**Test Matrix:** Visual states x input modalities (mouse, touch, keyboard) x themes (light/dark/high-contrast).\n### 53. Component — Input Field\n**Definition of Done (DoD):**\n- States: idle, focus, filled, error, warning, success; inline validation with debounce 300ms.\n- Placeholder ≠ label; use floating labels or persistent labels above field.\n- Error messaging: human, action-oriented, 12–16 chars if possible; tooltip for extended help.\n- Assistive tech: `aria-describedby` for hint + error.\n- Paste handling: trim spaces, normalize unicode, sanitize.\n**Non-Goals:** Avoid novelty animations that compromise scanability or legibility.\n**Test Matrix:** Visual states x input modalities (mouse, touch, keyboard) x themes (light/dark/high-contrast).\n### 54. Component — Bet Slider\n**Definition of Done (DoD):**\n- Range: min stake to max risk policy; step tokens; keyboard accessible with arrow keys.\n- Haptic/sonic feedback threshold at bonus boundaries (if platform supports).\n- Snapping to safe/most-used values; display ghost markers for historical stakes.\n- Real-time validation with balance checks; disable beyond policy cap.\n- Display dynamic helper text with projected payout.\n**Non-Goals:** Avoid novelty animations that compromise scanability or legibility.\n**Test Matrix:** Visual states x input modalities (mouse, touch, keyboard) x themes (light/dark/high-contrast).\n### 55. Component — Toaster Notification\n**Definition of Done (DoD):**\n- Queue length max 3; oldest auto-dismiss first; persistent for errors.\n- Motion: 120–180ms spring-in, 100–140ms fade-out.\n- Placement respects safe areas (mobile notch/keyboard).\n- Announcements as aria-live assertive for blocking errors; polite for info.\n- Allow user to manually dismiss; store preference with TTL.\n**Non-Goals:** Avoid novelty animations that compromise scanability or legibility.\n**Test Matrix:** Visual states x input modalities (mouse, touch, keyboard) x themes (light/dark/high-contrast).\n### 56. User Story US-1\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 1.1: Implement telemetry event `ui.story.1.start` and `ui.story.1.done`.\n- Acceptance 1.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 1.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 1.4: Add E2E test case `US1_flow` covering happy path and two edge cases.\n### 57. User Story US-2\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 2.1: Implement telemetry event `ui.story.2.start` and `ui.story.2.done`.\n- Acceptance 2.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 2.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 2.4: Add E2E test case `US2_flow` covering happy path and two edge cases.\n### 58. User Story US-3\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 3.1: Implement telemetry event `ui.story.3.start` and `ui.story.3.done`.\n- Acceptance 3.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 3.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 3.4: Add E2E test case `US3_flow` covering happy path and two edge cases.\n### 59. User Story US-4\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 4.1: Implement telemetry event `ui.story.4.start` and `ui.story.4.done`.\n- Acceptance 4.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 4.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 4.4: Add E2E test case `US4_flow` covering happy path and two edge cases.\n### 60. User Story US-5\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 5.1: Implement telemetry event `ui.story.5.start` and `ui.story.5.done`.\n- Acceptance 5.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 5.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 5.4: Add E2E test case `US5_flow` covering happy path and two edge cases.\n### 61. User Story US-6\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 6.1: Implement telemetry event `ui.story.6.start` and `ui.story.6.done`.\n- Acceptance 6.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 6.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 6.4: Add E2E test case `US6_flow` covering happy path and two edge cases.\n### 62. User Story US-7\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 7.1: Implement telemetry event `ui.story.7.start` and `ui.story.7.done`.\n- Acceptance 7.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 7.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 7.4: Add E2E test case `US7_flow` covering happy path and two edge cases.\n### 63. User Story US-8\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 8.1: Implement telemetry event `ui.story.8.start` and `ui.story.8.done`.\n- Acceptance 8.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 8.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 8.4: Add E2E test case `US8_flow` covering happy path and two edge cases.\n### 64. User Story US-9\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 9.1: Implement telemetry event `ui.story.9.start` and `ui.story.9.done`.\n- Acceptance 9.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 9.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 9.4: Add E2E test case `US9_flow` covering happy path and two edge cases.\n### 65. User Story US-10\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 10.1: Implement telemetry event `ui.story.10.start` and `ui.story.10.done`.\n- Acceptance 10.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 10.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 10.4: Add E2E test case `US10_flow` covering happy path and two edge cases.\n### 66. User Story US-11\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 11.1: Implement telemetry event `ui.story.11.start` and `ui.story.11.done`.\n- Acceptance 11.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 11.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 11.4: Add E2E test case `US11_flow` covering happy path and two edge cases.\n### 67. User Story US-12\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 12.1: Implement telemetry event `ui.story.12.start` and `ui.story.12.done`.\n- Acceptance 12.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 12.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 12.4: Add E2E test case `US12_flow` covering happy path and two edge cases.\n### 68. User Story US-13\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 13.1: Implement telemetry event `ui.story.13.start` and `ui.story.13.done`.\n- Acceptance 13.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 13.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 13.4: Add E2E test case `US13_flow` covering happy path and two edge cases.\n### 69. User Story US-14\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 14.1: Implement telemetry event `ui.story.14.start` and `ui.story.14.done`.\n- Acceptance 14.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 14.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 14.4: Add E2E test case `US14_flow` covering happy path and two edge cases.\n### 70. User Story US-15\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 15.1: Implement telemetry event `ui.story.15.start` and `ui.story.15.done`.\n- Acceptance 15.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 15.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 15.4: Add E2E test case `US15_flow` covering happy path and two edge cases.\n### 71. User Story US-16\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 16.1: Implement telemetry event `ui.story.16.start` and `ui.story.16.done`.\n- Acceptance 16.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 16.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 16.4: Add E2E test case `US16_flow` covering happy path and two edge cases.\n### 72. User Story US-17\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 17.1: Implement telemetry event `ui.story.17.start` and `ui.story.17.done`.\n- Acceptance 17.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 17.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 17.4: Add E2E test case `US17_flow` covering happy path and two edge cases.\n### 73. User Story US-18\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 18.1: Implement telemetry event `ui.story.18.start` and `ui.story.18.done`.\n- Acceptance 18.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 18.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 18.4: Add E2E test case `US18_flow` covering happy path and two edge cases.\n### 74. User Story US-19\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 19.1: Implement telemetry event `ui.story.19.start` and `ui.story.19.done`.\n- Acceptance 19.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 19.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 19.4: Add E2E test case `US19_flow` covering happy path and two edge cases.\n### 75. User Story US-20\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 20.1: Implement telemetry event `ui.story.20.start` and `ui.story.20.done`.\n- Acceptance 20.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 20.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 20.4: Add E2E test case `US20_flow` covering happy path and two edge cases.\n### 76. User Story US-21\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 21.1: Implement telemetry event `ui.story.21.start` and `ui.story.21.done`.\n- Acceptance 21.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 21.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 21.4: Add E2E test case `US21_flow` covering happy path and two edge cases.\n### 77. User Story US-22\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 22.1: Implement telemetry event `ui.story.22.start` and `ui.story.22.done`.\n- Acceptance 22.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 22.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 22.4: Add E2E test case `US22_flow` covering happy path and two edge cases.\n### 78. User Story US-23\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 23.1: Implement telemetry event `ui.story.23.start` and `ui.story.23.done`.\n- Acceptance 23.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 23.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 23.4: Add E2E test case `US23_flow` covering happy path and two edge cases.\n### 79. User Story US-24\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 24.1: Implement telemetry event `ui.story.24.start` and `ui.story.24.done`.\n- Acceptance 24.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 24.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 24.4: Add E2E test case `US24_flow` covering happy path and two edge cases.\n### 80. User Story US-25\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 25.1: Implement telemetry event `ui.story.25.start` and `ui.story.25.done`.\n- Acceptance 25.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 25.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 25.4: Add E2E test case `US25_flow` covering happy path and two edge cases.\n### 81. User Story US-26\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 26.1: Implement telemetry event `ui.story.26.start` and `ui.story.26.done`.\n- Acceptance 26.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 26.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 26.4: Add E2E test case `US26_flow` covering happy path and two edge cases.\n### 82. User Story US-27\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 27.1: Implement telemetry event `ui.story.27.start` and `ui.story.27.done`.\n- Acceptance 27.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 27.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 27.4: Add E2E test case `US27_flow` covering happy path and two edge cases.\n### 83. User Story US-28\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 28.1: Implement telemetry event `ui.story.28.start` and `ui.story.28.done`.\n- Acceptance 28.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 28.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 28.4: Add E2E test case `US28_flow` covering happy path and two edge cases.\n### 84. User Story US-29\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 29.1: Implement telemetry event `ui.story.29.start` and `ui.story.29.done`.\n- Acceptance 29.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 29.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 29.4: Add E2E test case `US29_flow` covering happy path and two edge cases.\n### 85. User Story US-30\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 30.1: Implement telemetry event `ui.story.30.start` and `ui.story.30.done`.\n- Acceptance 30.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 30.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 30.4: Add E2E test case `US30_flow` covering happy path and two edge cases.\n### 86. User Story US-31\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 31.1: Implement telemetry event `ui.story.31.start` and `ui.story.31.done`.\n- Acceptance 31.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 31.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 31.4: Add E2E test case `US31_flow` covering happy path and two edge cases.\n### 87. User Story US-32\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 32.1: Implement telemetry event `ui.story.32.start` and `ui.story.32.done`.\n- Acceptance 32.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 32.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 32.4: Add E2E test case `US32_flow` covering happy path and two edge cases.\n### 88. User Story US-33\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 33.1: Implement telemetry event `ui.story.33.start` and `ui.story.33.done`.\n- Acceptance 33.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 33.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 33.4: Add E2E test case `US33_flow` covering happy path and two edge cases.\n### 89. User Story US-34\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 34.1: Implement telemetry event `ui.story.34.start` and `ui.story.34.done`.\n- Acceptance 34.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 34.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 34.4: Add E2E test case `US34_flow` covering happy path and two edge cases.\n### 90. User Story US-35\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 35.1: Implement telemetry event `ui.story.35.start` and `ui.story.35.done`.\n- Acceptance 35.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 35.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 35.4: Add E2E test case `US35_flow` covering happy path and two edge cases.\n### 91. User Story US-36\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 36.1: Implement telemetry event `ui.story.36.start` and `ui.story.36.done`.\n- Acceptance 36.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 36.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 36.4: Add E2E test case `US36_flow` covering happy path and two edge cases.\n### 92. User Story US-37\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 37.1: Implement telemetry event `ui.story.37.start` and `ui.story.37.done`.\n- Acceptance 37.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 37.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 37.4: Add E2E test case `US37_flow` covering happy path and two edge cases.\n### 93. User Story US-38\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 38.1: Implement telemetry event `ui.story.38.start` and `ui.story.38.done`.\n- Acceptance 38.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 38.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 38.4: Add E2E test case `US38_flow` covering happy path and two edge cases.\n### 94. User Story US-39\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 39.1: Implement telemetry event `ui.story.39.start` and `ui.story.39.done`.\n- Acceptance 39.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 39.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 39.4: Add E2E test case `US39_flow` covering happy path and two edge cases.\n### 95. User Story US-40\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 40.1: Implement telemetry event `ui.story.40.start` and `ui.story.40.done`.\n- Acceptance 40.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 40.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 40.4: Add E2E test case `US40_flow` covering happy path and two edge cases.\n### 96. User Story US-41\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 41.1: Implement telemetry event `ui.story.41.start` and `ui.story.41.done`.\n- Acceptance 41.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 41.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 41.4: Add E2E test case `US41_flow` covering happy path and two edge cases.\n### 97. User Story US-42\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 42.1: Implement telemetry event `ui.story.42.start` and `ui.story.42.done`.\n- Acceptance 42.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 42.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 42.4: Add E2E test case `US42_flow` covering happy path and two edge cases.\n### 98. User Story US-43\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 43.1: Implement telemetry event `ui.story.43.start` and `ui.story.43.done`.\n- Acceptance 43.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 43.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 43.4: Add E2E test case `US43_flow` covering happy path and two edge cases.\n### 99. User Story US-44\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 44.1: Implement telemetry event `ui.story.44.start` and `ui.story.44.done`.\n- Acceptance 44.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 44.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 44.4: Add E2E test case `US44_flow` covering happy path and two edge cases.\n### 100. User Story US-45\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 45.1: Implement telemetry event `ui.story.45.start` and `ui.story.45.done`.\n- Acceptance 45.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 45.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 45.4: Add E2E test case `US45_flow` covering happy path and two edge cases.\n### 101. User Story US-46\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 46.1: Implement telemetry event `ui.story.46.start` and `ui.story.46.done`.\n- Acceptance 46.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 46.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 46.4: Add E2E test case `US46_flow` covering happy path and two edge cases.\n### 102. User Story US-47\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 47.1: Implement telemetry event `ui.story.47.start` and `ui.story.47.done`.\n- Acceptance 47.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 47.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 47.4: Add E2E test case `US47_flow` covering happy path and two edge cases.\n### 103. User Story US-48\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 48.1: Implement telemetry event `ui.story.48.start` and `ui.story.48.done`.\n- Acceptance 48.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 48.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 48.4: Add E2E test case `US48_flow` covering happy path and two edge cases.\n### 104. User Story US-49\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 49.1: Implement telemetry event `ui.story.49.start` and `ui.story.49.done`.\n- Acceptance 49.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 49.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 49.4: Add E2E test case `US49_flow` covering happy path and two edge cases.\n### 105. User Story US-50\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 50.1: Implement telemetry event `ui.story.50.start` and `ui.story.50.done`.\n- Acceptance 50.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 50.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 50.4: Add E2E test case `US50_flow` covering happy path and two edge cases.\n### 106. User Story US-51\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 51.1: Implement telemetry event `ui.story.51.start` and `ui.story.51.done`.\n- Acceptance 51.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 51.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 51.4: Add E2E test case `US51_flow` covering happy path and two edge cases.\n### 107. User Story US-52\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 52.1: Implement telemetry event `ui.story.52.start` and `ui.story.52.done`.\n- Acceptance 52.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 52.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 52.4: Add E2E test case `US52_flow` covering happy path and two edge cases.\n### 108. User Story US-53\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 53.1: Implement telemetry event `ui.story.53.start` and `ui.story.53.done`.\n- Acceptance 53.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 53.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 53.4: Add E2E test case `US53_flow` covering happy path and two edge cases.\n### 109. User Story US-54\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 54.1: Implement telemetry event `ui.story.54.start` and `ui.story.54.done`.\n- Acceptance 54.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 54.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 54.4: Add E2E test case `US54_flow` covering happy path and two edge cases.\n### 110. User Story US-55\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 55.1: Implement telemetry event `ui.story.55.start` and `ui.story.55.done`.\n- Acceptance 55.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 55.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 55.4: Add E2E test case `US55_flow` covering happy path and two edge cases.\n### 111. User Story US-56\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 56.1: Implement telemetry event `ui.story.56.start` and `ui.story.56.done`.\n- Acceptance 56.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 56.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 56.4: Add E2E test case `US56_flow` covering happy path and two edge cases.\n### 112. User Story US-57\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 57.1: Implement telemetry event `ui.story.57.start` and `ui.story.57.done`.\n- Acceptance 57.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 57.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 57.4: Add E2E test case `US57_flow` covering happy path and two edge cases.\n### 113. User Story US-58\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 58.1: Implement telemetry event `ui.story.58.start` and `ui.story.58.done`.\n- Acceptance 58.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 58.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 58.4: Add E2E test case `US58_flow` covering happy path and two edge cases.\n### 114. User Story US-59\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 59.1: Implement telemetry event `ui.story.59.start` and `ui.story.59.done`.\n- Acceptance 59.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 59.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 59.4: Add E2E test case `US59_flow` covering happy path and two edge cases.\n### 115. User Story US-60\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 60.1: Implement telemetry event `ui.story.60.start` and `ui.story.60.done`.\n- Acceptance 60.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 60.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 60.4: Add E2E test case `US60_flow` covering happy path and two edge cases.\n### 116. User Story US-61\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 61.1: Implement telemetry event `ui.story.61.start` and `ui.story.61.done`.\n- Acceptance 61.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 61.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 61.4: Add E2E test case `US61_flow` covering happy path and two edge cases.\n### 117. User Story US-62\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 62.1: Implement telemetry event `ui.story.62.start` and `ui.story.62.done`.\n- Acceptance 62.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 62.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 62.4: Add E2E test case `US62_flow` covering happy path and two edge cases.\n### 118. User Story US-63\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 63.1: Implement telemetry event `ui.story.63.start` and `ui.story.63.done`.\n- Acceptance 63.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 63.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 63.4: Add E2E test case `US63_flow` covering happy path and two edge cases.\n### 119. User Story US-64\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 64.1: Implement telemetry event `ui.story.64.start` and `ui.story.64.done`.\n- Acceptance 64.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 64.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 64.4: Add E2E test case `US64_flow` covering happy path and two edge cases.\n### 120. User Story US-65\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 65.1: Implement telemetry event `ui.story.65.start` and `ui.story.65.done`.\n- Acceptance 65.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 65.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 65.4: Add E2E test case `US65_flow` covering happy path and two edge cases.\n### 121. User Story US-66\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 66.1: Implement telemetry event `ui.story.66.start` and `ui.story.66.done`.\n- Acceptance 66.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 66.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 66.4: Add E2E test case `US66_flow` covering happy path and two edge cases.\n### 122. User Story US-67\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 67.1: Implement telemetry event `ui.story.67.start` and `ui.story.67.done`.\n- Acceptance 67.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 67.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 67.4: Add E2E test case `US67_flow` covering happy path and two edge cases.\n### 123. User Story US-68\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 68.1: Implement telemetry event `ui.story.68.start` and `ui.story.68.done`.\n- Acceptance 68.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 68.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 68.4: Add E2E test case `US68_flow` covering happy path and two edge cases.\n### 124. User Story US-69\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 69.1: Implement telemetry event `ui.story.69.start` and `ui.story.69.done`.\n- Acceptance 69.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 69.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 69.4: Add E2E test case `US69_flow` covering happy path and two edge cases.\n### 125. User Story US-70\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 70.1: Implement telemetry event `ui.story.70.start` and `ui.story.70.done`.\n- Acceptance 70.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 70.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 70.4: Add E2E test case `US70_flow` covering happy path and two edge cases.\n### 126. User Story US-71\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 71.1: Implement telemetry event `ui.story.71.start` and `ui.story.71.done`.\n- Acceptance 71.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 71.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 71.4: Add E2E test case `US71_flow` covering happy path and two edge cases.\n### 127. User Story US-72\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 72.1: Implement telemetry event `ui.story.72.start` and `ui.story.72.done`.\n- Acceptance 72.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 72.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 72.4: Add E2E test case `US72_flow` covering happy path and two edge cases.\n### 128. User Story US-73\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 73.1: Implement telemetry event `ui.story.73.start` and `ui.story.73.done`.\n- Acceptance 73.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 73.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 73.4: Add E2E test case `US73_flow` covering happy path and two edge cases.\n### 129. User Story US-74\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 74.1: Implement telemetry event `ui.story.74.start` and `ui.story.74.done`.\n- Acceptance 74.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 74.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 74.4: Add E2E test case `US74_flow` covering happy path and two edge cases.\n### 130. User Story US-75\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 75.1: Implement telemetry event `ui.story.75.start` and `ui.story.75.done`.\n- Acceptance 75.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 75.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 75.4: Add E2E test case `US75_flow` covering happy path and two edge cases.\n### 131. User Story US-76\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 76.1: Implement telemetry event `ui.story.76.start` and `ui.story.76.done`.\n- Acceptance 76.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 76.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 76.4: Add E2E test case `US76_flow` covering happy path and two edge cases.\n### 132. User Story US-77\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 77.1: Implement telemetry event `ui.story.77.start` and `ui.story.77.done`.\n- Acceptance 77.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 77.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 77.4: Add E2E test case `US77_flow` covering happy path and two edge cases.\n### 133. User Story US-78\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 78.1: Implement telemetry event `ui.story.78.start` and `ui.story.78.done`.\n- Acceptance 78.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 78.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 78.4: Add E2E test case `US78_flow` covering happy path and two edge cases.\n### 134. User Story US-79\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 79.1: Implement telemetry event `ui.story.79.start` and `ui.story.79.done`.\n- Acceptance 79.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 79.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 79.4: Add E2E test case `US79_flow` covering happy path and two edge cases.\n### 135. User Story US-80\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 80.1: Implement telemetry event `ui.story.80.start` and `ui.story.80.done`.\n- Acceptance 80.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 80.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 80.4: Add E2E test case `US80_flow` covering happy path and two edge cases.\n### 136. User Story US-81\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 81.1: Implement telemetry event `ui.story.81.start` and `ui.story.81.done`.\n- Acceptance 81.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 81.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 81.4: Add E2E test case `US81_flow` covering happy path and two edge cases.\n### 137. User Story US-82\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 82.1: Implement telemetry event `ui.story.82.start` and `ui.story.82.done`.\n- Acceptance 82.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 82.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 82.4: Add E2E test case `US82_flow` covering happy path and two edge cases.\n### 138. User Story US-83\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 83.1: Implement telemetry event `ui.story.83.start` and `ui.story.83.done`.\n- Acceptance 83.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 83.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 83.4: Add E2E test case `US83_flow` covering happy path and two edge cases.\n### 139. User Story US-84\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 84.1: Implement telemetry event `ui.story.84.start` and `ui.story.84.done`.\n- Acceptance 84.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 84.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 84.4: Add E2E test case `US84_flow` covering happy path and two edge cases.\n### 140. User Story US-85\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 85.1: Implement telemetry event `ui.story.85.start` and `ui.story.85.done`.\n- Acceptance 85.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 85.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 85.4: Add E2E test case `US85_flow` covering happy path and two edge cases.\n### 141. User Story US-86\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 86.1: Implement telemetry event `ui.story.86.start` and `ui.story.86.done`.\n- Acceptance 86.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 86.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 86.4: Add E2E test case `US86_flow` covering happy path and two edge cases.\n### 142. User Story US-87\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 87.1: Implement telemetry event `ui.story.87.start` and `ui.story.87.done`.\n- Acceptance 87.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 87.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 87.4: Add E2E test case `US87_flow` covering happy path and two edge cases.\n### 143. User Story US-88\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 88.1: Implement telemetry event `ui.story.88.start` and `ui.story.88.done`.\n- Acceptance 88.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 88.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 88.4: Add E2E test case `US88_flow` covering happy path and two edge cases.\n### 144. User Story US-89\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 89.1: Implement telemetry event `ui.story.89.start` and `ui.story.89.done`.\n- Acceptance 89.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 89.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 89.4: Add E2E test case `US89_flow` covering happy path and two edge cases.\n### 145. User Story US-90\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 90.1: Implement telemetry event `ui.story.90.start` and `ui.story.90.done`.\n- Acceptance 90.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 90.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 90.4: Add E2E test case `US90_flow` covering happy path and two edge cases.\n### 146. User Story US-91\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 91.1: Implement telemetry event `ui.story.91.start` and `ui.story.91.done`.\n- Acceptance 91.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 91.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 91.4: Add E2E test case `US91_flow` covering happy path and two edge cases.\n### 147. User Story US-92\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 92.1: Implement telemetry event `ui.story.92.start` and `ui.story.92.done`.\n- Acceptance 92.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 92.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 92.4: Add E2E test case `US92_flow` covering happy path and two edge cases.\n### 148. User Story US-93\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 93.1: Implement telemetry event `ui.story.93.start` and `ui.story.93.done`.\n- Acceptance 93.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 93.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 93.4: Add E2E test case `US93_flow` covering happy path and two edge cases.\n### 149. User Story US-94\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 94.1: Implement telemetry event `ui.story.94.start` and `ui.story.94.done`.\n- Acceptance 94.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 94.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 94.4: Add E2E test case `US94_flow` covering happy path and two edge cases.\n### 150. User Story US-95\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 95.1: Implement telemetry event `ui.story.95.start` and `ui.story.95.done`.\n- Acceptance 95.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 95.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 95.4: Add E2E test case `US95_flow` covering happy path and two edge cases.\n### 151. User Story US-96\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 96.1: Implement telemetry event `ui.story.96.start` and `ui.story.96.done`.\n- Acceptance 96.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 96.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 96.4: Add E2E test case `US96_flow` covering happy path and two edge cases.\n### 152. User Story US-97\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 97.1: Implement telemetry event `ui.story.97.start` and `ui.story.97.done`.\n- Acceptance 97.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 97.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 97.4: Add E2E test case `US97_flow` covering happy path and two edge cases.\n### 153. User Story US-98\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 98.1: Implement telemetry event `ui.story.98.start` and `ui.story.98.done`.\n- Acceptance 98.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 98.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 98.4: Add E2E test case `US98_flow` covering happy path and two edge cases.\n### 154. User Story US-99\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 99.1: Implement telemetry event `ui.story.99.start` and `ui.story.99.done`.\n- Acceptance 99.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 99.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 99.4: Add E2E test case `US99_flow` covering happy path and two edge cases.\n### 155. User Story US-100\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 100.1: Implement telemetry event `ui.story.100.start` and `ui.story.100.done`.\n- Acceptance 100.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 100.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 100.4: Add E2E test case `US100_flow` covering happy path and two edge cases.\n### 156. User Story US-101\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 101.1: Implement telemetry event `ui.story.101.start` and `ui.story.101.done`.\n- Acceptance 101.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 101.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 101.4: Add E2E test case `US101_flow` covering happy path and two edge cases.\n### 157. User Story US-102\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 102.1: Implement telemetry event `ui.story.102.start` and `ui.story.102.done`.\n- Acceptance 102.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 102.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 102.4: Add E2E test case `US102_flow` covering happy path and two edge cases.\n### 158. User Story US-103\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 103.1: Implement telemetry event `ui.story.103.start` and `ui.story.103.done`.\n- Acceptance 103.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 103.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 103.4: Add E2E test case `US103_flow` covering happy path and two edge cases.\n### 159. User Story US-104\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 104.1: Implement telemetry event `ui.story.104.start` and `ui.story.104.done`.\n- Acceptance 104.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 104.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 104.4: Add E2E test case `US104_flow` covering happy path and two edge cases.\n### 160. User Story US-105\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 105.1: Implement telemetry event `ui.story.105.start` and `ui.story.105.done`.\n- Acceptance 105.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 105.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 105.4: Add E2E test case `US105_flow` covering happy path and two edge cases.\n### 161. User Story US-106\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 106.1: Implement telemetry event `ui.story.106.start` and `ui.story.106.done`.\n- Acceptance 106.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 106.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 106.4: Add E2E test case `US106_flow` covering happy path and two edge cases.\n### 162. User Story US-107\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 107.1: Implement telemetry event `ui.story.107.start` and `ui.story.107.done`.\n- Acceptance 107.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 107.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 107.4: Add E2E test case `US107_flow` covering happy path and two edge cases.\n### 163. User Story US-108\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 108.1: Implement telemetry event `ui.story.108.start` and `ui.story.108.done`.\n- Acceptance 108.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 108.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 108.4: Add E2E test case `US108_flow` covering happy path and two edge cases.\n### 164. User Story US-109\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 109.1: Implement telemetry event `ui.story.109.start` and `ui.story.109.done`.\n- Acceptance 109.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 109.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 109.4: Add E2E test case `US109_flow` covering happy path and two edge cases.\n### 165. User Story US-110\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 110.1: Implement telemetry event `ui.story.110.start` and `ui.story.110.done`.\n- Acceptance 110.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 110.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 110.4: Add E2E test case `US110_flow` covering happy path and two edge cases.\n### 166. User Story US-111\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 111.1: Implement telemetry event `ui.story.111.start` and `ui.story.111.done`.\n- Acceptance 111.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 111.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 111.4: Add E2E test case `US111_flow` covering happy path and two edge cases.\n### 167. User Story US-112\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 112.1: Implement telemetry event `ui.story.112.start` and `ui.story.112.done`.\n- Acceptance 112.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 112.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 112.4: Add E2E test case `US112_flow` covering happy path and two edge cases.\n### 168. User Story US-113\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 113.1: Implement telemetry event `ui.story.113.start` and `ui.story.113.done`.\n- Acceptance 113.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 113.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 113.4: Add E2E test case `US113_flow` covering happy path and two edge cases.\n### 169. User Story US-114\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 114.1: Implement telemetry event `ui.story.114.start` and `ui.story.114.done`.\n- Acceptance 114.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 114.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 114.4: Add E2E test case `US114_flow` covering happy path and two edge cases.\n### 170. User Story US-115\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 115.1: Implement telemetry event `ui.story.115.start` and `ui.story.115.done`.\n- Acceptance 115.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 115.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 115.4: Add E2E test case `US115_flow` covering happy path and two edge cases.\n### 171. User Story US-116\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 116.1: Implement telemetry event `ui.story.116.start` and `ui.story.116.done`.\n- Acceptance 116.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 116.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 116.4: Add E2E test case `US116_flow` covering happy path and two edge cases.\n### 172. User Story US-117\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 117.1: Implement telemetry event `ui.story.117.start` and `ui.story.117.done`.\n- Acceptance 117.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 117.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 117.4: Add E2E test case `US117_flow` covering happy path and two edge cases.\n### 173. User Story US-118\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 118.1: Implement telemetry event `ui.story.118.start` and `ui.story.118.done`.\n- Acceptance 118.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 118.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 118.4: Add E2E test case `US118_flow` covering happy path and two edge cases.\n### 174. User Story US-119\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 119.1: Implement telemetry event `ui.story.119.start` and `ui.story.119.done`.\n- Acceptance 119.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 119.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 119.4: Add E2E test case `US119_flow` covering happy path and two edge cases.\n### 175. User Story US-120\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 120.1: Implement telemetry event `ui.story.120.start` and `ui.story.120.done`.\n- Acceptance 120.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 120.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 120.4: Add E2E test case `US120_flow` covering happy path and two edge cases.\n### 176. User Story US-121\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 121.1: Implement telemetry event `ui.story.121.start` and `ui.story.121.done`.\n- Acceptance 121.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 121.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 121.4: Add E2E test case `US121_flow` covering happy path and two edge cases.\n### 177. User Story US-122\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 122.1: Implement telemetry event `ui.story.122.start` and `ui.story.122.done`.\n- Acceptance 122.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 122.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 122.4: Add E2E test case `US122_flow` covering happy path and two edge cases.\n### 178. User Story US-123\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 123.1: Implement telemetry event `ui.story.123.start` and `ui.story.123.done`.\n- Acceptance 123.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 123.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 123.4: Add E2E test case `US123_flow` covering happy path and two edge cases.\n### 179. User Story US-124\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 124.1: Implement telemetry event `ui.story.124.start` and `ui.story.124.done`.\n- Acceptance 124.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 124.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 124.4: Add E2E test case `US124_flow` covering happy path and two edge cases.\n### 180. User Story US-125\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 125.1: Implement telemetry event `ui.story.125.start` and `ui.story.125.done`.\n- Acceptance 125.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 125.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 125.4: Add E2E test case `US125_flow` covering happy path and two edge cases.\n### 181. User Story US-126\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 126.1: Implement telemetry event `ui.story.126.start` and `ui.story.126.done`.\n- Acceptance 126.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 126.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 126.4: Add E2E test case `US126_flow` covering happy path and two edge cases.\n### 182. User Story US-127\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 127.1: Implement telemetry event `ui.story.127.start` and `ui.story.127.done`.\n- Acceptance 127.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 127.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 127.4: Add E2E test case `US127_flow` covering happy path and two edge cases.\n### 183. User Story US-128\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 128.1: Implement telemetry event `ui.story.128.start` and `ui.story.128.done`.\n- Acceptance 128.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 128.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 128.4: Add E2E test case `US128_flow` covering happy path and two edge cases.\n### 184. User Story US-129\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 129.1: Implement telemetry event `ui.story.129.start` and `ui.story.129.done`.\n- Acceptance 129.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 129.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 129.4: Add E2E test case `US129_flow` covering happy path and two edge cases.\n### 185. User Story US-130\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 130.1: Implement telemetry event `ui.story.130.start` and `ui.story.130.done`.\n- Acceptance 130.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 130.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 130.4: Add E2E test case `US130_flow` covering happy path and two edge cases.\n### 186. User Story US-131\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 131.1: Implement telemetry event `ui.story.131.start` and `ui.story.131.done`.\n- Acceptance 131.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 131.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 131.4: Add E2E test case `US131_flow` covering happy path and two edge cases.\n### 187. User Story US-132\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 132.1: Implement telemetry event `ui.story.132.start` and `ui.story.132.done`.\n- Acceptance 132.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 132.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 132.4: Add E2E test case `US132_flow` covering happy path and two edge cases.\n### 188. User Story US-133\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 133.1: Implement telemetry event `ui.story.133.start` and `ui.story.133.done`.\n- Acceptance 133.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 133.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 133.4: Add E2E test case `US133_flow` covering happy path and two edge cases.\n### 189. User Story US-134\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 134.1: Implement telemetry event `ui.story.134.start` and `ui.story.134.done`.\n- Acceptance 134.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 134.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 134.4: Add E2E test case `US134_flow` covering happy path and two edge cases.\n### 190. User Story US-135\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 135.1: Implement telemetry event `ui.story.135.start` and `ui.story.135.done`.\n- Acceptance 135.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 135.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 135.4: Add E2E test case `US135_flow` covering happy path and two edge cases.\n### 191. User Story US-136\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 136.1: Implement telemetry event `ui.story.136.start` and `ui.story.136.done`.\n- Acceptance 136.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 136.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 136.4: Add E2E test case `US136_flow` covering happy path and two edge cases.\n### 192. User Story US-137\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 137.1: Implement telemetry event `ui.story.137.start` and `ui.story.137.done`.\n- Acceptance 137.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 137.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 137.4: Add E2E test case `US137_flow` covering happy path and two edge cases.\n### 193. User Story US-138\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 138.1: Implement telemetry event `ui.story.138.start` and `ui.story.138.done`.\n- Acceptance 138.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 138.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 138.4: Add E2E test case `US138_flow` covering happy path and two edge cases.\n### 194. User Story US-139\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 139.1: Implement telemetry event `ui.story.139.start` and `ui.story.139.done`.\n- Acceptance 139.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 139.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 139.4: Add E2E test case `US139_flow` covering happy path and two edge cases.\n### 195. User Story US-140\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 140.1: Implement telemetry event `ui.story.140.start` and `ui.story.140.done`.\n- Acceptance 140.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 140.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 140.4: Add E2E test case `US140_flow` covering happy path and two edge cases.\n### 196. User Story US-141\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 141.1: Implement telemetry event `ui.story.141.start` and `ui.story.141.done`.\n- Acceptance 141.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 141.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 141.4: Add E2E test case `US141_flow` covering happy path and two edge cases.\n### 197. User Story US-142\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 142.1: Implement telemetry event `ui.story.142.start` and `ui.story.142.done`.\n- Acceptance 142.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 142.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 142.4: Add E2E test case `US142_flow` covering happy path and two edge cases.\n### 198. User Story US-143\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 143.1: Implement telemetry event `ui.story.143.start` and `ui.story.143.done`.\n- Acceptance 143.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 143.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 143.4: Add E2E test case `US143_flow` covering happy path and two edge cases.\n### 199. User Story US-144\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 144.1: Implement telemetry event `ui.story.144.start` and `ui.story.144.done`.\n- Acceptance 144.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 144.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 144.4: Add E2E test case `US144_flow` covering happy path and two edge cases.\n### 200. User Story US-145\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 145.1: Implement telemetry event `ui.story.145.start` and `ui.story.145.done`.\n- Acceptance 145.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 145.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 145.4: Add E2E test case `US145_flow` covering happy path and two edge cases.\n### 201. User Story US-146\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 146.1: Implement telemetry event `ui.story.146.start` and `ui.story.146.done`.\n- Acceptance 146.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 146.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 146.4: Add E2E test case `US146_flow` covering happy path and two edge cases.\n### 202. User Story US-147\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 147.1: Implement telemetry event `ui.story.147.start` and `ui.story.147.done`.\n- Acceptance 147.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 147.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 147.4: Add E2E test case `US147_flow` covering happy path and two edge cases.\n### 203. User Story US-148\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 148.1: Implement telemetry event `ui.story.148.start` and `ui.story.148.done`.\n- Acceptance 148.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 148.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 148.4: Add E2E test case `US148_flow` covering happy path and two edge cases.\n### 204. User Story US-149\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 149.1: Implement telemetry event `ui.story.149.start` and `ui.story.149.done`.\n- Acceptance 149.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 149.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 149.4: Add E2E test case `US149_flow` covering happy path and two edge cases.\n### 205. User Story US-150\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 150.1: Implement telemetry event `ui.story.150.start` and `ui.story.150.done`.\n- Acceptance 150.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 150.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 150.4: Add E2E test case `US150_flow` covering happy path and two edge cases.\n### 206. User Story US-151\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 151.1: Implement telemetry event `ui.story.151.start` and `ui.story.151.done`.\n- Acceptance 151.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 151.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 151.4: Add E2E test case `US151_flow` covering happy path and two edge cases.\n### 207. User Story US-152\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 152.1: Implement telemetry event `ui.story.152.start` and `ui.story.152.done`.\n- Acceptance 152.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 152.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 152.4: Add E2E test case `US152_flow` covering happy path and two edge cases.\n### 208. User Story US-153\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 153.1: Implement telemetry event `ui.story.153.start` and `ui.story.153.done`.\n- Acceptance 153.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 153.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 153.4: Add E2E test case `US153_flow` covering happy path and two edge cases.\n### 209. User Story US-154\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 154.1: Implement telemetry event `ui.story.154.start` and `ui.story.154.done`.\n- Acceptance 154.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 154.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 154.4: Add E2E test case `US154_flow` covering happy path and two edge cases.\n### 210. User Story US-155\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 155.1: Implement telemetry event `ui.story.155.start` and `ui.story.155.done`.\n- Acceptance 155.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 155.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 155.4: Add E2E test case `US155_flow` covering happy path and two edge cases.\n### 211. User Story US-156\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 156.1: Implement telemetry event `ui.story.156.start` and `ui.story.156.done`.\n- Acceptance 156.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 156.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 156.4: Add E2E test case `US156_flow` covering happy path and two edge cases.\n### 212. User Story US-157\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 157.1: Implement telemetry event `ui.story.157.start` and `ui.story.157.done`.\n- Acceptance 157.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 157.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 157.4: Add E2E test case `US157_flow` covering happy path and two edge cases.\n### 213. User Story US-158\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 158.1: Implement telemetry event `ui.story.158.start` and `ui.story.158.done`.\n- Acceptance 158.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 158.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 158.4: Add E2E test case `US158_flow` covering happy path and two edge cases.\n### 214. User Story US-159\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 159.1: Implement telemetry event `ui.story.159.start` and `ui.story.159.done`.\n- Acceptance 159.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 159.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 159.4: Add E2E test case `US159_flow` covering happy path and two edge cases.\n### 215. User Story US-160\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 160.1: Implement telemetry event `ui.story.160.start` and `ui.story.160.done`.\n- Acceptance 160.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 160.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 160.4: Add E2E test case `US160_flow` covering happy path and two edge cases.\n### 216. User Story US-161\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 161.1: Implement telemetry event `ui.story.161.start` and `ui.story.161.done`.\n- Acceptance 161.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 161.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 161.4: Add E2E test case `US161_flow` covering happy path and two edge cases.\n### 217. User Story US-162\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 162.1: Implement telemetry event `ui.story.162.start` and `ui.story.162.done`.\n- Acceptance 162.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 162.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 162.4: Add E2E test case `US162_flow` covering happy path and two edge cases.\n### 218. User Story US-163\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 163.1: Implement telemetry event `ui.story.163.start` and `ui.story.163.done`.\n- Acceptance 163.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 163.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 163.4: Add E2E test case `US163_flow` covering happy path and two edge cases.\n### 219. User Story US-164\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 164.1: Implement telemetry event `ui.story.164.start` and `ui.story.164.done`.\n- Acceptance 164.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 164.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 164.4: Add E2E test case `US164_flow` covering happy path and two edge cases.\n### 220. User Story US-165\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 165.1: Implement telemetry event `ui.story.165.start` and `ui.story.165.done`.\n- Acceptance 165.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 165.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 165.4: Add E2E test case `US165_flow` covering happy path and two edge cases.\n### 221. User Story US-166\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 166.1: Implement telemetry event `ui.story.166.start` and `ui.story.166.done`.\n- Acceptance 166.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 166.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 166.4: Add E2E test case `US166_flow` covering happy path and two edge cases.\n### 222. User Story US-167\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 167.1: Implement telemetry event `ui.story.167.start` and `ui.story.167.done`.\n- Acceptance 167.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 167.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 167.4: Add E2E test case `US167_flow` covering happy path and two edge cases.\n### 223. User Story US-168\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 168.1: Implement telemetry event `ui.story.168.start` and `ui.story.168.done`.\n- Acceptance 168.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 168.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 168.4: Add E2E test case `US168_flow` covering happy path and two edge cases.\n### 224. User Story US-169\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 169.1: Implement telemetry event `ui.story.169.start` and `ui.story.169.done`.\n- Acceptance 169.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 169.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 169.4: Add E2E test case `US169_flow` covering happy path and two edge cases.\n### 225. User Story US-170\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 170.1: Implement telemetry event `ui.story.170.start` and `ui.story.170.done`.\n- Acceptance 170.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 170.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 170.4: Add E2E test case `US170_flow` covering happy path and two edge cases.\n### 226. User Story US-171\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 171.1: Implement telemetry event `ui.story.171.start` and `ui.story.171.done`.\n- Acceptance 171.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 171.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 171.4: Add E2E test case `US171_flow` covering happy path and two edge cases.\n### 227. User Story US-172\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 172.1: Implement telemetry event `ui.story.172.start` and `ui.story.172.done`.\n- Acceptance 172.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 172.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 172.4: Add E2E test case `US172_flow` covering happy path and two edge cases.\n### 228. User Story US-173\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 173.1: Implement telemetry event `ui.story.173.start` and `ui.story.173.done`.\n- Acceptance 173.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 173.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 173.4: Add E2E test case `US173_flow` covering happy path and two edge cases.\n### 229. User Story US-174\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 174.1: Implement telemetry event `ui.story.174.start` and `ui.story.174.done`.\n- Acceptance 174.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 174.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 174.4: Add E2E test case `US174_flow` covering happy path and two edge cases.\n### 230. User Story US-175\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 175.1: Implement telemetry event `ui.story.175.start` and `ui.story.175.done`.\n- Acceptance 175.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 175.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 175.4: Add E2E test case `US175_flow` covering happy path and two edge cases.\n### 231. User Story US-176\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 176.1: Implement telemetry event `ui.story.176.start` and `ui.story.176.done`.\n- Acceptance 176.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 176.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 176.4: Add E2E test case `US176_flow` covering happy path and two edge cases.\n### 232. User Story US-177\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 177.1: Implement telemetry event `ui.story.177.start` and `ui.story.177.done`.\n- Acceptance 177.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 177.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 177.4: Add E2E test case `US177_flow` covering happy path and two edge cases.\n### 233. User Story US-178\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 178.1: Implement telemetry event `ui.story.178.start` and `ui.story.178.done`.\n- Acceptance 178.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 178.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 178.4: Add E2E test case `US178_flow` covering happy path and two edge cases.\n### 234. User Story US-179\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 179.1: Implement telemetry event `ui.story.179.start` and `ui.story.179.done`.\n- Acceptance 179.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 179.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 179.4: Add E2E test case `US179_flow` covering happy path and two edge cases.\n### 235. User Story US-180\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 180.1: Implement telemetry event `ui.story.180.start` and `ui.story.180.done`.\n- Acceptance 180.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 180.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 180.4: Add E2E test case `US180_flow` covering happy path and two edge cases.\n### 236. User Story US-181\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 181.1: Implement telemetry event `ui.story.181.start` and `ui.story.181.done`.\n- Acceptance 181.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 181.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 181.4: Add E2E test case `US181_flow` covering happy path and two edge cases.\n### 237. User Story US-182\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 182.1: Implement telemetry event `ui.story.182.start` and `ui.story.182.done`.\n- Acceptance 182.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 182.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 182.4: Add E2E test case `US182_flow` covering happy path and two edge cases.\n### 238. User Story US-183\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 183.1: Implement telemetry event `ui.story.183.start` and `ui.story.183.done`.\n- Acceptance 183.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 183.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 183.4: Add E2E test case `US183_flow` covering happy path and two edge cases.\n### 239. User Story US-184\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 184.1: Implement telemetry event `ui.story.184.start` and `ui.story.184.done`.\n- Acceptance 184.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 184.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 184.4: Add E2E test case `US184_flow` covering happy path and two edge cases.\n### 240. User Story US-185\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 185.1: Implement telemetry event `ui.story.185.start` and `ui.story.185.done`.\n- Acceptance 185.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 185.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 185.4: Add E2E test case `US185_flow` covering happy path and two edge cases.\n### 241. User Story US-186\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 186.1: Implement telemetry event `ui.story.186.start` and `ui.story.186.done`.\n- Acceptance 186.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 186.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 186.4: Add E2E test case `US186_flow` covering happy path and two edge cases.\n### 242. User Story US-187\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 187.1: Implement telemetry event `ui.story.187.start` and `ui.story.187.done`.\n- Acceptance 187.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 187.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 187.4: Add E2E test case `US187_flow` covering happy path and two edge cases.\n### 243. User Story US-188\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 188.1: Implement telemetry event `ui.story.188.start` and `ui.story.188.done`.\n- Acceptance 188.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 188.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 188.4: Add E2E test case `US188_flow` covering happy path and two edge cases.\n### 244. User Story US-189\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 189.1: Implement telemetry event `ui.story.189.start` and `ui.story.189.done`.\n- Acceptance 189.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 189.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 189.4: Add E2E test case `US189_flow` covering happy path and two edge cases.\n### 245. User Story US-190\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 190.1: Implement telemetry event `ui.story.190.start` and `ui.story.190.done`.\n- Acceptance 190.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 190.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 190.4: Add E2E test case `US190_flow` covering happy path and two edge cases.\n### 246. User Story US-191\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 191.1: Implement telemetry event `ui.story.191.start` and `ui.story.191.done`.\n- Acceptance 191.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 191.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 191.4: Add E2E test case `US191_flow` covering happy path and two edge cases.\n### 247. User Story US-192\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 192.1: Implement telemetry event `ui.story.192.start` and `ui.story.192.done`.\n- Acceptance 192.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 192.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 192.4: Add E2E test case `US192_flow` covering happy path and two edge cases.\n### 248. User Story US-193\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 193.1: Implement telemetry event `ui.story.193.start` and `ui.story.193.done`.\n- Acceptance 193.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 193.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 193.4: Add E2E test case `US193_flow` covering happy path and two edge cases.\n### 249. User Story US-194\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 194.1: Implement telemetry event `ui.story.194.start` and `ui.story.194.done`.\n- Acceptance 194.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 194.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 194.4: Add E2E test case `US194_flow` covering happy path and two edge cases.\n### 250. User Story US-195\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 195.1: Implement telemetry event `ui.story.195.start` and `ui.story.195.done`.\n- Acceptance 195.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 195.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 195.4: Add E2E test case `US195_flow` covering happy path and two edge cases.\n### 251. User Story US-196\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 196.1: Implement telemetry event `ui.story.196.start` and `ui.story.196.done`.\n- Acceptance 196.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 196.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 196.4: Add E2E test case `US196_flow` covering happy path and two edge cases.\n### 252. User Story US-197\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 197.1: Implement telemetry event `ui.story.197.start` and `ui.story.197.done`.\n- Acceptance 197.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 197.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 197.4: Add E2E test case `US197_flow` covering happy path and two edge cases.\n### 253. User Story US-198\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 198.1: Implement telemetry event `ui.story.198.start` and `ui.story.198.done`.\n- Acceptance 198.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 198.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 198.4: Add E2E test case `US198_flow` covering happy path and two edge cases.\n### 254. User Story US-199\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 199.1: Implement telemetry event `ui.story.199.start` and `ui.story.199.done`.\n- Acceptance 199.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 199.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 199.4: Add E2E test case `US199_flow` covering happy path and two edge cases.\n### 255. User Story US-200\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 200.1: Implement telemetry event `ui.story.200.start` and `ui.story.200.done`.\n- Acceptance 200.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 200.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 200.4: Add E2E test case `US200_flow` covering happy path and two edge cases.\n### 256. User Story US-201\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 201.1: Implement telemetry event `ui.story.201.start` and `ui.story.201.done`.\n- Acceptance 201.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 201.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 201.4: Add E2E test case `US201_flow` covering happy path and two edge cases.\n### 257. User Story US-202\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 202.1: Implement telemetry event `ui.story.202.start` and `ui.story.202.done`.\n- Acceptance 202.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 202.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 202.4: Add E2E test case `US202_flow` covering happy path and two edge cases.\n### 258. User Story US-203\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 203.1: Implement telemetry event `ui.story.203.start` and `ui.story.203.done`.\n- Acceptance 203.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 203.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 203.4: Add E2E test case `US203_flow` covering happy path and two edge cases.\n### 259. User Story US-204\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 204.1: Implement telemetry event `ui.story.204.start` and `ui.story.204.done`.\n- Acceptance 204.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 204.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 204.4: Add E2E test case `US204_flow` covering happy path and two edge cases.\n### 260. User Story US-205\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 205.1: Implement telemetry event `ui.story.205.start` and `ui.story.205.done`.\n- Acceptance 205.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 205.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 205.4: Add E2E test case `US205_flow` covering happy path and two edge cases.\n### 261. User Story US-206\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 206.1: Implement telemetry event `ui.story.206.start` and `ui.story.206.done`.\n- Acceptance 206.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 206.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 206.4: Add E2E test case `US206_flow` covering happy path and two edge cases.\n### 262. User Story US-207\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 207.1: Implement telemetry event `ui.story.207.start` and `ui.story.207.done`.\n- Acceptance 207.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 207.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 207.4: Add E2E test case `US207_flow` covering happy path and two edge cases.\n### 263. User Story US-208\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 208.1: Implement telemetry event `ui.story.208.start` and `ui.story.208.done`.\n- Acceptance 208.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 208.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 208.4: Add E2E test case `US208_flow` covering happy path and two edge cases.\n### 264. User Story US-209\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 209.1: Implement telemetry event `ui.story.209.start` and `ui.story.209.done`.\n- Acceptance 209.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 209.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 209.4: Add E2E test case `US209_flow` covering happy path and two edge cases.\n### 265. User Story US-210\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 210.1: Implement telemetry event `ui.story.210.start` and `ui.story.210.done`.\n- Acceptance 210.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 210.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 210.4: Add E2E test case `US210_flow` covering happy path and two edge cases.\n### 266. User Story US-211\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 211.1: Implement telemetry event `ui.story.211.start` and `ui.story.211.done`.\n- Acceptance 211.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 211.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 211.4: Add E2E test case `US211_flow` covering happy path and two edge cases.\n### 267. User Story US-212\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 212.1: Implement telemetry event `ui.story.212.start` and `ui.story.212.done`.\n- Acceptance 212.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 212.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 212.4: Add E2E test case `US212_flow` covering happy path and two edge cases.\n### 268. User Story US-213\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 213.1: Implement telemetry event `ui.story.213.start` and `ui.story.213.done`.\n- Acceptance 213.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 213.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 213.4: Add E2E test case `US213_flow` covering happy path and two edge cases.\n### 269. User Story US-214\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 214.1: Implement telemetry event `ui.story.214.start` and `ui.story.214.done`.\n- Acceptance 214.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 214.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 214.4: Add E2E test case `US214_flow` covering happy path and two edge cases.\n### 270. User Story US-215\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 215.1: Implement telemetry event `ui.story.215.start` and `ui.story.215.done`.\n- Acceptance 215.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 215.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 215.4: Add E2E test case `US215_flow` covering happy path and two edge cases.\n### 271. User Story US-216\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 216.1: Implement telemetry event `ui.story.216.start` and `ui.story.216.done`.\n- Acceptance 216.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 216.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 216.4: Add E2E test case `US216_flow` covering happy path and two edge cases.\n### 272. User Story US-217\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 217.1: Implement telemetry event `ui.story.217.start` and `ui.story.217.done`.\n- Acceptance 217.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 217.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 217.4: Add E2E test case `US217_flow` covering happy path and two edge cases.\n### 273. User Story US-218\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 218.1: Implement telemetry event `ui.story.218.start` and `ui.story.218.done`.\n- Acceptance 218.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 218.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 218.4: Add E2E test case `US218_flow` covering happy path and two edge cases.\n### 274. User Story US-219\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 219.1: Implement telemetry event `ui.story.219.start` and `ui.story.219.done`.\n- Acceptance 219.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 219.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 219.4: Add E2E test case `US219_flow` covering happy path and two edge cases.\n### 275. User Story US-220\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 220.1: Implement telemetry event `ui.story.220.start` and `ui.story.220.done`.\n- Acceptance 220.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 220.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 220.4: Add E2E test case `US220_flow` covering happy path and two edge cases.\n### 276. User Story US-221\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 221.1: Implement telemetry event `ui.story.221.start` and `ui.story.221.done`.\n- Acceptance 221.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 221.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 221.4: Add E2E test case `US221_flow` covering happy path and two edge cases.\n### 277. User Story US-222\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 222.1: Implement telemetry event `ui.story.222.start` and `ui.story.222.done`.\n- Acceptance 222.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 222.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 222.4: Add E2E test case `US222_flow` covering happy path and two edge cases.\n### 278. User Story US-223\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 223.1: Implement telemetry event `ui.story.223.start` and `ui.story.223.done`.\n- Acceptance 223.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 223.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 223.4: Add E2E test case `US223_flow` covering happy path and two edge cases.\n### 279. User Story US-224\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 224.1: Implement telemetry event `ui.story.224.start` and `ui.story.224.done`.\n- Acceptance 224.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 224.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 224.4: Add E2E test case `US224_flow` covering happy path and two edge cases.\n### 280. User Story US-225\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 225.1: Implement telemetry event `ui.story.225.start` and `ui.story.225.done`.\n- Acceptance 225.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 225.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 225.4: Add E2E test case `US225_flow` covering happy path and two edge cases.\n### 281. User Story US-226\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 226.1: Implement telemetry event `ui.story.226.start` and `ui.story.226.done`.\n- Acceptance 226.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 226.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 226.4: Add E2E test case `US226_flow` covering happy path and two edge cases.\n### 282. User Story US-227\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 227.1: Implement telemetry event `ui.story.227.start` and `ui.story.227.done`.\n- Acceptance 227.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 227.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 227.4: Add E2E test case `US227_flow` covering happy path and two edge cases.\n### 283. User Story US-228\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 228.1: Implement telemetry event `ui.story.228.start` and `ui.story.228.done`.\n- Acceptance 228.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 228.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 228.4: Add E2E test case `US228_flow` covering happy path and two edge cases.\n### 284. User Story US-229\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 229.1: Implement telemetry event `ui.story.229.start` and `ui.story.229.done`.\n- Acceptance 229.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 229.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 229.4: Add E2E test case `US229_flow` covering happy path and two edge cases.\n### 285. User Story US-230\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 230.1: Implement telemetry event `ui.story.230.start` and `ui.story.230.done`.\n- Acceptance 230.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 230.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 230.4: Add E2E test case `US230_flow` covering happy path and two edge cases.\n### 286. User Story US-231\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 231.1: Implement telemetry event `ui.story.231.start` and `ui.story.231.done`.\n- Acceptance 231.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 231.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 231.4: Add E2E test case `US231_flow` covering happy path and two edge cases.\n### 287. User Story US-232\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 232.1: Implement telemetry event `ui.story.232.start` and `ui.story.232.done`.\n- Acceptance 232.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 232.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 232.4: Add E2E test case `US232_flow` covering happy path and two edge cases.\n### 288. User Story US-233\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 233.1: Implement telemetry event `ui.story.233.start` and `ui.story.233.done`.\n- Acceptance 233.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 233.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 233.4: Add E2E test case `US233_flow` covering happy path and two edge cases.\n### 289. User Story US-234\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 234.1: Implement telemetry event `ui.story.234.start` and `ui.story.234.done`.\n- Acceptance 234.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 234.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 234.4: Add E2E test case `US234_flow` covering happy path and two edge cases.\n### 290. User Story US-235\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 235.1: Implement telemetry event `ui.story.235.start` and `ui.story.235.done`.\n- Acceptance 235.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 235.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 235.4: Add E2E test case `US235_flow` covering happy path and two edge cases.\n### 291. User Story US-236\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 236.1: Implement telemetry event `ui.story.236.start` and `ui.story.236.done`.\n- Acceptance 236.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 236.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 236.4: Add E2E test case `US236_flow` covering happy path and two edge cases.\n### 292. User Story US-237\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 237.1: Implement telemetry event `ui.story.237.start` and `ui.story.237.done`.\n- Acceptance 237.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 237.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 237.4: Add E2E test case `US237_flow` covering happy path and two edge cases.\n### 293. User Story US-238\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 238.1: Implement telemetry event `ui.story.238.start` and `ui.story.238.done`.\n- Acceptance 238.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 238.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 238.4: Add E2E test case `US238_flow` covering happy path and two edge cases.\n### 294. User Story US-239\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 239.1: Implement telemetry event `ui.story.239.start` and `ui.story.239.done`.\n- Acceptance 239.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 239.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 239.4: Add E2E test case `US239_flow` covering happy path and two edge cases.\n### 295. User Story US-240\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 240.1: Implement telemetry event `ui.story.240.start` and `ui.story.240.done`.\n- Acceptance 240.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 240.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 240.4: Add E2E test case `US240_flow` covering happy path and two edge cases.\n### 296. User Story US-241\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 241.1: Implement telemetry event `ui.story.241.start` and `ui.story.241.done`.\n- Acceptance 241.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 241.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 241.4: Add E2E test case `US241_flow` covering happy path and two edge cases.\n### 297. User Story US-242\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 242.1: Implement telemetry event `ui.story.242.start` and `ui.story.242.done`.\n- Acceptance 242.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 242.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 242.4: Add E2E test case `US242_flow` covering happy path and two edge cases.\n### 298. User Story US-243\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 243.1: Implement telemetry event `ui.story.243.start` and `ui.story.243.done`.\n- Acceptance 243.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 243.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 243.4: Add E2E test case `US243_flow` covering happy path and two edge cases.\n### 299. User Story US-244\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 244.1: Implement telemetry event `ui.story.244.start` and `ui.story.244.done`.\n- Acceptance 244.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 244.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 244.4: Add E2E test case `US244_flow` covering happy path and two edge cases.\n### 300. User Story US-245\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 245.1: Implement telemetry event `ui.story.245.start` and `ui.story.245.done`.\n- Acceptance 245.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 245.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 245.4: Add E2E test case `US245_flow` covering happy path and two edge cases.\n### 301. User Story US-246\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 246.1: Implement telemetry event `ui.story.246.start` and `ui.story.246.done`.\n- Acceptance 246.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 246.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 246.4: Add E2E test case `US246_flow` covering happy path and two edge cases.\n### 302. User Story US-247\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 247.1: Implement telemetry event `ui.story.247.start` and `ui.story.247.done`.\n- Acceptance 247.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 247.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 247.4: Add E2E test case `US247_flow` covering happy path and two edge cases.\n### 303. User Story US-248\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 248.1: Implement telemetry event `ui.story.248.start` and `ui.story.248.done`.\n- Acceptance 248.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 248.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 248.4: Add E2E test case `US248_flow` covering happy path and two edge cases.\n### 304. User Story US-249\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 249.1: Implement telemetry event `ui.story.249.start` and `ui.story.249.done`.\n- Acceptance 249.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 249.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 249.4: Add E2E test case `US249_flow` covering happy path and two edge cases.\n### 305. User Story US-250\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 250.1: Implement telemetry event `ui.story.250.start` and `ui.story.250.done`.\n- Acceptance 250.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 250.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 250.4: Add E2E test case `US250_flow` covering happy path and two edge cases.\n### 306. User Story US-251\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 251.1: Implement telemetry event `ui.story.251.start` and `ui.story.251.done`.\n- Acceptance 251.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 251.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 251.4: Add E2E test case `US251_flow` covering happy path and two edge cases.\n### 307. User Story US-252\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 252.1: Implement telemetry event `ui.story.252.start` and `ui.story.252.done`.\n- Acceptance 252.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 252.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 252.4: Add E2E test case `US252_flow` covering happy path and two edge cases.\n### 308. User Story US-253\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 253.1: Implement telemetry event `ui.story.253.start` and `ui.story.253.done`.\n- Acceptance 253.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 253.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 253.4: Add E2E test case `US253_flow` covering happy path and two edge cases.\n### 309. User Story US-254\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 254.1: Implement telemetry event `ui.story.254.start` and `ui.story.254.done`.\n- Acceptance 254.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 254.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 254.4: Add E2E test case `US254_flow` covering happy path and two edge cases.\n### 310. User Story US-255\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 255.1: Implement telemetry event `ui.story.255.start` and `ui.story.255.done`.\n- Acceptance 255.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 255.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 255.4: Add E2E test case `US255_flow` covering happy path and two edge cases.\n### 311. User Story US-256\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 256.1: Implement telemetry event `ui.story.256.start` and `ui.story.256.done`.\n- Acceptance 256.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 256.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 256.4: Add E2E test case `US256_flow` covering happy path and two edge cases.\n### 312. User Story US-257\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 257.1: Implement telemetry event `ui.story.257.start` and `ui.story.257.done`.\n- Acceptance 257.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 257.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 257.4: Add E2E test case `US257_flow` covering happy path and two edge cases.\n### 313. User Story US-258\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 258.1: Implement telemetry event `ui.story.258.start` and `ui.story.258.done`.\n- Acceptance 258.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 258.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 258.4: Add E2E test case `US258_flow` covering happy path and two edge cases.\n### 314. User Story US-259\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 259.1: Implement telemetry event `ui.story.259.start` and `ui.story.259.done`.\n- Acceptance 259.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 259.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 259.4: Add E2E test case `US259_flow` covering happy path and two edge cases.\n### 315. User Story US-260\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 260.1: Implement telemetry event `ui.story.260.start` and `ui.story.260.done`.\n- Acceptance 260.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 260.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 260.4: Add E2E test case `US260_flow` covering happy path and two edge cases.\n### 316. User Story US-261\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 261.1: Implement telemetry event `ui.story.261.start` and `ui.story.261.done`.\n- Acceptance 261.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 261.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 261.4: Add E2E test case `US261_flow` covering happy path and two edge cases.\n### 317. User Story US-262\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 262.1: Implement telemetry event `ui.story.262.start` and `ui.story.262.done`.\n- Acceptance 262.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 262.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 262.4: Add E2E test case `US262_flow` covering happy path and two edge cases.\n### 318. User Story US-263\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 263.1: Implement telemetry event `ui.story.263.start` and `ui.story.263.done`.\n- Acceptance 263.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 263.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 263.4: Add E2E test case `US263_flow` covering happy path and two edge cases.\n### 319. User Story US-264\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 264.1: Implement telemetry event `ui.story.264.start` and `ui.story.264.done`.\n- Acceptance 264.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 264.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 264.4: Add E2E test case `US264_flow` covering happy path and two edge cases.\n### 320. User Story US-265\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 265.1: Implement telemetry event `ui.story.265.start` and `ui.story.265.done`.\n- Acceptance 265.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 265.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 265.4: Add E2E test case `US265_flow` covering happy path and two edge cases.\n### 321. User Story US-266\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 266.1: Implement telemetry event `ui.story.266.start` and `ui.story.266.done`.\n- Acceptance 266.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 266.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 266.4: Add E2E test case `US266_flow` covering happy path and two edge cases.\n### 322. User Story US-267\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 267.1: Implement telemetry event `ui.story.267.start` and `ui.story.267.done`.\n- Acceptance 267.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 267.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 267.4: Add E2E test case `US267_flow` covering happy path and two edge cases.\n### 323. User Story US-268\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 268.1: Implement telemetry event `ui.story.268.start` and `ui.story.268.done`.\n- Acceptance 268.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 268.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 268.4: Add E2E test case `US268_flow` covering happy path and two edge cases.\n### 324. User Story US-269\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 269.1: Implement telemetry event `ui.story.269.start` and `ui.story.269.done`.\n- Acceptance 269.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 269.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 269.4: Add E2E test case `US269_flow` covering happy path and two edge cases.\n### 325. User Story US-270\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 270.1: Implement telemetry event `ui.story.270.start` and `ui.story.270.done`.\n- Acceptance 270.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 270.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 270.4: Add E2E test case `US270_flow` covering happy path and two edge cases.\n### 326. User Story US-271\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 271.1: Implement telemetry event `ui.story.271.start` and `ui.story.271.done`.\n- Acceptance 271.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 271.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 271.4: Add E2E test case `US271_flow` covering happy path and two edge cases.\n### 327. User Story US-272\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 272.1: Implement telemetry event `ui.story.272.start` and `ui.story.272.done`.\n- Acceptance 272.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 272.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 272.4: Add E2E test case `US272_flow` covering happy path and two edge cases.\n### 328. User Story US-273\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 273.1: Implement telemetry event `ui.story.273.start` and `ui.story.273.done`.\n- Acceptance 273.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 273.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 273.4: Add E2E test case `US273_flow` covering happy path and two edge cases.\n### 329. User Story US-274\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 274.1: Implement telemetry event `ui.story.274.start` and `ui.story.274.done`.\n- Acceptance 274.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 274.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 274.4: Add E2E test case `US274_flow` covering happy path and two edge cases.\n### 330. User Story US-275\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 275.1: Implement telemetry event `ui.story.275.start` and `ui.story.275.done`.\n- Acceptance 275.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 275.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 275.4: Add E2E test case `US275_flow` covering happy path and two edge cases.\n### 331. User Story US-276\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 276.1: Implement telemetry event `ui.story.276.start` and `ui.story.276.done`.\n- Acceptance 276.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 276.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 276.4: Add E2E test case `US276_flow` covering happy path and two edge cases.\n### 332. User Story US-277\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 277.1: Implement telemetry event `ui.story.277.start` and `ui.story.277.done`.\n- Acceptance 277.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 277.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 277.4: Add E2E test case `US277_flow` covering happy path and two edge cases.\n### 333. User Story US-278\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 278.1: Implement telemetry event `ui.story.278.start` and `ui.story.278.done`.\n- Acceptance 278.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 278.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 278.4: Add E2E test case `US278_flow` covering happy path and two edge cases.\n### 334. User Story US-279\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 279.1: Implement telemetry event `ui.story.279.start` and `ui.story.279.done`.\n- Acceptance 279.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 279.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 279.4: Add E2E test case `US279_flow` covering happy path and two edge cases.\n### 335. User Story US-280\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 280.1: Implement telemetry event `ui.story.280.start` and `ui.story.280.done`.\n- Acceptance 280.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 280.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 280.4: Add E2E test case `US280_flow` covering happy path and two edge cases.\n### 336. User Story US-281\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 281.1: Implement telemetry event `ui.story.281.start` and `ui.story.281.done`.\n- Acceptance 281.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 281.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 281.4: Add E2E test case `US281_flow` covering happy path and two edge cases.\n### 337. User Story US-282\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 282.1: Implement telemetry event `ui.story.282.start` and `ui.story.282.done`.\n- Acceptance 282.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 282.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 282.4: Add E2E test case `US282_flow` covering happy path and two edge cases.\n### 338. User Story US-283\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 283.1: Implement telemetry event `ui.story.283.start` and `ui.story.283.done`.\n- Acceptance 283.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 283.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 283.4: Add E2E test case `US283_flow` covering happy path and two edge cases.\n### 339. User Story US-284\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 284.1: Implement telemetry event `ui.story.284.start` and `ui.story.284.done`.\n- Acceptance 284.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 284.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 284.4: Add E2E test case `US284_flow` covering happy path and two edge cases.\n### 340. User Story US-285\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 285.1: Implement telemetry event `ui.story.285.start` and `ui.story.285.done`.\n- Acceptance 285.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 285.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 285.4: Add E2E test case `US285_flow` covering happy path and two edge cases.\n### 341. User Story US-286\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 286.1: Implement telemetry event `ui.story.286.start` and `ui.story.286.done`.\n- Acceptance 286.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 286.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 286.4: Add E2E test case `US286_flow` covering happy path and two edge cases.\n### 342. User Story US-287\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 287.1: Implement telemetry event `ui.story.287.start` and `ui.story.287.done`.\n- Acceptance 287.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 287.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 287.4: Add E2E test case `US287_flow` covering happy path and two edge cases.\n### 343. User Story US-288\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 288.1: Implement telemetry event `ui.story.288.start` and `ui.story.288.done`.\n- Acceptance 288.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 288.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 288.4: Add E2E test case `US288_flow` covering happy path and two edge cases.\n### 344. User Story US-289\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 289.1: Implement telemetry event `ui.story.289.start` and `ui.story.289.done`.\n- Acceptance 289.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 289.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 289.4: Add E2E test case `US289_flow` covering happy path and two edge cases.\n### 345. User Story US-290\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 290.1: Implement telemetry event `ui.story.290.start` and `ui.story.290.done`.\n- Acceptance 290.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 290.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 290.4: Add E2E test case `US290_flow` covering happy path and two edge cases.\n### 346. User Story US-291\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 291.1: Implement telemetry event `ui.story.291.start` and `ui.story.291.done`.\n- Acceptance 291.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 291.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 291.4: Add E2E test case `US291_flow` covering happy path and two edge cases.\n### 347. User Story US-292\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 292.1: Implement telemetry event `ui.story.292.start` and `ui.story.292.done`.\n- Acceptance 292.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 292.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 292.4: Add E2E test case `US292_flow` covering happy path and two edge cases.\n### 348. User Story US-293\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 293.1: Implement telemetry event `ui.story.293.start` and `ui.story.293.done`.\n- Acceptance 293.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 293.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 293.4: Add E2E test case `US293_flow` covering happy path and two edge cases.\n### 349. User Story US-294\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 294.1: Implement telemetry event `ui.story.294.start` and `ui.story.294.done`.\n- Acceptance 294.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 294.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 294.4: Add E2E test case `US294_flow` covering happy path and two edge cases.\n### 350. User Story US-295\nAs a player, I want the bet panel to surface my last 3 stakes so I can act faster.\n- Acceptance 295.1: Implement telemetry event `ui.story.295.start` and `ui.story.295.done`.\n- Acceptance 295.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 295.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 295.4: Add E2E test case `US295_flow` covering happy path and two edge cases.\n### 351. User Story US-296\nAs a player, I need the Cash Out CTA to be thumb-reachable on small devices.\n- Acceptance 296.1: Implement telemetry event `ui.story.296.start` and `ui.story.296.done`.\n- Acceptance 296.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 296.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 296.4: Add E2E test case `US296_flow` covering happy path and two edge cases.\n### 352. User Story US-297\nAs a risk officer, I require guardrails that prevent bets above configured thresholds.\n- Acceptance 297.1: Implement telemetry event `ui.story.297.start` and `ui.story.297.done`.\n- Acceptance 297.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 297.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 297.4: Add E2E test case `US297_flow` covering happy path and two edge cases.\n### 353. User Story US-298\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 298.1: Implement telemetry event `ui.story.298.start` and `ui.story.298.done`.\n- Acceptance 298.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 298.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 298.4: Add E2E test case `US298_flow` covering happy path and two edge cases.\n### 354. User Story US-299\nAs a support agent, I need error codes surfaced with human-readable mapping.\n- Acceptance 299.1: Implement telemetry event `ui.story.299.start` and `ui.story.299.done`.\n- Acceptance 299.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 299.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 299.4: Add E2E test case `US299_flow` covering happy path and two edge cases.\n### 355. User Story US-300\nAs a compliance auditor, I want audit logs for every UI state transition in payment flows.\n- Acceptance 300.1: Implement telemetry event `ui.story.300.start` and `ui.story.300.done`.\n- Acceptance 300.2: Provide visual regression snapshot across 3 themes and 4 breakpoints.\n- Acceptance 300.3: A11y score >= 98 via axe-core with zero critical issues.\n- Acceptance 300.4: Add E2E test case `US300_flow` covering happy path and two edge cases.\n### Flight HUD & Multiplier Animation — Directive\n- Multiplier curve must render at 60fps target; gracefully degrade to 30fps on low-tier devices.\n- Utilize requestAnimationFrame; detach rendering from business logic; maintain deterministic state.\n- Easing functions: cubic-bezier tuned per phase (taxi, takeoff, climb, turbulence, crash).\n- Accessibility: reduce-motion media query respects user prefs; provide alternative text readouts.\n- Synchronization: HUD state machine listens to streaming events; never blocks on network.\n- Crash event: 80–120ms 'snap' with chromatic aberration suppressed; avoid seizure triggers.\n- Cash Out: immediate feedback with optimistic ledger entry; fallback rollback with toast.\n### Payment UI — Edge Case Matrix\n| Scenario | UI Expectation | Telemetry | Recovery |\n|---|---|---|---|\n| 3DS challenge timeout | Show countdown, allow retry, provide fallback method | payment.3ds.timeout | Offer alternative UPI/card flow |\n| UPI mandate pending | Badge 'Pending'; explain SLA; notify via toaster | payment.upi.pending | Trigger manual refresh CTA |\n| Card BIN blocked | Inline error with link to policy doc | payment.card.bin_blocked | Suggest other payment rails |\n| Network blip | Spinner with offline banner; auto-retry backoff | payment.net.blip | Queue and resume pattern |\n| Double-tap Cash Out | Debounce & idempotency key; surface last confirmed txn | cashout.doubletap | Show recent tx list |\n#### Enhancement Block #356\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 356.\n#### Enhancement Block #357\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 357.\n#### Enhancement Block #358\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 358.\n#### Enhancement Block #359\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 359.\n#### Enhancement Block #360\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 360.\n#### Enhancement Block #361\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 361.\n#### Enhancement Block #362\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 362.\n#### Enhancement Block #363\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 363.\n#### Enhancement Block #364\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 364.\n#### Enhancement Block #365\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 365.\n#### Enhancement Block #366\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 366.\n#### Enhancement Block #367\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 367.\n#### Enhancement Block #368\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 368.\n#### Enhancement Block #369\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 369.\n#### Enhancement Block #370\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 370.\n#### Enhancement Block #371\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 371.\n#### Enhancement Block #372\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 372.\n#### Enhancement Block #373\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 373.\n#### Enhancement Block #374\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 374.\n#### Enhancement Block #375\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 375.\n#### Enhancement Block #376\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 376.\n#### Enhancement Block #377\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 377.\n#### Enhancement Block #378\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 378.\n#### Enhancement Block #379\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 379.\n#### Enhancement Block #380\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 380.\n#### Enhancement Block #381\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 381.\n#### Enhancement Block #382\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 382.\n#### Enhancement Block #383\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 383.\n#### Enhancement Block #384\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 384.\n#### Enhancement Block #385\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 385.\n#### Enhancement Block #386\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 386.\n#### Enhancement Block #387\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 387.\n#### Enhancement Block #388\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 388.\n#### Enhancement Block #389\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 389.\n#### Enhancement Block #390\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 390.\n#### Enhancement Block #391\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 391.\n#### Enhancement Block #392\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 392.\n#### Enhancement Block #393\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 393.\n#### Enhancement Block #394\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 394.\n#### Enhancement Block #395\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 395.\n#### Enhancement Block #396\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 396.\n#### Enhancement Block #397\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 397.\n#### Enhancement Block #398\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 398.\n#### Enhancement Block #399\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 399.\n#### Enhancement Block #400\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 400.\n#### Enhancement Block #401\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 401.\n#### Enhancement Block #402\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 402.\n#### Enhancement Block #403\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 403.\n#### Enhancement Block #404\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 404.\n#### Enhancement Block #405\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 405.\n#### Enhancement Block #406\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 406.\n#### Enhancement Block #407\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 407.\n#### Enhancement Block #408\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 408.\n#### Enhancement Block #409\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 409.\n#### Enhancement Block #410\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 410.\n#### Enhancement Block #411\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 411.\n#### Enhancement Block #412\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 412.\n#### Enhancement Block #413\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 413.\n#### Enhancement Block #414\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 414.\n#### Enhancement Block #415\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 415.\n#### Enhancement Block #416\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 416.\n#### Enhancement Block #417\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 417.\n#### Enhancement Block #418\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 418.\n#### Enhancement Block #419\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 419.\n#### Enhancement Block #420\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 420.\n#### Enhancement Block #421\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 421.\n#### Enhancement Block #422\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 422.\n#### Enhancement Block #423\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 423.\n#### Enhancement Block #424\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 424.\n#### Enhancement Block #425\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 425.\n#### Enhancement Block #426\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 426.\n#### Enhancement Block #427\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 427.\n#### Enhancement Block #428\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 428.\n#### Enhancement Block #429\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 429.\n#### Enhancement Block #430\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 430.\n#### Enhancement Block #431\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 431.\n#### Enhancement Block #432\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 432.\n#### Enhancement Block #433\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 433.\n#### Enhancement Block #434\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 434.\n#### Enhancement Block #435\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 435.\n#### Enhancement Block #436\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 436.\n#### Enhancement Block #437\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 437.\n#### Enhancement Block #438\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 438.\n#### Enhancement Block #439\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 439.\n#### Enhancement Block #440\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 440.\n#### Enhancement Block #441\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 441.\n#### Enhancement Block #442\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 442.\n#### Enhancement Block #443\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 443.\n#### Enhancement Block #444\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 444.\n#### Enhancement Block #445\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 445.\n#### Enhancement Block #446\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 446.\n#### Enhancement Block #447\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 447.\n#### Enhancement Block #448\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 448.\n#### Enhancement Block #449\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 449.\n#### Enhancement Block #450\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 450.\n#### Enhancement Block #451\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 451.\n#### Enhancement Block #452\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 452.\n#### Enhancement Block #453\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 453.\n#### Enhancement Block #454\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 454.\n#### Enhancement Block #455\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 455.\n#### Enhancement Block #456\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 456.\n#### Enhancement Block #457\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 457.\n#### Enhancement Block #458\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 458.\n#### Enhancement Block #459\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 459.\n#### Enhancement Block #460\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 460.\n#### Enhancement Block #461\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 461.\n#### Enhancement Block #462\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 462.\n#### Enhancement Block #463\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 463.\n#### Enhancement Block #464\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 464.\n#### Enhancement Block #465\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 465.\n#### Enhancement Block #466\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 466.\n#### Enhancement Block #467\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 467.\n#### Enhancement Block #468\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 468.\n#### Enhancement Block #469\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 469.\n#### Enhancement Block #470\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 470.\n#### Enhancement Block #471\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 471.\n#### Enhancement Block #472\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 472.\n#### Enhancement Block #473\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 473.\n#### Enhancement Block #474\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 474.\n#### Enhancement Block #475\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 475.\n#### Enhancement Block #476\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 476.\n#### Enhancement Block #477\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 477.\n#### Enhancement Block #478\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 478.\n#### Enhancement Block #479\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 479.\n#### Enhancement Block #480\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 480.\n#### Enhancement Block #481\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 481.\n#### Enhancement Block #482\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 482.\n#### Enhancement Block #483\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 483.\n#### Enhancement Block #484\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 484.\n#### Enhancement Block #485\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 485.\n#### Enhancement Block #486\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 486.\n#### Enhancement Block #487\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 487.\n#### Enhancement Block #488\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 488.\n#### Enhancement Block #489\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 489.\n#### Enhancement Block #490\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 490.\n#### Enhancement Block #491\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 491.\n#### Enhancement Block #492\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 492.\n#### Enhancement Block #493\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 493.\n#### Enhancement Block #494\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 494.\n#### Enhancement Block #495\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 495.\n#### Enhancement Block #496\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 496.\n#### Enhancement Block #497\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 497.\n#### Enhancement Block #498\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 498.\n#### Enhancement Block #499\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 499.\n#### Enhancement Block #500\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 500.\n#### Enhancement Block #501\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 501.\n#### Enhancement Block #502\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 502.\n#### Enhancement Block #503\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 503.\n#### Enhancement Block #504\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 504.\n#### Enhancement Block #505\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 505.\n#### Enhancement Block #506\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 506.\n#### Enhancement Block #507\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 507.\n#### Enhancement Block #508\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 508.\n#### Enhancement Block #509\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 509.\n#### Enhancement Block #510\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 510.\n#### Enhancement Block #511\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 511.\n#### Enhancement Block #512\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 512.\n#### Enhancement Block #513\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 513.\n#### Enhancement Block #514\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 514.\n#### Enhancement Block #515\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 515.\n#### Enhancement Block #516\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 516.\n#### Enhancement Block #517\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 517.\n#### Enhancement Block #518\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 518.\n#### Enhancement Block #519\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 519.\n#### Enhancement Block #520\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 520.\n#### Enhancement Block #521\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 521.\n#### Enhancement Block #522\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 522.\n#### Enhancement Block #523\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 523.\n#### Enhancement Block #524\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 524.\n#### Enhancement Block #525\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 525.\n#### Enhancement Block #526\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 526.\n#### Enhancement Block #527\n- **Directive:** Refactor legacy styles into tokenized, theme-aware constructs with zero inline styles.\n- **Rationale:** Drives maintainability, reduces regressions, and accelerates brand pivots.\n- **Action Items:**\n1) Migrate hard-coded values to `--token-*` CSS variables.\n2) Consolidate shadows and radii under design tokens.\n3) Replace bitmap icons with SVG; ensure accessible titles/roles.\n4) Normalize spacing using 4px baseline grid.\n5) Add Percy/Chromatic visual regression checks for all critical paths.\n6) Add unit tests for utility functions (formatting, number abbreviations, currency).\n7) Document in Storybook with Controls & A11y addons.\n8) Wire usage analytics to UX KPIs (scan time, hover intent, rage clicks).\n9) Create rollback playbook with feature flags.\n10) Capture learnings in a post-launch retro.\n**Exit Criteria:** All checkpoints pass CI with zero regressions. Owner: `ui-core@aviator` — Seq 527.","size_bytes":356905},"client/src/components/otp-info-alert.tsx":{"content":"import { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Info } from \"lucide-react\";\n\nexport default function OtpInfoAlert() {\n  return (\n    <Alert className=\"bg-blue-900/50 border-blue-500/50 mb-4\">\n      <Info className=\"h-4 w-4 text-blue-400\" />\n      <AlertDescription className=\"text-blue-200\">\n        <strong>Development Mode:</strong> OTP codes are displayed in the server console logs. \n        In production, they will be sent to your actual email/phone.\n      </AlertDescription>\n    </Alert>\n  );\n}","size_bytes":528},"client/src/pages/admin-dashboard.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { useWebSocket } from \"@/hooks/useWebSocket\";\nimport { \n  ShieldCheckIcon, \n  IndianRupeeIcon, \n  WalletIcon, \n  TrendingUpIcon, \n  TrendingDownIcon,\n  CheckIcon,\n  XIcon,\n  UsersIcon,\n  BellIcon,\n  SettingsIcon\n} from \"lucide-react\";\n\nexport default function AdminDashboard() {\n  const [activeTab, setActiveTab] = useState('overview');\n  const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  // Check admin authentication\n  const adminToken = localStorage.getItem('adminToken');\n  if (!adminToken) {\n    window.location.href = '/admin/login';\n    return null;\n  }\n\n  // WebSocket for real-time notifications\n  const { sendMessage } = useWebSocket(`ws://localhost:5000/admin-ws?token=${adminToken}`, {\n    onMessage: (data) => {\n      if (data.type === 'payment_notification') {\n        toast({\n          title: \"New Payment Received!\",\n          description: `₹${data.data.amount} payment from Player ${data.data.userId}`,\n        });\n        queryClient.invalidateQueries({ queryKey: ['/api/admin/payments/pending'] });\n      }\n    }\n  });\n\n  // Dashboard statistics\n  const { data: dashboardStats } = useQuery({\n    queryKey: ['/api/admin/dashboard/stats'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/admin/dashboard/stats', {}, {\n        Authorization: `Bearer ${adminToken}`\n      });\n      return response.json();\n    }\n  });\n\n  // Pending payments\n  const { data: pendingPayments } = useQuery({\n    queryKey: ['/api/admin/payments/pending'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/admin/payments/pending', {}, {\n        Authorization: `Bearer ${adminToken}`\n      });\n      return response.json();\n    }\n  });\n\n  // Pending withdrawals\n  const { data: pendingWithdrawals } = useQuery({\n    queryKey: ['/api/admin/withdrawals/pending'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/admin/withdrawals/pending', {}, {\n        Authorization: `Bearer ${adminToken}`\n      });\n      return response.json();\n    }\n  });\n\n  // Approve payment\n  const approvePaymentMutation = useMutation({\n    mutationFn: async (paymentId: string) => {\n      const response = await apiRequest('POST', `/api/admin/payments/${paymentId}/approve`, {}, {\n        Authorization: `Bearer ${adminToken}`\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({ title: \"Payment approved successfully\" });\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/payments/pending'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/dashboard/stats'] });\n    }\n  });\n\n  // Process withdrawal\n  const processWithdrawalMutation = useMutation({\n    mutationFn: async (withdrawalId: string) => {\n      const response = await apiRequest('POST', `/api/admin/withdrawals/${withdrawalId}/complete`, {}, {\n        Authorization: `Bearer ${adminToken}`\n      });\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({ title: \"Withdrawal processed successfully\" });\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/withdrawals/pending'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/dashboard/stats'] });\n    }\n  });\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-red-900 to-purple-900\">\n      {/* Header */}\n      <div className=\"bg-gray-800/90 border-b border-gray-700 p-4\">\n        <div className=\"container mx-auto flex items-center justify-between\">\n          <div className=\"flex items-center space-x-3\">\n            <ShieldCheckIcon className=\"w-8 h-8 text-red-400\" />\n            <h1 className=\"text-2xl font-bold text-white\">GameHub Admin</h1>\n          </div>\n          <div className=\"flex items-center space-x-4\">\n            <BellIcon className=\"w-6 h-6 text-gray-400\" />\n            <Button variant=\"ghost\" className=\"text-white\" onClick={() => {\n              localStorage.removeItem('adminToken');\n              window.location.href = '/admin/login';\n            }}>\n              Logout\n            </Button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container mx-auto p-6\">\n        {/* Navigation Tabs */}\n        <div className=\"flex space-x-1 bg-gray-800/50 p-1 rounded-lg mb-6\">\n          {[\n            { id: 'overview', label: 'Overview', icon: TrendingUpIcon },\n            { id: 'payments', label: 'Pending Payments', icon: IndianRupeeIcon },\n            { id: 'withdrawals', label: 'Pending Withdrawals', icon: WalletIcon },\n            { id: 'settings', label: 'Settings', icon: SettingsIcon }\n          ].map(tab => (\n            <Button\n              key={tab.id}\n              variant={activeTab === tab.id ? 'default' : 'ghost'}\n              onClick={() => setActiveTab(tab.id)}\n              className={`flex-1 ${activeTab === tab.id ? 'bg-red-600' : 'text-gray-300'}`}\n            >\n              <tab.icon className=\"w-4 h-4 mr-2\" />\n              {tab.label}\n            </Button>\n          ))}\n        </div>\n\n        {/* Overview Tab */}\n        {activeTab === 'overview' && (\n          <div className=\"space-y-6\">\n            {/* Stats Cards */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n              <Card className=\"bg-gradient-to-br from-green-600/20 to-emerald-600/20 border-green-600/30\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-green-400 text-sm font-medium\">Total Payments</p>\n                      <p className=\"text-2xl font-bold text-white\">₹{dashboardStats?.totalPayments || 0}</p>\n                    </div>\n                    <TrendingUpIcon className=\"w-8 h-8 text-green-400\" />\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"bg-gradient-to-br from-red-600/20 to-orange-600/20 border-red-600/30\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-red-400 text-sm font-medium\">Total Withdrawals</p>\n                      <p className=\"text-2xl font-bold text-white\">₹{dashboardStats?.totalWithdrawals || 0}</p>\n                    </div>\n                    <TrendingDownIcon className=\"w-8 h-8 text-red-400\" />\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"bg-gradient-to-br from-blue-600/20 to-purple-600/20 border-blue-600/30\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-blue-400 text-sm font-medium\">Pending Approvals</p>\n                      <p className=\"text-2xl font-bold text-white\">{dashboardStats?.pendingPayments || 0}</p>\n                    </div>\n                    <BellIcon className=\"w-8 h-8 text-blue-400\" />\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card className=\"bg-gradient-to-br from-purple-600/20 to-pink-600/20 border-purple-600/30\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"text-purple-400 text-sm font-medium\">Active Users</p>\n                      <p className=\"text-2xl font-bold text-white\">{dashboardStats?.activeUsers || 0}</p>\n                    </div>\n                    <UsersIcon className=\"w-8 h-8 text-purple-400\" />\n                  </div>\n                </CardContent>\n              </Card>\n            </div>\n          </div>\n        )}\n\n        {/* Pending Payments Tab */}\n        {activeTab === 'payments' && (\n          <Card className=\"bg-gray-800/80 border-gray-700\">\n            <CardHeader>\n              <CardTitle className=\"text-white\">Pending Payment Approvals</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {pendingPayments?.length > 0 ? (\n                <div className=\"space-y-4\">\n                  {pendingPayments.map((payment: any) => (\n                    <div key={payment.id} className=\"flex items-center justify-between p-4 bg-gray-700/50 rounded-lg\">\n                      <div className=\"flex-1\">\n                        <div className=\"flex items-center space-x-4\">\n                          <div>\n                            <p className=\"text-white font-semibold\">Player: {payment.userId}</p>\n                            <p className=\"text-gray-400 text-sm\">Amount: ₹{payment.amount} → {payment.pointsToCredit} points</p>\n                            {payment.payerUpiId && (\n                              <p className=\"text-gray-400 text-sm\">UPI: {payment.payerUpiId}</p>\n                            )}\n                            {payment.paymentTransactionId && (\n                              <p className=\"text-gray-400 text-sm\">Transaction ID: {payment.paymentTransactionId}</p>\n                            )}\n                          </div>\n                        </div>\n                        <p className=\"text-gray-500 text-xs mt-2\">\n                          Requested: {new Date(payment.createdAt).toLocaleString()}\n                        </p>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <Button\n                          size=\"sm\"\n                          onClick={() => approvePaymentMutation.mutate(payment.id)}\n                          disabled={approvePaymentMutation.isPending}\n                          className=\"bg-green-600 hover:bg-green-700\"\n                        >\n                          <CheckIcon className=\"w-4 h-4 mr-1\" />\n                          Approve\n                        </Button>\n                        <Button size=\"sm\" variant=\"destructive\">\n                          <XIcon className=\"w-4 h-4 mr-1\" />\n                          Reject\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <p className=\"text-gray-400 text-center py-8\">No pending payments</p>\n              )}\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Pending Withdrawals Tab */}\n        {activeTab === 'withdrawals' && (\n          <Card className=\"bg-gray-800/80 border-gray-700\">\n            <CardHeader>\n              <CardTitle className=\"text-white\">Pending Withdrawal Requests</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {pendingWithdrawals?.length > 0 ? (\n                <div className=\"space-y-4\">\n                  {pendingWithdrawals.map((withdrawal: any) => (\n                    <div key={withdrawal.id} className=\"flex items-center justify-between p-4 bg-gray-700/50 rounded-lg\">\n                      <div className=\"flex-1\">\n                        <div>\n                          <p className=\"text-white font-semibold\">Player: {withdrawal.userId}</p>\n                          <p className=\"text-gray-400 text-sm\">\n                            Withdraw: {withdrawal.pointsToWithdraw} points → ₹{withdrawal.withdrawalAmount}\n                          </p>\n                          <p className=\"text-gray-400 text-sm\">UPI ID: {withdrawal.recipientUpiId}</p>\n                        </div>\n                        <p className=\"text-gray-500 text-xs mt-2\">\n                          Requested: {new Date(withdrawal.createdAt).toLocaleString()}\n                        </p>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <Button\n                          size=\"sm\"\n                          onClick={() => processWithdrawalMutation.mutate(withdrawal.id)}\n                          disabled={processWithdrawalMutation.isPending}\n                          className=\"bg-orange-600 hover:bg-orange-700\"\n                        >\n                          <CheckIcon className=\"w-4 h-4 mr-1\" />\n                          Mark Paid\n                        </Button>\n                        <Button size=\"sm\" variant=\"destructive\">\n                          <XIcon className=\"w-4 h-4 mr-1\" />\n                          Reject\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <p className=\"text-gray-400 text-center py-8\">No pending withdrawals</p>\n              )}\n            </CardContent>\n          </Card>\n        )}\n\n        {/* Settings Tab */}\n        {activeTab === 'settings' && (\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            <Card className=\"bg-gray-800/80 border-gray-700\">\n              <CardHeader>\n                <CardTitle className=\"text-white\">Conversion Rates</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <label className=\"text-gray-300 text-sm\">Top-up Rate (Points per ₹1)</label>\n                  <Input className=\"bg-gray-700 border-gray-600 text-white mt-1\" defaultValue=\"10\" />\n                </div>\n                <div>\n                  <label className=\"text-gray-300 text-sm\">Withdrawal Rate (₹ per Point)</label>\n                  <Input className=\"bg-gray-700 border-gray-600 text-white mt-1\" defaultValue=\"0.08\" />\n                </div>\n                <Button className=\"w-full bg-blue-600 hover:bg-blue-700\">\n                  Update Rates\n                </Button>\n              </CardContent>\n            </Card>\n\n            <Card className=\"bg-gray-800/80 border-gray-700\">\n              <CardHeader>\n                <CardTitle className=\"text-white\">Payment QR Code</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-center\">\n                  <div className=\"w-32 h-32 mx-auto bg-gray-700 rounded-lg flex items-center justify-center mb-4\">\n                    <span className=\"text-gray-500\">QR Code</span>\n                  </div>\n                  <p className=\"text-gray-400 text-sm mb-4\">ashishalamkabir@idfc</p>\n                  <Button className=\"w-full bg-green-600 hover:bg-green-700\">\n                    Upload New QR Code\n                  </Button>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":15039},"client/src/pages/admin-login.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { ShieldCheckIcon, KeyIcon } from \"lucide-react\";\nimport { useLocation } from \"wouter\";\n\nexport default function AdminLogin() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [, navigate] = useLocation();\n  const { toast } = useToast();\n\n  const loginMutation = useMutation({\n    mutationFn: async () => {\n      const response = await apiRequest('POST', '/api/admin/login', {\n        username,\n        password,\n      });\n      return response.json();\n    },\n    onSuccess: (data) => {\n      localStorage.setItem('adminToken', data.token);\n      toast({\n        title: \"Login Successful\",\n        description: \"Welcome to the admin panel\",\n      });\n      navigate('/admin/dashboard');\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Login Failed\",\n        description: error.message || \"Invalid credentials\",\n        variant: \"destructive\",\n      });\n    }\n  });\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    if (username && password) {\n      loginMutation.mutate();\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-red-900 to-purple-900 flex items-center justify-center p-4\">\n      <Card className=\"w-full max-w-md bg-gray-800/90 border-gray-700 backdrop-blur-sm\">\n        <CardHeader className=\"text-center\">\n          <div className=\"mx-auto w-16 h-16 bg-red-600/20 rounded-full flex items-center justify-center mb-4\">\n            <ShieldCheckIcon className=\"w-8 h-8 text-red-400\" />\n          </div>\n          <CardTitle className=\"text-2xl font-bold text-white\">Admin Login</CardTitle>\n          <p className=\"text-gray-400\">Access the admin panel</p>\n        </CardHeader>\n        <CardContent>\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"username\" className=\"text-gray-300\">Username</Label>\n              <Input\n                id=\"username\"\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                className=\"bg-gray-700 border-gray-600 text-white\"\n                required\n              />\n            </div>\n            <div>\n              <Label htmlFor=\"password\" className=\"text-gray-300\">Password</Label>\n              <Input\n                id=\"password\"\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                className=\"bg-gray-700 border-gray-600 text-white\"\n                required\n              />\n            </div>\n            <Button\n              type=\"submit\"\n              disabled={loginMutation.isPending || !username || !password}\n              className=\"w-full bg-gradient-to-r from-red-600 to-purple-700 hover:from-red-700 hover:to-purple-800\"\n            >\n              <KeyIcon className=\"w-4 h-4 mr-2\" />\n              {loginMutation.isPending ? \"Logging in...\" : \"Login\"}\n            </Button>\n          </form>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":3505},"client/src/pages/aviator-game-old.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Link } from \"wouter\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\nimport { useWebSocket } from \"@/hooks/useWebSocket\";\nimport Navigation from \"@/components/navigation\";\nimport { MultiplierDisplay } from \"@/components/aviator/MultiplierDisplay\";\nimport { GameCanvas } from \"@/components/aviator/GameCanvas\";\nimport { BettingPanel } from \"@/components/aviator/BettingPanel\";\nimport { StatisticsPanel } from \"@/components/aviator/StatisticsPanel\";\nimport { ArrowLeftIcon } from \"lucide-react\";\n\ninterface GameState {\n  roundId: string;\n  status: 'betting' | 'flying' | 'crashed';\n  multiplier: number;\n  startTime?: string;\n}\n\ninterface LivePlayer {\n  userId: string;\n  betAmount: number;\n  status: 'active' | 'cashed_out' | 'crashed';\n  cashOutAt?: number;\n}\n\nexport default function AviatorGame() {\n  const [gameState, setGameState] = useState<GameState | null>(null);\n  const [betAmount, setBetAmount] = useState(50);\n  const [autoCashOut, setAutoCashOut] = useState<string>(\"\");\n  const [userBet, setUserBet] = useState<any>(null);\n  const [nextRoundBet, setNextRoundBet] = useState<any>(null);\n  const [livePlayers, setLivePlayers] = useState<LivePlayer[]>([]);\n  const [lastMultipliers, setLastMultipliers] = useState<number[]>([2.34, 1.15, 5.67, 1.87, 3.21]);\n  const [planePosition, setPlanePosition] = useState({ x: 0, y: 0 });\n  const [animationSpeed, setAnimationSpeed] = useState(1);\n  const [showCrashEffect, setShowCrashEffect] = useState(false);\n  const [animationPhase, setAnimationPhase] = useState<'takeoff' | 'ascent' | 'speed' | 'warning' | 'crash'>('takeoff');\n  const [flightTime, setFlightTime] = useState(0);\n  const [showWarning, setShowWarning] = useState(false);\n\n  // Enhanced statistics state\n  const [activePlayerCount, setActivePlayerCount] = useState(Math.floor(Math.random() * 15) + 8);\n  const [totalProfit, setTotalProfit] = useState(0);\n  const [totalLoss, setTotalLoss] = useState(0);\n  const [biggestWinOfDay, setBiggestWinOfDay] = useState({ amount: 5850, player: 'Flyer_47' });\n  const [profitChangePercent, setProfitChangePercent] = useState(0);\n  \n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n\n  const { data: balanceData } = useQuery({\n    queryKey: ['/api/balance'],\n  });\n\n  const { sendMessage } = useWebSocket('/ws', {\n    onMessage: (data) => {\n      switch (data.type) {\n        case 'game_state':\n          setGameState(data.data);\n          break;\n        case 'round_started':\n          setGameState({\n            roundId: data.data.roundId,\n            status: 'betting',\n            multiplier: 1.00,\n          });\n          setUserBet(null);\n          break;\n        case 'next_bet_placed':\n          if (data.data.userId === 'user') {\n            setNextRoundBet({\n              betAmount: data.data.betAmount,\n              autoCashOut: data.data.autoCashOut,\n              status: 'waiting',\n            });\n            toast({\n              title: \"Next Round Bet Placed!\",\n              description: `${data.data.betAmount} points bet placed for next round`,\n            });\n          }\n          break;\n        case 'next_bet_activated':\n          if (data.data.userId === 'user') {\n            setUserBet({\n              betAmount: data.data.betAmount,\n              autoCashOut: data.data.autoCashOut,\n              status: 'active',\n            });\n            setNextRoundBet(null);\n            toast({\n              title: \"Next Round Bet Activated!\",\n              description: `Your ${data.data.betAmount} points bet is now active`,\n            });\n          }\n          break;\n        case 'flying_started':\n          setGameState(prev => prev ? {\n            ...prev,\n            status: 'flying',\n            startTime: data.data.startTime,\n          } : null);\n          setFlightTime(0);\n          setAnimationPhase('takeoff');\n          setShowWarning(false);\n          break;\n        case 'multiplier_update':\n          setGameState(prev => prev ? {\n            ...prev,\n            multiplier: data.data.multiplier,\n          } : null);\n          break;\n        case 'crashed':\n          setShowCrashEffect(true);\n          setAnimationPhase('crash');\n          setGameState(prev => prev ? {\n            ...prev,\n            status: 'crashed',\n            multiplier: data.data.multiplier,\n          } : null);\n          setLastMultipliers(prev => [data.data.multiplier, ...prev.slice(0, 4)]);\n          if (userBet && userBet.status === 'active') {\n            toast({\n              title: \"Plane Crashed!\",\n              description: `You lost ${userBet.betAmount} points at ${data.data.multiplier.toFixed(2)}x`,\n              variant: \"destructive\",\n            });\n          }\n          break;\n        case 'bet_placed':\n          setLivePlayers(prev => {\n            const updatedPlayers = [...prev];\n            const existingPlayerIndex = updatedPlayers.findIndex(p => p.userId === data.data.userId);\n            if (existingPlayerIndex >= 0) {\n              updatedPlayers[existingPlayerIndex] = {\n                ...updatedPlayers[existingPlayerIndex],\n                betAmount: data.data.betAmount,\n                status: 'active'\n              };\n            } else {\n              updatedPlayers.push({\n                userId: data.data.userId,\n                betAmount: data.data.betAmount,\n                status: 'active'\n              });\n            }\n            return updatedPlayers;\n          });\n          setActivePlayerCount(prev => prev + 1);\n          break;\n        case 'cash_out':\n        case 'auto_cash_out':\n          if (data.data.userId === userBet?.userId) {\n            toast({\n              title: \"Successful Cash Out!\",\n              description: `You won ${data.data.winAmount} points at ${data.data.multiplier.toFixed(2)}x`,\n            });\n            setUserBet((prev: any) => prev ? {\n              ...prev,\n              status: 'cashed_out',\n              cashOutAt: data.data.multiplier,\n              winAmount: data.data.winAmount,\n            } : null);\n            queryClient.invalidateQueries({ queryKey: ['/api/balance'] });\n          }\n          break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    sendMessage({ type: 'join', userId: 'user' });\n  }, [sendMessage]);\n\n  // Flight time tracking and animation phase management\n  useEffect(() => {\n    if (gameState?.status === 'flying') {\n      const interval = setInterval(() => {\n        setFlightTime((prev: number) => {\n          const newTime = prev + 0.1;\n          \n          // Animation phase transitions based on time (frames converted to seconds)\n          if (newTime <= 2) {\n            setAnimationPhase('takeoff');\n          } else if (newTime <= 5) {\n            setAnimationPhase('ascent');\n          } else if (newTime <= 10) {\n            setAnimationPhase('speed');\n          } else if (newTime <= 14) {\n            setAnimationPhase('warning');\n            setShowWarning(true);\n          }\n          \n          return newTime;\n        });\n      }, 100);\n      \n      return () => clearInterval(interval);\n    }\n  }, [gameState?.status]);\n\n  // Update plane position and animation based on current phase and multiplier\n  useEffect(() => {\n    if (gameState?.status === 'flying' && gameState.multiplier) {\n      let baseX, baseY, speed;\n      \n      switch (animationPhase) {\n        case 'takeoff':\n          // Initial takeoff - smooth acceleration with slight upward curve\n          baseX = Math.min(gameState.multiplier * 15, 100);\n          baseY = Math.min(gameState.multiplier * 8, 50);\n          speed = 1 + (gameState.multiplier - 1) * 0.2;\n          break;\n        case 'ascent':\n          // Steady diagonal ascent\n          baseX = 100 + Math.min((gameState.multiplier - 1) * 20, 150);\n          baseY = 50 + Math.min((gameState.multiplier - 1) * 15, 80);\n          speed = 1.5 + (gameState.multiplier - 1) * 0.3;\n          break;\n        case 'speed':\n          // Steeper ascent with increased speed\n          baseX = 250 + Math.min((gameState.multiplier - 2.5) * 25, 150);\n          baseY = 130 + Math.min((gameState.multiplier - 2.5) * 20, 60);\n          speed = 2 + (gameState.multiplier - 1) * 0.4;\n          break;\n        case 'warning':\n          // Pre-crash jitter and instability\n          const jitterX = Math.sin(flightTime * 20) * 3;\n          const jitterY = Math.cos(flightTime * 15) * 2;\n          baseX = 400 + Math.min((gameState.multiplier - 5) * 15, 80) + jitterX;\n          baseY = 190 + Math.min((gameState.multiplier - 5) * 10, 30) + jitterY;\n          speed = 2.5 + (gameState.multiplier - 1) * 0.5;\n          break;\n        default:\n          baseX = Math.min(gameState.multiplier * 25, 450);\n          baseY = Math.min(gameState.multiplier * 12, 140);\n          speed = Math.max(1, gameState.multiplier * 0.3);\n      }\n      \n      setPlanePosition({ x: baseX, y: baseY });\n      setAnimationSpeed(speed);\n    } else if (gameState?.status === 'betting') {\n      setPlanePosition({ x: 0, y: 0 });\n      setAnimationSpeed(1);\n      setShowCrashEffect(false);\n      setShowWarning(false);\n      setFlightTime(0);\n      setAnimationPhase('takeoff');\n    }\n  }, [gameState?.multiplier, gameState?.status, animationPhase, flightTime]);\n\n  // Reset crash effect after animation\n  useEffect(() => {\n    if (showCrashEffect) {\n      const timer = setTimeout(() => {\n        setShowCrashEffect(false);\n      }, 3000); // Show crash effect for 3 seconds\n      return () => clearTimeout(timer);\n    }\n  }, [showCrashEffect]);\n\n  const placeBetMutation = useMutation({\n    mutationFn: async (isNextRound = false) => {\n      const response = await apiRequest('POST', '/api/aviator/place-bet', {\n        betAmount,\n        autoCashOut: autoCashOut ? parseFloat(autoCashOut) : null,\n        isNextRound,\n      });\n      return { data: await response.json(), isNextRound };\n    },\n    onSuccess: ({ data, isNextRound }) => {\n      if (isNextRound) {\n        setNextRoundBet({\n          ...data.bet,\n          status: 'waiting',\n        });\n        toast({\n          title: \"Next Round Bet Placed!\",\n          description: `${betAmount} points bet placed for next round`,\n        });\n      } else {\n        setUserBet({\n          ...data.bet,\n          status: 'active',\n        });\n        toast({\n          title: \"Bet Placed!\",\n          description: `${betAmount} points bet placed successfully`,\n        });\n      }\n      queryClient.invalidateQueries({ queryKey: ['/api/balance'] });\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      toast({\n        title: \"Bet Failed\",\n        description: error.message || \"Failed to place bet\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const cashOutMutation = useMutation({\n    mutationFn: async () => {\n      const response = await apiRequest('POST', '/api/aviator/cash-out');\n      return response.json();\n    },\n    onSuccess: (data) => {\n      setUserBet((prev: any) => prev ? {\n        ...prev,\n        status: 'cashed_out',\n        cashOutAt: data.multiplier,\n        winAmount: data.winAmount,\n      } : null);\n      toast({\n        title: \"Successful Cash Out!\",\n        description: `You won ${data.winAmount} points at ${data.multiplier.toFixed(2)}x`,\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/balance'] });\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      toast({\n        title: \"Cash Out Failed\",\n        description: error.message || \"Failed to cash out\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const takeWinningsMutation = useMutation({\n    mutationFn: async () => {\n      const response = await apiRequest('POST', '/api/aviator/take-winnings');\n      return response.json();\n    },\n    onSuccess: (data) => {\n      toast({\n        title: \"Winnings Collected!\",\n        description: `Successfully collected ${data.winnings} points`,\n      });\n      setUserBet(null);\n      queryClient.invalidateQueries({ queryKey: ['/api/balance'] });\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      toast({\n        title: \"Failed to Collect\",\n        description: error.message || \"Failed to collect winnings\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const getStatusText = () => {\n    if (!gameState) return \"Connecting...\";\n    switch (gameState.status) {\n      case 'betting':\n        return \"Place your bet!\";\n      case 'flying':\n        return \"Plane is flying!\";\n      case 'crashed':\n        return \"💥 Plane crashed!\";\n      default:\n        return \"Waiting...\";\n    }\n  };\n\n  const canPlaceBet = gameState?.status === 'betting' && !userBet;\n  const canPlaceNextBet = (gameState?.status === 'flying' || gameState?.status === 'crashed') && !nextRoundBet && !userBet;\n  const canCashOut = gameState?.status === 'flying' && userBet?.status === 'active';\n  const canTakeWinnings = userBet?.status === 'cashed_out' && userBet?.winAmount > 0;\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-casino-dark via-casino-navy to-casino-midnight\">\n      <Navigation />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n        <div className=\"mb-8\">\n          <Link href=\"/games\">\n            <button className=\"flex items-center gap-2 text-muted-foreground hover:text-foreground transition-colors mb-4 bg-surface-light hover:bg-surface-lighter px-4 py-2 rounded-lg\">\n              <ArrowLeftIcon className=\"w-4 h-4\" />\n              Back to Games\n            </button>\n          </Link>\n          <h1 className=\"text-4xl font-bold mb-2 text-foreground neon-text\">Aviator ✈️</h1>\n          <p className=\"text-muted-foreground text-lg\">Cash out before you crash out!</p>\n        </div>\n\n        {/* Enterprise-Grade Game Layout */}\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n          {/* Main Game Area - Left Column */}\n          <div className=\"lg:col-span-2 space-y-6\">\n            {/* Game Canvas and Multiplier Display */}\n            <div className=\"relative bg-gradient-to-br from-casino-navy via-casino-midnight to-dark rounded-xl p-8 border border-surface-light overflow-hidden min-h-[400px]\">\n              <div className=\"absolute inset-0 bg-gradient-to-t from-transparent to-white opacity-5\"></div>\n              \n              {/* Enhanced Multiplier Display */}\n              <div className=\"relative z-10 mb-6\">\n                <MultiplierDisplay\n                  multiplier={gameState?.multiplier || 1.0}\n                  gameStatus={gameState?.status || 'betting'}\n                  isWarningZone={showWarning && animationPhase === 'warning'}\n                  className=\"mb-4\"\n                />\n                <div className=\"text-center text-muted-foreground\">\n                  {getStatusText()}\n                </div>\n              </div>\n\n              {/* Game Canvas */}\n              <div className=\"relative z-10 h-64\">\n                <GameCanvas\n                  gameStatus={gameState?.status || 'betting'}\n                  multiplier={gameState?.multiplier || 1.0}\n                  showCrashEffect={showCrashEffect}\n                  className=\"w-full h-full\"\n                />\n              </div>\n            </div>\n\n            {/* Betting Panel */}\n            <BettingPanel\n              balance={balanceData?.balance || 0}\n              gameStatus={gameState?.status || 'betting'}\n              betAmount={betAmount}\n              setBetAmount={setBetAmount}\n              autoCashOut={autoCashOut}\n              setAutoCashOut={setAutoCashOut}\n              userBet={userBet}\n              nextRoundBet={nextRoundBet}\n              onPlaceBet={() => placeBetMutation.mutate()}\n              onCashOut={() => cashOutMutation.mutate()}\n              onPlaceNextBet={() => placeNextBetMutation.mutate()}\n              isLoading={placeBetMutation.isPending || cashOutMutation.isPending || placeNextBetMutation.isPending}\n            />\n          </div>\n\n          {/* Statistics Panel - Right Column */}\n          <div className=\"lg:col-span-1\">\n            <StatisticsPanel\n              activePlayerCount={activePlayerCount}\n              totalProfit={totalProfit}\n              totalLoss={totalLoss}\n              biggestWinOfDay={biggestWinOfDay}\n              profitChangePercent={profitChangePercent}\n              lastMultipliers={lastMultipliers}\n            />\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n                  <div className=\"absolute inset-0 border-2 border-red-500 rounded-lg animate-ping opacity-75\"></div>\n                </div>\n              )}\n              \n              <div className={`text-6xl font-bold mb-2 transition-all duration-300 ${\n                gameState?.status === 'flying' \n                  ? `multiplier-glow ${\n                      animationPhase === 'warning' ? 'text-red-600 animate-bounce' :\n                      gameState.multiplier > 10 ? 'text-red-400' : \n                      gameState.multiplier > 5 ? 'text-orange-400' : \n                      'text-green-400'\n                    }`\n                  : gameState?.status === 'crashed'\n                  ? 'text-red-500 scale-95'\n                  : 'text-white'\n              }`}>\n                {gameState?.multiplier?.toFixed(2) || '1.00'}x\n              </div>\n              \n              <p className=\"text-blue-200\">\n                {animationPhase === 'takeoff' && gameState?.status === 'flying' ? '🛫 Taking off...' :\n                 animationPhase === 'ascent' && gameState?.status === 'flying' ? '✈️ Steady climb...' :\n                 animationPhase === 'speed' && gameState?.status === 'flying' ? '🚀 Accelerating...' :\n                 animationPhase === 'warning' && gameState?.status === 'flying' ? '💥 DANGER ZONE!' :\n                 gameState?.status === 'crashed' ? 'Plane crashed!' :\n                 'Current Multiplier'\n                }\n              </p>\n              \n              {/* Flight Time Display */}\n              {gameState?.status === 'flying' && (\n                <div className=\"text-sm text-gray-400 mt-1\">\n                  Flight time: {flightTime.toFixed(1)}s\n                </div>\n              )}\n            </div>\n\n            {/* Advanced Plane Animation Area */}\n            <div className=\"relative h-40 mb-8 overflow-hidden\">\n              {/* Dynamic Flight Path Trail */}\n              <div className=\"absolute inset-0 pointer-events-none\">\n                <svg className=\"w-full h-full\" viewBox=\"0 0 500 160\">\n                  {gameState?.status === 'flying' && (\n                    <path\n                      d={`M 0 140 Q ${planePosition.x / 2} ${140 - planePosition.y / 2} ${planePosition.x} ${140 - planePosition.y}`}\n                      stroke=\"rgba(59, 130, 246, 0.6)\"\n                      strokeWidth=\"2\"\n                      fill=\"none\"\n                      strokeDasharray=\"5,5\"\n                      className=\"animate-pulse\"\n                      style={{\n                        strokeDashoffset: `-${gameState.multiplier * 10}px`,\n                        animation: `dash ${2 / animationSpeed}s linear infinite`\n                      }}\n                    />\n                  )}\n                </svg>\n              </div>\n              \n              {/* Cloud Effects */}\n              <div className=\"absolute inset-0 pointer-events-none\">\n                <div className=\"absolute top-2 right-10 w-8 h-4 bg-white bg-opacity-20 rounded-full animate-pulse\"></div>\n                <div className=\"absolute top-8 right-32 w-6 h-3 bg-white bg-opacity-15 rounded-full animate-pulse delay-300\"></div>\n                <div className=\"absolute top-4 left-20 w-10 h-5 bg-white bg-opacity-10 rounded-full animate-pulse delay-700\"></div>\n              </div>\n\n              {/* Enhanced Animated Plane with Phase-based Animation */}\n              <div \n                className={`absolute bottom-4 text-4xl text-white ${\n                  animationPhase === 'takeoff' ? 'plane-takeoff' :\n                  animationPhase === 'ascent' ? 'plane-ascent' :\n                  animationPhase === 'speed' ? 'plane-speed' :\n                  animationPhase === 'warning' ? 'plane-warning' :\n                  animationPhase === 'crash' ? 'plane-crash' :\n                  'transition-all duration-500'\n                }`}\n                style={{\n                  transform: gameState?.status === 'flying' \n                    ? `translateX(${planePosition.x}px) translateY(-${planePosition.y}px) rotate(${Math.min(12 + planePosition.y * 0.2, 25)}deg) scale(${Math.min(1 + planePosition.y * 0.01, 1.3)})`\n                    : gameState?.status === 'crashed'\n                    ? `translateX(${planePosition.x + 100}px) translateY(-${planePosition.y - 200}px) rotate(180deg) scale(0.5)`\n                    : 'translateX(8px) translateY(0px) rotate(12deg)',\n                  filter: animationPhase === 'warning' ? 'hue-rotate(45deg) saturate(1.5)' : 'none',\n                } as React.CSSProperties}\n              >\n                {gameState?.status === 'crashed' ? '💥' : '✈️'}\n              </div>\n\n              {/* Enhanced Vapor Trails */}\n              {gameState?.status === 'flying' && (\n                <div className=\"absolute inset-0 pointer-events-none\">\n                  <div \n                    className=\"vapor-trail absolute w-3 h-8 bg-white bg-opacity-30 rounded-full\"\n                    style={{\n                      left: `${planePosition.x - 20}px`,\n                      bottom: `${Math.max(planePosition.y - 15, 30)}px`,\n                      animationDelay: '0ms'\n                    }}\n                  ></div>\n                  <div \n                    className=\"vapor-trail absolute w-2 h-6 bg-white bg-opacity-20 rounded-full\"\n                    style={{\n                      left: `${planePosition.x - 35}px`,\n                      bottom: `${Math.max(planePosition.y - 10, 35)}px`,\n                      animationDelay: '200ms'\n                    }}\n                  ></div>\n                  {animationPhase === 'speed' || animationPhase === 'warning' ? (\n                    <div \n                      className=\"vapor-trail absolute w-1 h-4 bg-white bg-opacity-15 rounded-full\"\n                      style={{\n                        left: `${planePosition.x - 50}px`,\n                        bottom: `${Math.max(planePosition.y - 5, 40)}px`,\n                        animationDelay: '400ms'\n                      }}\n                    ></div>\n                  ) : null}\n                </div>\n              )}\n\n              {/* Advanced Crash Effect */}\n              {(gameState?.status === 'crashed' || showCrashEffect) && (\n                <div className=\"absolute inset-0 pointer-events-none\">\n                  {/* Dynamic Smoke Trail based on crash position */}\n                  <div \n                    className=\"aviator-smoke absolute w-20 h-20 bg-gray-600 bg-opacity-50 rounded-full\"\n                    style={{\n                      left: `${planePosition.x + 50}px`,\n                      bottom: `${Math.max(planePosition.y - 20, 20)}px`,\n                      animationDelay: '0ms'\n                    }}\n                  ></div>\n                  <div \n                    className=\"aviator-smoke absolute w-16 h-16 bg-gray-500 bg-opacity-40 rounded-full\"\n                    style={{\n                      left: `${planePosition.x + 70}px`,\n                      bottom: `${Math.max(planePosition.y - 10, 30)}px`,\n                      animationDelay: '200ms'\n                    }}\n                  ></div>\n                  <div \n                    className=\"aviator-smoke absolute w-12 h-12 bg-gray-400 bg-opacity-30 rounded-full\"\n                    style={{\n                      left: `${planePosition.x + 90}px`,\n                      bottom: `${Math.max(planePosition.y, 40)}px`,\n                      animationDelay: '400ms'\n                    }}\n                  ></div>\n                  \n                  {/* Main Explosion Effect */}\n                  <div \n                    className=\"aviator-explosion absolute text-8xl\"\n                    style={{\n                      left: `${planePosition.x + 40}px`,\n                      bottom: `${Math.max(planePosition.y - 30, 10)}px`,\n                    }}\n                  >💥</div>\n                  \n                  {/* Secondary Fire Effects */}\n                  <div \n                    className=\"absolute text-3xl animate-pulse\"\n                    style={{\n                      left: `${planePosition.x + 20}px`,\n                      bottom: `${Math.max(planePosition.y - 10, 25)}px`,\n                      animationDelay: '100ms'\n                    }}\n                  >🔥</div>\n                  <div \n                    className=\"absolute text-2xl animate-pulse\"\n                    style={{\n                      left: `${planePosition.x + 80}px`,\n                      bottom: `${Math.max(planePosition.y + 10, 35)}px`,\n                      animationDelay: '300ms'\n                    }}\n                  >🔥</div>\n\n                  {/* Debris Effects */}\n                  <div \n                    className=\"absolute text-lg opacity-70 animate-bounce\"\n                    style={{\n                      left: `${planePosition.x - 10}px`,\n                      bottom: `${Math.max(planePosition.y + 20, 50)}px`,\n                      animationDelay: '150ms'\n                    }}\n                  >⚡</div>\n                  <div \n                    className=\"absolute text-lg opacity-60 animate-bounce\"\n                    style={{\n                      left: `${planePosition.x + 110}px`,\n                      bottom: `${Math.max(planePosition.y - 5, 45)}px`,\n                      animationDelay: '350ms'\n                    }}\n                  >✨</div>\n                </div>\n              )}\n            </div>\n\n            {/* Game Status */}\n            <div className=\"text-center\">\n              <div className=\"text-xl font-semibold text-white mb-4\">\n                {getStatusText()}\n              </div>\n              {gameState?.status === 'betting' && (\n                <div className=\"text-lg text-blue-200\">\n                  Betting phase - Get ready!\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Control Panel */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n            {/* Betting Panel */}\n            <Card className=\"bg-surface/80 border-surface-light backdrop-blur-sm\">\n              <CardHeader>\n                <CardTitle className=\"text-xl font-semibold text-white\">Place Your Bet</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div>\n                  <Label htmlFor=\"bet-amount\" className=\"text-gray-400\">Bet Amount</Label>\n                  <div className=\"flex items-center space-x-2\">\n                    <Input\n                      id=\"bet-amount\"\n                      type=\"number\"\n                      min={10}\n                      max={1000}\n                      value={betAmount}\n                      onChange={(e) => setBetAmount(parseInt(e.target.value) || 0)}\n                      className=\"bg-surface-light border-surface-light text-white\"\n                      disabled={!canPlaceBet}\n                    />\n                    <span className=\"text-gray-400\">Points</span>\n                  </div>\n                </div>\n\n                <div>\n                  <Label htmlFor=\"auto-cashout\" className=\"text-gray-400\">Auto Cash Out (Optional)</Label>\n                  <div className=\"flex items-center space-x-2\">\n                    <Input\n                      id=\"auto-cashout\"\n                      type=\"number\"\n                      step=\"0.01\"\n                      min=\"1.01\"\n                      value={autoCashOut}\n                      onChange={(e) => setAutoCashOut(e.target.value)}\n                      placeholder=\"e.g. 2.00\"\n                      className=\"bg-surface-light border-surface-light text-white\"\n                      disabled={!canPlaceBet}\n                    />\n                    <span className=\"text-gray-400\">x</span>\n                  </div>\n                </div>\n\n                {/* Next Round Bet Status */}\n                {nextRoundBet && (\n                  <div className=\"p-3 bg-purple-900/50 border border-purple-500/50 rounded-lg\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-purple-200 font-medium\">Next Round Bet:</span>\n                      <span className=\"text-purple-400 font-bold\">{nextRoundBet.betAmount} pts</span>\n                    </div>\n                    <div className=\"text-purple-300 text-sm mt-1\">\n                      Waiting for next round to start...\n                    </div>\n                  </div>\n                )}\n\n                <div className=\"space-y-3\">\n                  {canPlaceBet && (\n                    <Button\n                      onClick={() => placeBetMutation.mutate(false)}\n                      disabled={placeBetMutation.isPending || betAmount < 10}\n                      className=\"w-full bg-gradient-to-r from-accent to-primary text-white font-semibold py-3\"\n                    >\n                      <NotebookPen className=\"w-4 h-4 mr-2\" />\n                      {placeBetMutation.isPending ? 'Placing Bet...' : 'Place Bet'}\n                    </Button>\n                  )}\n\n                  {canPlaceNextBet && (\n                    <Button\n                      onClick={() => placeBetMutation.mutate(true)}\n                      disabled={placeBetMutation.isPending || betAmount < 10}\n                      className=\"w-full bg-gradient-to-r from-purple-600 to-purple-700 hover:from-purple-700 hover:to-purple-800 text-white font-semibold py-3\"\n                    >\n                      <NotebookPen className=\"w-4 h-4 mr-2\" />\n                      {placeBetMutation.isPending ? 'Placing Next Bet...' : 'Bet Next Round'}\n                    </Button>\n                  )}\n                  \n                  {canCashOut && (\n                    <div className=\"relative\">\n                      <Button\n                        onClick={() => cashOutMutation.mutate()}\n                        disabled={cashOutMutation.isPending}\n                        className=\"w-full bg-gradient-to-r from-green-500 to-emerald-600 hover:from-green-600 hover:to-emerald-700 text-white font-bold py-4 text-lg shadow-lg transform hover:scale-105 transition-all duration-200 animate-pulse\"\n                      >\n                        <HandIcon className=\"w-5 h-5 mr-2\" />\n                        {cashOutMutation.isPending ? 'Cashing Out...' : `Cash Out @ ${gameState?.multiplier.toFixed(2)}x`}\n                      </Button>\n                      <div className=\"absolute -top-2 -right-2 bg-yellow-400 text-black text-xs font-bold px-2 py-1 rounded-full animate-bounce\">\n                        {userBet && gameState ? Math.floor(userBet.betAmount * gameState.multiplier) : 0} pts\n                      </div>\n                    </div>\n                  )}\n\n                  {canTakeWinnings && (\n                    <Button\n                      onClick={() => takeWinningsMutation.mutate()}\n                      disabled={takeWinningsMutation.isPending}\n                      className=\"w-full bg-gradient-to-r from-yellow-500 to-yellow-600 hover:from-yellow-600 hover:to-yellow-700 text-black font-bold py-4 text-lg shadow-lg transform hover:scale-105 transition-all duration-200\"\n                    >\n                      <HandIcon className=\"w-5 h-5 mr-2\" />\n                      {takeWinningsMutation.isPending ? 'Collecting...' : `Take Winnings (${userBet?.winAmount} pts)`}\n                    </Button>\n                  )}\n                  \n                  {userBet?.status === 'cashed_out' && (\n                    <div className=\"text-center p-4 bg-accent/20 rounded-lg\">\n                      <p className=\"text-accent font-semibold\">\n                        Cashed out at {userBet.cashOutAt?.toFixed(2)}x\n                      </p>\n                      <p className=\"text-white\">Won {userBet.winAmount} points!</p>\n                    </div>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n\n            {/* Enhanced Statistics Panel */}\n            <Card className=\"bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 border-gray-700 backdrop-blur-sm shadow-2xl\">\n              <CardHeader className=\"relative\">\n                {/* Player Count Badge */}\n                <div className=\"absolute top-4 right-4\">\n                  <div className=\"player-count-badge px-3 py-1 rounded-full flex items-center space-x-2\">\n                    <UsersIcon className=\"w-4 h-4 text-green-400\" />\n                    <span className=\"text-green-400 font-bold text-sm\">{Math.max(activePlayerCount, Math.floor(Math.random() * 15) + 8)} Live</span>\n                  </div>\n                </div>\n\n                {/* Biggest Win Badge */}\n                {biggestWinOfDay.amount > 0 && (\n                  <div className=\"biggest-win-badge absolute -top-2 left-1/2 transform -translate-x-1/2 px-4 py-2 rounded-lg\">\n                    <div className=\"flex items-center space-x-2\">\n                      <TrophyIcon className=\"w-4 h-4 text-yellow-400\" />\n                      <span className=\"text-yellow-400 font-bold text-xs\">Biggest Win: {biggestWinOfDay.amount} pts</span>\n                    </div>\n                  </div>\n                )}\n\n                <CardTitle className=\"text-xl font-semibold text-white neon-text\">Live Statistics</CardTitle>\n              </CardHeader>\n              \n              <CardContent className=\"space-y-6\">\n                {/* Desktop Layout */}\n                <div className=\"hidden lg:block\">\n                  <div className=\"grid grid-cols-2 gap-6\">\n                    {/* Player List Panel */}\n                    <div className=\"space-y-4\">\n                      <h4 className=\"font-semibold text-white flex items-center justify-between\">\n                        <span>Player Leaderboard</span>\n                        <Badge className=\"bg-gray-700 text-gray-300 text-xs\">Live</Badge>\n                      </h4>\n                      \n                      <div className=\"space-y-2 max-h-48 overflow-y-auto custom-scrollbar\">\n                        {/* Top 3 Players with Special Highlighting */}\n                        <div className=\"leaderboard-gold p-3 rounded-lg flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-3\">\n                            <div className=\"w-6 h-6 bg-yellow-400 rounded-full flex items-center justify-center\">\n                              <span className=\"text-black font-bold text-xs\">1</span>\n                            </div>\n                            <div>\n                              <p className=\"text-white font-semibold text-sm\">Flyer_47</p>\n                              <p className=\"text-xs text-gray-400\">Bet: 850 pts</p>\n                            </div>\n                          </div>\n                          <div className=\"text-right\">\n                            <p className=\"profit-positive font-bold text-sm\">+2,125</p>\n                            <p className=\"text-xs text-gray-400\">2.5x</p>\n                          </div>\n                        </div>\n\n                        <div className=\"leaderboard-silver p-3 rounded-lg flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-3\">\n                            <div className=\"w-6 h-6 bg-gray-400 rounded-full flex items-center justify-center\">\n                              <span className=\"text-black font-bold text-xs\">2</span>\n                            </div>\n                            <div>\n                              <p className=\"text-white font-semibold text-sm\">AviatorPro</p>\n                              <p className=\"text-xs text-gray-400\">Bet: 500 pts</p>\n                            </div>\n                          </div>\n                          <div className=\"text-right\">\n                            <p className=\"profit-positive font-bold text-sm\">+950</p>\n                            <p className=\"text-xs text-gray-400\">1.9x</p>\n                          </div>\n                        </div>\n\n                        <div className=\"leaderboard-bronze p-3 rounded-lg flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-3\">\n                            <div className=\"w-6 h-6 bg-orange-600 rounded-full flex items-center justify-center\">\n                              <span className=\"text-white font-bold text-xs\">3</span>\n                            </div>\n                            <div>\n                              <p className=\"text-white font-semibold text-sm\">SkyHigh_23</p>\n                              <p className=\"text-xs text-gray-400\">Bet: 300 pts</p>\n                            </div>\n                          </div>\n                          <div className=\"text-right\">\n                            <p className=\"profit-positive font-bold text-sm\">+450</p>\n                            <p className=\"text-xs text-gray-400\">1.5x</p>\n                          </div>\n                        </div>\n\n                        {/* Your Position */}\n                        <div className=\"bg-gray-800 p-3 rounded-lg border border-blue-500 flex items-center justify-between\">\n                          <div className=\"flex items-center space-x-3\">\n                            <div className=\"w-6 h-6 bg-blue-500 rounded-full flex items-center justify-center\">\n                              <span className=\"text-white font-bold text-xs\">You</span>\n                            </div>\n                            <div>\n                              <p className=\"text-blue-400 font-semibold text-sm\">Your Game</p>\n                              <p className=\"text-xs text-gray-400\">Bet: {userBet?.betAmount || 0} pts</p>\n                            </div>\n                          </div>\n                          <div className=\"text-right\">\n                            <p className={`font-bold text-sm ${userBet?.status === 'cashed_out' ? 'profit-positive' : userBet?.status === 'active' ? 'text-yellow-400' : 'text-gray-400'}`}>\n                              {userBet?.status === 'cashed_out' ? `+${userBet.winAmount}` : userBet?.status === 'active' ? 'Flying' : '--'}\n                            </p>\n                            <Badge variant={userBet?.status === 'active' ? 'default' : userBet?.status === 'cashed_out' ? 'secondary' : 'outline'} className=\"text-xs\">\n                              {userBet?.status || 'waiting'}\n                            </Badge>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Profit & Loss Panel */}\n                    <div className=\"space-y-4\">\n                      <h4 className=\"font-semibold text-white flex items-center justify-between\">\n                        <span>Round Summary</span>\n                        <span className=\"text-xs text-gray-400\">vs Previous</span>\n                      </h4>\n                      \n                      {/* Profit/Loss Meters */}\n                      <div className=\"space-y-4\">\n                        <div className=\"bg-gray-800 p-4 rounded-lg\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <div className=\"flex items-center space-x-2\">\n                              <TrendingUpIcon className=\"w-4 h-4 text-green-400\" />\n                              <span className=\"text-green-400 font-semibold\">Total Profits</span>\n                            </div>\n                            <span className=\"profit-positive font-bold\">{Math.floor(Math.random() * 50000) + 15000}</span>\n                          </div>\n                          <div className=\"profit-meter w-full rounded\"></div>\n                          <p className=\"text-xs text-green-400 mt-1\">+12.3% from last round</p>\n                        </div>\n\n                        <div className=\"bg-gray-800 p-4 rounded-lg\">\n                          <div className=\"flex items-center justify-between mb-2\">\n                            <div className=\"flex items-center space-x-2\">\n                              <TrendingDownIcon className=\"w-4 h-4 text-red-400\" />\n                              <span className=\"text-red-400 font-semibold\">Total Losses</span>\n                            </div>\n                            <span className=\"profit-negative font-bold\">{Math.floor(Math.random() * 30000) + 8000}</span>\n                          </div>\n                          <div className=\"loss-meter w-full rounded\"></div>\n                          <p className=\"text-xs text-red-400 mt-1\">-8.7% from last round</p>\n                        </div>\n                      </div>\n\n                      {/* Your Stats */}\n                      <div className=\"bg-gradient-to-r from-blue-900 to-purple-900 p-4 rounded-lg border border-blue-500\">\n                        <h5 className=\"text-blue-400 font-semibold mb-3\">Your Session</h5>\n                        <div className=\"grid grid-cols-2 gap-4 text-sm\">\n                          <div>\n                            <p className=\"text-gray-400\">Current Bet</p>\n                            <p className=\"text-white font-bold\">{userBet?.betAmount || 0} pts</p>\n                          </div>\n                          <div>\n                            <p className=\"text-gray-400\">Potential Win</p>\n                            <p className=\"text-green-400 font-bold\">{userBet && gameState ? Math.floor(userBet.betAmount * gameState.multiplier) : 0} pts</p>\n                          </div>\n                          <div>\n                            <p className=\"text-gray-400\">Balance</p>\n                            <p className=\"text-white font-bold\">{(balanceData as any)?.balance || 0} pts</p>\n                          </div>\n                          <div>\n                            <p className=\"text-gray-400\">Status</p>\n                            <Badge variant={userBet?.status === 'active' ? 'default' : userBet?.status === 'cashed_out' ? 'secondary' : 'outline'} className=\"text-xs\">\n                              {userBet?.status || 'ready'}\n                            </Badge>\n                          </div>\n                        </div>\n                      </div>\n\n                      {/* Last Multipliers */}\n                      <div>\n                        <h5 className=\"text-white font-semibold mb-2\">Recent Results</h5>\n                        <div className=\"flex space-x-2\">\n                          {lastMultipliers.map((mult, index) => (\n                            <Badge key={index} variant=\"secondary\" className={`text-xs ${mult > 2 ? 'bg-green-600 text-white' : mult < 1.5 ? 'bg-red-600 text-white' : 'bg-yellow-600 text-black'}`}>\n                              {mult.toFixed(2)}x\n                            </Badge>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                {/* Mobile Layout */}\n                <div className=\"lg:hidden space-y-4\">\n                  {/* Collapsible Player List */}\n                  <details className=\"group\">\n                    <summary className=\"flex items-center justify-between p-3 bg-gray-800 rounded-lg cursor-pointer\">\n                      <span className=\"text-white font-semibold\">Player Leaderboard</span>\n                      <Badge className=\"bg-gray-700 text-gray-300 text-xs\">Live</Badge>\n                    </summary>\n                    <div className=\"mt-2 space-y-2 max-h-40 overflow-y-auto\">\n                      <div className=\"leaderboard-gold p-2 rounded flex justify-between text-sm\">\n                        <span className=\"text-white\">Flyer_47</span>\n                        <span className=\"profit-positive font-bold\">+2,125</span>\n                      </div>\n                      <div className=\"leaderboard-silver p-2 rounded flex justify-between text-sm\">\n                        <span className=\"text-white\">AviatorPro</span>\n                        <span className=\"profit-positive font-bold\">+950</span>\n                      </div>\n                      <div className=\"bg-gray-800 p-2 rounded flex justify-between text-sm border border-blue-500\">\n                        <span className=\"text-blue-400\">You</span>\n                        <Badge variant={userBet?.status === 'active' ? 'default' : 'outline'} className=\"text-xs\">\n                          {userBet?.status || 'ready'}\n                        </Badge>\n                      </div>\n                    </div>\n                  </details>\n\n                  {/* Mobile Summary */}\n                  <div className=\"grid grid-cols-2 gap-4\">\n                    <div className=\"bg-gray-800 p-3 rounded-lg\">\n                      <p className=\"text-gray-400 text-xs\">Your Bet</p>\n                      <p className=\"text-white font-bold\">{userBet?.betAmount || 0} pts</p>\n                    </div>\n                    <div className=\"bg-gray-800 p-3 rounded-lg\">\n                      <p className=\"text-gray-400 text-xs\">Balance</p>\n                      <p className=\"text-white font-bold\">{(balanceData as any)?.balance || 0} pts</p>\n                    </div>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n","size_bytes":46924},"client/src/pages/payment-topup.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport Navigation from \"@/components/navigation\";\nimport { ArrowLeftIcon, QrCodeIcon, CreditCardIcon, IndianRupeeIcon } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function PaymentTopup() {\n  const [amount, setAmount] = useState(100);\n  const [upiId, setUpiId] = useState(\"\");\n  const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  // Calculate points based on conversion rate (1 INR = 10 points)\n  const pointsToReceive = amount * 10;\n\n  const { data: qrCodeData } = useQuery({\n    queryKey: ['/api/payment/qr-code'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/payment/qr-code');\n      return response.json();\n    }\n  });\n\n  const { data: conversionRate } = useQuery({\n    queryKey: ['/api/admin/config/topup-rate'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/admin/config/topup-rate');\n      return response.json();\n    }\n  });\n\n  const createPaymentRequestMutation = useMutation({\n    mutationFn: async () => {\n      const response = await apiRequest('POST', '/api/payment/create-request', {\n        amount,\n        upiId,\n        pointsToCredit: pointsToReceive,\n      });\n      return response.json();\n    },\n    onSuccess: (data) => {\n      toast({\n        title: \"Payment Request Created\",\n        description: `Your request for ₹${amount} (${pointsToReceive} points) has been submitted. Please complete the payment using the QR code.`,\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/payment/requests'] });\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Error\",\n        description: error.message || \"Failed to create payment request\",\n        variant: \"destructive\",\n      });\n    }\n  });\n\n  const { data: userPaymentRequests } = useQuery({\n    queryKey: ['/api/payment/requests'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/payment/requests');\n      return response.json();\n    }\n  });\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-blue-900\">\n      <Navigation />\n      \n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"mb-6\">\n          <Link href=\"/dashboard\">\n            <Button variant=\"ghost\" className=\"text-white hover:bg-white/10 mb-4\">\n              <ArrowLeftIcon className=\"w-4 h-4 mr-2\" />\n              Back to Dashboard\n            </Button>\n          </Link>\n          \n          <h1 className=\"text-4xl font-bold text-white mb-2\">Top Up Points</h1>\n          <p className=\"text-gray-300\">Add points to your gaming account using UPI payment</p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Payment Form */}\n          <Card className=\"bg-gray-800/80 border-gray-700 backdrop-blur-sm\">\n            <CardHeader>\n              <CardTitle className=\"text-white flex items-center\">\n                <CreditCardIcon className=\"w-5 h-5 mr-2\" />\n                Payment Details\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              <div>\n                <Label htmlFor=\"amount\" className=\"text-gray-300\">Amount (₹)</Label>\n                <Input\n                  id=\"amount\"\n                  type=\"number\"\n                  min=\"10\"\n                  max=\"10000\"\n                  value={amount}\n                  onChange={(e) => setAmount(Number(e.target.value))}\n                  className=\"bg-gray-700 border-gray-600 text-white\"\n                />\n                <div className=\"text-sm text-gray-400 mt-1\">\n                  You will receive: <span className=\"text-green-400 font-semibold\">{pointsToReceive} points</span>\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"upi\" className=\"text-gray-300\">Your UPI ID</Label>\n                <Input\n                  id=\"upi\"\n                  type=\"text\"\n                  placeholder=\"your-upi-id@bank\"\n                  value={upiId}\n                  onChange={(e) => setUpiId(e.target.value)}\n                  className=\"bg-gray-700 border-gray-600 text-white\"\n                />\n                <div className=\"text-sm text-gray-400 mt-1\">\n                  Required for future withdrawals\n                </div>\n              </div>\n\n              <Button\n                onClick={() => createPaymentRequestMutation.mutate()}\n                disabled={createPaymentRequestMutation.isPending || !amount || !upiId}\n                className=\"w-full bg-gradient-to-r from-green-600 to-emerald-700 hover:from-green-700 hover:to-emerald-800\"\n              >\n                {createPaymentRequestMutation.isPending ? \"Creating Request...\" : \"Create Payment Request\"}\n              </Button>\n            </CardContent>\n          </Card>\n\n          {/* QR Code */}\n          <Card className=\"bg-gray-800/80 border-gray-700 backdrop-blur-sm\">\n            <CardHeader>\n              <CardTitle className=\"text-white flex items-center\">\n                <QrCodeIcon className=\"w-5 h-5 mr-2\" />\n                Payment QR Code\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              {qrCodeData?.qrCodeImage ? (\n                <div className=\"text-center\">\n                  <img \n                    src={qrCodeData.qrCodeImage} \n                    alt=\"Payment QR Code\"\n                    className=\"mx-auto w-64 h-64 border-2 border-gray-600 rounded-lg\"\n                  />\n                  <p className=\"text-gray-300 mt-4\">\n                    Scan this QR code with any UPI app to make payment\n                  </p>\n                  <div className=\"bg-gray-700 p-3 rounded-lg mt-4\">\n                    <p className=\"text-sm text-gray-400\">Pay to UPI ID:</p>\n                    <p className=\"text-white font-mono\">{qrCodeData.merchantUpiId}</p>\n                  </div>\n                </div>\n              ) : (\n                <div className=\"text-center py-8\">\n                  <div className=\"w-64 h-64 mx-auto bg-gray-700 rounded-lg flex items-center justify-center\">\n                    <QrCodeIcon className=\"w-16 h-16 text-gray-500\" />\n                  </div>\n                  <p className=\"text-gray-400 mt-4\">QR Code not available</p>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Payment History */}\n        <Card className=\"bg-gray-800/80 border-gray-700 backdrop-blur-sm mt-8\">\n          <CardHeader>\n            <CardTitle className=\"text-white\">Your Payment Requests</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {userPaymentRequests?.length > 0 ? (\n              <div className=\"space-y-4\">\n                {userPaymentRequests.map((request: any) => (\n                  <div key={request.id} className=\"flex items-center justify-between p-4 bg-gray-700/50 rounded-lg\">\n                    <div>\n                      <div className=\"flex items-center space-x-2\">\n                        <IndianRupeeIcon className=\"w-4 h-4 text-green-400\" />\n                        <span className=\"text-white font-semibold\">₹{request.amount}</span>\n                        <span className=\"text-gray-400\">→</span>\n                        <span className=\"text-purple-400\">{request.pointsToCredit} points</span>\n                      </div>\n                      <div className=\"text-sm text-gray-400 mt-1\">\n                        Created: {new Date(request.createdAt).toLocaleString()}\n                      </div>\n                    </div>\n                    <Badge \n                      variant={\n                        request.status === 'approved' ? 'default' : \n                        request.status === 'pending' ? 'secondary' : \n                        'destructive'\n                      }\n                    >\n                      {request.status}\n                    </Badge>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p className=\"text-gray-400 text-center py-8\">No payment requests yet</p>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}","size_bytes":8712},"client/src/pages/withdrawal.tsx":{"content":"import { useState } from \"react\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport Navigation from \"@/components/navigation\";\nimport { ArrowLeftIcon, BanknoteIcon, IndianRupeeIcon, WalletIcon } from \"lucide-react\";\nimport { Link } from \"wouter\";\n\nexport default function Withdrawal() {\n  const [pointsToWithdraw, setPointsToWithdraw] = useState(100);\n  const [upiId, setUpiId] = useState(\"\");\n  const queryClient = useQueryClient();\n  const { toast } = useToast();\n\n  // Get user balance\n  const { data: balance } = useQuery({\n    queryKey: ['/api/balance'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/balance');\n      const data = await response.json();\n      return data.balance;\n    }\n  });\n\n  // Get withdrawal conversion rate (1 point = 0.08 INR by default)\n  const { data: conversionRate } = useQuery({\n    queryKey: ['/api/admin/config/withdrawal-rate'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/admin/config/withdrawal-rate');\n      return response.json();\n    }\n  });\n\n  // Calculate withdrawal amount\n  const withdrawalAmount = pointsToWithdraw * (conversionRate?.rate || 0.08);\n\n  const createWithdrawalRequestMutation = useMutation({\n    mutationFn: async () => {\n      const response = await apiRequest('POST', '/api/withdrawal/create-request', {\n        pointsToWithdraw,\n        upiId,\n        withdrawalAmount: withdrawalAmount,\n      });\n      return response.json();\n    },\n    onSuccess: (data) => {\n      toast({\n        title: \"Withdrawal Request Submitted\",\n        description: `Your request to withdraw ${pointsToWithdraw} points (₹${withdrawalAmount.toFixed(2)}) has been submitted for admin approval.`,\n      });\n      queryClient.invalidateQueries({ queryKey: ['/api/withdrawal/requests'] });\n      setPointsToWithdraw(100);\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Error\",\n        description: error.message || \"Failed to create withdrawal request\",\n        variant: \"destructive\",\n      });\n    }\n  });\n\n  const { data: userWithdrawalRequests } = useQuery({\n    queryKey: ['/api/withdrawal/requests'],\n    queryFn: async () => {\n      const response = await apiRequest('GET', '/api/withdrawal/requests');\n      return response.json();\n    }\n  });\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-gray-900 via-purple-900 to-blue-900\">\n      <Navigation />\n      \n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"mb-6\">\n          <Link href=\"/dashboard\">\n            <Button variant=\"ghost\" className=\"text-white hover:bg-white/10 mb-4\">\n              <ArrowLeftIcon className=\"w-4 h-4 mr-2\" />\n              Back to Dashboard\n            </Button>\n          </Link>\n          \n          <h1 className=\"text-4xl font-bold text-white mb-2\">Withdraw Points</h1>\n          <p className=\"text-gray-300\">Convert your points back to cash via UPI transfer</p>\n        </div>\n\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n          {/* Withdrawal Form */}\n          <Card className=\"bg-gray-800/80 border-gray-700 backdrop-blur-sm\">\n            <CardHeader>\n              <CardTitle className=\"text-white flex items-center\">\n                <BanknoteIcon className=\"w-5 h-5 mr-2\" />\n                Withdrawal Request\n              </CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-6\">\n              {/* Current Balance */}\n              <div className=\"bg-gradient-to-r from-purple-600/20 to-blue-600/20 p-4 rounded-lg\">\n                <div className=\"flex items-center justify-between\">\n                  <span className=\"text-gray-300\">Current Balance:</span>\n                  <div className=\"flex items-center\">\n                    <WalletIcon className=\"w-4 h-4 text-purple-400 mr-1\" />\n                    <span className=\"text-white font-bold\">{balance || 0} points</span>\n                  </div>\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"points\" className=\"text-gray-300\">Points to Withdraw</Label>\n                <Input\n                  id=\"points\"\n                  type=\"number\"\n                  min=\"10\"\n                  max={balance || 0}\n                  value={pointsToWithdraw}\n                  onChange={(e) => setPointsToWithdraw(Number(e.target.value))}\n                  className=\"bg-gray-700 border-gray-600 text-white\"\n                />\n                <div className=\"text-sm text-gray-400 mt-1\">\n                  You will receive: <span className=\"text-green-400 font-semibold\">₹{withdrawalAmount.toFixed(2)}</span>\n                </div>\n              </div>\n\n              <div>\n                <Label htmlFor=\"upi\" className=\"text-gray-300\">UPI ID for Transfer</Label>\n                <Input\n                  id=\"upi\"\n                  type=\"text\"\n                  placeholder=\"your-upi-id@bank\"\n                  value={upiId}\n                  onChange={(e) => setUpiId(e.target.value)}\n                  className=\"bg-gray-700 border-gray-600 text-white\"\n                />\n                <div className=\"text-sm text-gray-400 mt-1\">\n                  Make sure this UPI ID is active and correct\n                </div>\n              </div>\n\n              <Button\n                onClick={() => createWithdrawalRequestMutation.mutate()}\n                disabled={\n                  createWithdrawalRequestMutation.isPending || \n                  !pointsToWithdraw || \n                  !upiId || \n                  pointsToWithdraw > (balance || 0) ||\n                  pointsToWithdraw < 10\n                }\n                className=\"w-full bg-gradient-to-r from-orange-600 to-red-700 hover:from-orange-700 hover:to-red-800\"\n              >\n                {createWithdrawalRequestMutation.isPending ? \"Submitting...\" : \"Request Withdrawal\"}\n              </Button>\n            </CardContent>\n          </Card>\n\n          {/* Withdrawal Info */}\n          <Card className=\"bg-gray-800/80 border-gray-700 backdrop-blur-sm\">\n            <CardHeader>\n              <CardTitle className=\"text-white\">Withdrawal Information</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">Conversion Rate:</span>\n                  <span className=\"text-white\">1 point = ₹{(conversionRate?.rate || 0.08).toFixed(2)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">Minimum Withdrawal:</span>\n                  <span className=\"text-white\">10 points</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-gray-400\">Processing Time:</span>\n                  <span className=\"text-white\">1-24 hours</span>\n                </div>\n              </div>\n\n              <div className=\"bg-yellow-600/20 p-4 rounded-lg border border-yellow-600/30\">\n                <h4 className=\"text-yellow-400 font-semibold mb-2\">Important Notes:</h4>\n                <ul className=\"text-yellow-200 text-sm space-y-1\">\n                  <li>• Withdrawals are processed manually by admin</li>\n                  <li>• Make sure your UPI ID is correct and active</li>\n                  <li>• You will receive a notification once processed</li>\n                  <li>• Minimum withdrawal amount is 10 points</li>\n                </ul>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n\n        {/* Withdrawal History */}\n        <Card className=\"bg-gray-800/80 border-gray-700 backdrop-blur-sm mt-8\">\n          <CardHeader>\n            <CardTitle className=\"text-white\">Your Withdrawal Requests</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {userWithdrawalRequests?.length > 0 ? (\n              <div className=\"space-y-4\">\n                {userWithdrawalRequests.map((request: any) => (\n                  <div key={request.id} className=\"flex items-center justify-between p-4 bg-gray-700/50 rounded-lg\">\n                    <div>\n                      <div className=\"flex items-center space-x-2\">\n                        <WalletIcon className=\"w-4 h-4 text-purple-400\" />\n                        <span className=\"text-white font-semibold\">{request.pointsToWithdraw} points</span>\n                        <span className=\"text-gray-400\">→</span>\n                        <IndianRupeeIcon className=\"w-4 h-4 text-green-400\" />\n                        <span className=\"text-green-400\">₹{request.withdrawalAmount}</span>\n                      </div>\n                      <div className=\"text-sm text-gray-400 mt-1\">\n                        UPI: {request.recipientUpiId} | Created: {new Date(request.createdAt).toLocaleString()}\n                      </div>\n                    </div>\n                    <Badge \n                      variant={\n                        request.status === 'completed' ? 'default' : \n                        request.status === 'pending' ? 'secondary' : \n                        request.status === 'processing' ? 'outline' :\n                        'destructive'\n                      }\n                    >\n                      {request.status}\n                    </Badge>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p className=\"text-gray-400 text-center py-8\">No withdrawal requests yet</p>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}","size_bytes":10054},"client/src/components/aviator/BettingPanel.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Plane, TrendingUp, Clock, DollarSign } from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface BettingPanelProps {\n  balance: number;\n  gameStatus: 'betting' | 'flying' | 'crashed';\n  betAmount: number;\n  setBetAmount: (amount: number) => void;\n  autoCashOut: string;\n  setAutoCashOut: (value: string) => void;\n  userBet: any;\n  nextRoundBet: any;\n  onPlaceBet: () => void;\n  onCashOut: () => void;\n  onPlaceNextBet: () => void;\n  isLoading?: boolean;\n  className?: string;\n}\n\nexport function BettingPanel({\n  balance,\n  gameStatus,\n  betAmount,\n  setBetAmount,\n  autoCashOut,\n  setAutoCashOut,\n  userBet,\n  nextRoundBet,\n  onPlaceBet,\n  onCashOut,\n  onPlaceNextBet,\n  isLoading = false,\n  className\n}: BettingPanelProps) {\n  const [selectedAmount, setSelectedAmount] = useState<number | null>(null);\n\n  const quickAmounts = [10, 25, 50, 100, 250, 500];\n\n  const handleQuickAmount = (amount: number) => {\n    setBetAmount(amount);\n    setSelectedAmount(amount);\n  };\n\n  const canPlaceBet = gameStatus === 'betting' && !userBet && !nextRoundBet && balance >= betAmount;\n  const canCashOut = gameStatus === 'flying' && userBet?.status === 'active';\n  const canPlaceNextBet = gameStatus === 'flying' && !userBet && !nextRoundBet && balance >= betAmount;\n\n  return (\n    <Card className={cn(\"glass-effect border-surface-light\", className)}>\n      <CardHeader className=\"pb-4\">\n        <CardTitle className=\"flex items-center gap-2 text-lg\">\n          <Plane className=\"w-5 h-5 text-neon-gold\" />\n          Betting Panel\n        </CardTitle>\n        <div className=\"flex items-center justify-between text-sm\">\n          <span className=\"text-muted-foreground\">Balance:</span>\n          <Badge variant=\"outline\" className=\"font-mono\">\n            <DollarSign className=\"w-3 h-3 mr-1\" />\n            {balance.toLocaleString()}\n          </Badge>\n        </div>\n      </CardHeader>\n\n      <CardContent className=\"space-y-6\">\n        {/* Bet Amount Section */}\n        <div className=\"space-y-3\">\n          <Label htmlFor=\"bet-amount\" className=\"text-sm font-medium\">\n            Bet Amount\n          </Label>\n          <div className=\"space-y-2\">\n            <Input\n              id=\"bet-amount\"\n              type=\"number\"\n              value={betAmount}\n              onChange={(e) => setBetAmount(Number(e.target.value))}\n              min=\"1\"\n              max={balance}\n              className=\"font-mono text-center\"\n              data-testid=\"input-bet-amount\"\n            />\n            \n            {/* Quick Amount Buttons */}\n            <div className=\"grid grid-cols-3 gap-2\">\n              {quickAmounts.map((amount) => (\n                <Button\n                  key={amount}\n                  variant={selectedAmount === amount ? \"default\" : \"outline\"}\n                  size=\"sm\"\n                  onClick={() => handleQuickAmount(amount)}\n                  disabled={amount > balance}\n                  className={cn(\n                    \"text-xs transition-all duration-200\",\n                    selectedAmount === amount && \"animate-neon-glow\"\n                  )}\n                  data-testid={`button-quick-${amount}`}\n                >\n                  {amount}\n                </Button>\n              ))}\n            </div>\n          </div>\n        </div>\n\n        {/* Auto Cash Out Section */}\n        <div className=\"space-y-3\">\n          <Label htmlFor=\"auto-cashout\" className=\"text-sm font-medium\">\n            Auto Cash Out (Optional)\n          </Label>\n          <div className=\"relative\">\n            <Input\n              id=\"auto-cashout\"\n              type=\"number\"\n              value={autoCashOut}\n              onChange={(e) => setAutoCashOut(e.target.value)}\n              step=\"0.1\"\n              min=\"1.1\"\n              placeholder=\"e.g., 2.00\"\n              className=\"font-mono pr-8\"\n              data-testid=\"input-auto-cashout\"\n            />\n            <span className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-xs text-muted-foreground\">\n              x\n            </span>\n          </div>\n        </div>\n\n        {/* Action Buttons */}\n        <div className=\"space-y-3\">\n          {canPlaceBet && (\n            <Button\n              onClick={onPlaceBet}\n              disabled={isLoading || betAmount <= 0 || betAmount > balance}\n              className=\"w-full bg-neon-green hover:bg-neon-green-dim text-black font-bold transition-all duration-200 hover:animate-cash-out-celebration\"\n              data-testid=\"button-place-bet\"\n            >\n              <Plane className=\"w-4 h-4 mr-2\" />\n              Place Bet ({betAmount} points)\n            </Button>\n          )}\n\n          {canCashOut && (\n            <Button\n              onClick={onCashOut}\n              className=\"w-full bg-neon-gold hover:bg-neon-gold-dim text-black font-bold animate-neon-glow cash-out-btn\"\n              data-testid=\"button-cash-out\"\n            >\n              <TrendingUp className=\"w-4 h-4 mr-2\" />\n              Cash Out Now!\n            </Button>\n          )}\n\n          {canPlaceNextBet && (\n            <Button\n              onClick={onPlaceNextBet}\n              disabled={isLoading || betAmount <= 0 || betAmount > balance}\n              variant=\"outline\"\n              className=\"w-full border-neon-blue text-neon-blue hover:bg-neon-blue hover:text-black transition-all duration-200\"\n              data-testid=\"button-next-bet\"\n            >\n              <Clock className=\"w-4 h-4 mr-2\" />\n              Bet Next Round ({betAmount} points)\n            </Button>\n          )}\n\n          {gameStatus === 'crashed' && (\n            <div className=\"text-center py-4\">\n              <Badge variant=\"destructive\" className=\"animate-pulse\">\n                Round Ended\n              </Badge>\n            </div>\n          )}\n        </div>\n\n        {/* Current Bet Status */}\n        {userBet && (\n          <div className=\"p-3 bg-surface-light rounded-lg border border-neon-green/20\">\n            <div className=\"flex items-center justify-between text-sm\">\n              <span className=\"text-muted-foreground\">Active Bet:</span>\n              <Badge className=\"bg-neon-green text-black font-mono\">\n                {userBet.betAmount} points\n              </Badge>\n            </div>\n            {userBet.autoCashOut && (\n              <div className=\"flex items-center justify-between text-xs mt-1\">\n                <span className=\"text-muted-foreground\">Auto Cash Out:</span>\n                <span className=\"text-neon-gold\">{userBet.autoCashOut}x</span>\n              </div>\n            )}\n          </div>\n        )}\n\n        {nextRoundBet && (\n          <div className=\"p-3 bg-surface-light rounded-lg border border-neon-blue/20\">\n            <div className=\"flex items-center justify-between text-sm\">\n              <span className=\"text-muted-foreground\">Next Round:</span>\n              <Badge variant=\"outline\" className=\"border-neon-blue text-neon-blue font-mono\">\n                {nextRoundBet.betAmount} points\n              </Badge>\n            </div>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  );\n}","size_bytes":7407},"client/src/components/aviator/GameCanvas.tsx":{"content":"import { useEffect, useRef, useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface GameCanvasProps {\n  gameStatus: 'betting' | 'flying' | 'crashed';\n  multiplier: number;\n  showCrashEffect?: boolean;\n  className?: string;\n}\n\nexport function GameCanvas({ \n  gameStatus, \n  multiplier, \n  showCrashEffect = false,\n  className \n}: GameCanvasProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [planePosition, setPlanePosition] = useState({ x: 50, y: 300 });\n  const animationRef = useRef<number>();\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const resizeCanvas = () => {\n      canvas.width = canvas.offsetWidth * window.devicePixelRatio;\n      canvas.height = canvas.offsetHeight * window.devicePixelRatio;\n      ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n    };\n\n    resizeCanvas();\n    window.addEventListener('resize', resizeCanvas);\n\n    return () => {\n      window.removeEventListener('resize', resizeCanvas);\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (gameStatus === 'flying') {\n      startFlightAnimation();\n    } else if (gameStatus === 'crashed') {\n      crashAnimation();\n    } else {\n      resetPlane();\n    }\n\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [gameStatus, multiplier]);\n\n  const startFlightAnimation = () => {\n    const animate = () => {\n      setPlanePosition(prev => {\n        const progress = Math.min(multiplier / 10, 1);\n        const x = 50 + (progress * 300);\n        const y = 300 - (progress * 200);\n        return { x, y };\n      });\n      \n      if (gameStatus === 'flying') {\n        animationRef.current = requestAnimationFrame(animate);\n      }\n    };\n    animate();\n  };\n\n  const crashAnimation = () => {\n    const animate = () => {\n      setPlanePosition(prev => ({\n        x: prev.x + 50,\n        y: prev.y + 100\n      }));\n    };\n    animate();\n  };\n\n  const resetPlane = () => {\n    setPlanePosition({ x: 50, y: 300 });\n  };\n\n  const drawGame = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    const width = canvas.offsetWidth;\n    const height = canvas.offsetHeight;\n\n    // Clear canvas\n    ctx.clearRect(0, 0, width, height);\n\n    // Draw background gradient\n    const gradient = ctx.createLinearGradient(0, 0, width, height);\n    gradient.addColorStop(0, 'hsl(220, 30%, 12%)');\n    gradient.addColorStop(1, 'hsl(222, 84%, 5%)');\n    ctx.fillStyle = gradient;\n    ctx.fillRect(0, 0, width, height);\n\n    // Draw flight path\n    if (gameStatus === 'flying' || gameStatus === 'crashed') {\n      ctx.beginPath();\n      ctx.strokeStyle = `hsl(${multiplier >= 5 ? '0, 100%, 50%' : '120, 100%, 50%'})`;\n      ctx.lineWidth = 3;\n      ctx.setLineDash([]);\n      \n      const progress = Math.min(multiplier / 10, 1);\n      const endX = 50 + (progress * 300);\n      const endY = 300 - (progress * 200);\n      \n      ctx.moveTo(50, 300);\n      ctx.quadraticCurveTo(endX / 2, endY + 50, endX, endY);\n      ctx.stroke();\n\n      // Add glow effect\n      ctx.shadowColor = ctx.strokeStyle;\n      ctx.shadowBlur = 10;\n      ctx.stroke();\n      ctx.shadowBlur = 0;\n    }\n\n    // Draw plane\n    ctx.save();\n    ctx.translate(planePosition.x, planePosition.y);\n    \n    if (gameStatus === 'crashed') {\n      ctx.rotate(Math.PI / 4); // 45 degree rotation for crash\n      ctx.filter = 'hue-rotate(180deg)';\n    }\n\n    // Plane body\n    ctx.fillStyle = 'hsl(45, 100%, 50%)';\n    ctx.fillRect(-15, -3, 30, 6);\n    \n    // Plane wings\n    ctx.fillRect(-5, -8, 10, 4);\n    ctx.fillRect(-5, 4, 10, 4);\n    \n    // Plane nose\n    ctx.beginPath();\n    ctx.moveTo(15, 0);\n    ctx.lineTo(20, -2);\n    ctx.lineTo(20, 2);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n\n    // Draw crash effect\n    if (showCrashEffect && gameStatus === 'crashed') {\n      for (let i = 0; i < 20; i++) {\n        ctx.beginPath();\n        ctx.arc(\n          planePosition.x + (Math.random() - 0.5) * 100,\n          planePosition.y + (Math.random() - 0.5) * 100,\n          Math.random() * 5 + 2,\n          0,\n          Math.PI * 2\n        );\n        ctx.fillStyle = `hsl(${Math.random() * 60}, 100%, 50%)`;\n        ctx.fill();\n      }\n    }\n  };\n\n  useEffect(() => {\n    drawGame();\n  }, [planePosition, gameStatus, multiplier, showCrashEffect]);\n\n  return (\n    <div className={cn(\"relative w-full h-full\", className)}>\n      <canvas\n        ref={canvasRef}\n        className=\"w-full h-full\"\n        data-testid=\"game-canvas\"\n      />\n      \n      {/* Overlay elements */}\n      {gameStatus === 'betting' && (\n        <div className=\"absolute inset-0 flex items-center justify-center\">\n          <div className=\"text-center\">\n            <div className=\"text-2xl font-bold text-muted-foreground mb-2\">\n              Place your bets!\n            </div>\n            <div className=\"text-sm text-muted-foreground\">\n              Round starting soon...\n            </div>\n          </div>\n        </div>\n      )}\n\n      {gameStatus === 'crashed' && showCrashEffect && (\n        <div className=\"absolute inset-0 pointer-events-none\">\n          <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\n            <div className=\"text-6xl font-bold text-neon-red neon-text-intense animate-ping\">\n              CRASHED!\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}","size_bytes":5654},"client/src/components/aviator/MultiplierDisplay.tsx":{"content":"import { useEffect, useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface MultiplierDisplayProps {\n  multiplier: number;\n  gameStatus: 'betting' | 'flying' | 'crashed';\n  isWarningZone?: boolean;\n  className?: string;\n}\n\nexport function MultiplierDisplay({ \n  multiplier, \n  gameStatus, \n  isWarningZone = false,\n  className \n}: MultiplierDisplayProps) {\n  const [displayMultiplier, setDisplayMultiplier] = useState(multiplier);\n  const [animationClass, setAnimationClass] = useState(\"\");\n\n  useEffect(() => {\n    setDisplayMultiplier(multiplier);\n    \n    // Trigger animation based on multiplier value\n    if (gameStatus === 'flying') {\n      if (multiplier >= 10) {\n        setAnimationClass(\"animate-intense-glow text-neon-red neon-text-intense\");\n      } else if (multiplier >= 5) {\n        setAnimationClass(\"animate-neon-glow text-neon-orange neon-text\");\n      } else if (multiplier >= 2) {\n        setAnimationClass(\"animate-neon-glow text-neon-gold neon-text\");\n      } else {\n        setAnimationClass(\"animate-neon-glow text-neon-green neon-text\");\n      }\n    } else if (gameStatus === 'crashed') {\n      setAnimationClass(\"text-neon-red animate-plane-crash\");\n    } else {\n      setAnimationClass(\"text-muted-foreground\");\n    }\n  }, [multiplier, gameStatus]);\n\n  const getMultiplierColor = () => {\n    if (gameStatus === 'crashed') return 'text-neon-red';\n    if (gameStatus === 'betting') return 'text-muted-foreground';\n    \n    if (multiplier >= 10) return 'text-neon-red';\n    if (multiplier >= 5) return 'text-neon-orange';\n    if (multiplier >= 2) return 'text-neon-gold';\n    return 'text-neon-green';\n  };\n\n  return (\n    <div \n      className={cn(\n        \"font-mono font-bold text-center transition-all duration-300\",\n        \"text-6xl lg:text-8xl\",\n        isWarningZone && \"warning-zone\",\n        getMultiplierColor(),\n        animationClass,\n        className\n      )}\n      data-testid=\"multiplier-display\"\n    >\n      {gameStatus === 'crashed' ? (\n        <span className=\"relative\">\n          {displayMultiplier.toFixed(2)}x\n          <div className=\"absolute inset-0 bg-neon-red opacity-20 blur-xl animate-ping\" />\n        </span>\n      ) : (\n        <span className=\"relative\">\n          {displayMultiplier.toFixed(2)}x\n          {gameStatus === 'flying' && (\n            <div className=\"absolute -inset-4 bg-current opacity-10 blur-lg animate-pulse\" />\n          )}\n        </span>\n      )}\n    </div>\n  );\n}","size_bytes":2458},"client/src/components/aviator/StatisticsPanel.tsx":{"content":"import { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { \n  TrendingUp, \n  TrendingDown, \n  Users, \n  Trophy, \n  Target, \n  Clock,\n  Zap,\n  Star\n} from \"lucide-react\";\nimport { cn } from \"@/lib/utils\";\n\ninterface Player {\n  id: string;\n  name: string;\n  profit: number;\n  gamesPlayed: number;\n  winRate: number;\n  biggestWin: number;\n  isOnline: boolean;\n}\n\ninterface StatisticsPanelProps {\n  activePlayerCount: number;\n  totalProfit: number;\n  totalLoss: number;\n  biggestWinOfDay: { amount: number; player: string };\n  profitChangePercent: number;\n  lastMultipliers: number[];\n  className?: string;\n}\n\nexport function StatisticsPanel({\n  activePlayerCount,\n  totalProfit,\n  totalLoss,\n  biggestWinOfDay,\n  profitChangePercent,\n  lastMultipliers,\n  className\n}: StatisticsPanelProps) {\n  const [leaderboard, setLeaderboard] = useState<Player[]>([]);\n  const [currentTime, setCurrentTime] = useState(new Date());\n\n  // Mock leaderboard data - in real app, this would come from API\n  useEffect(() => {\n    const generateMockLeaderboard = (): Player[] => {\n      const names = ['Ace_Pilot', 'Sky_Master', 'High_Flyer', 'Wind_Walker', 'Cloud_Chaser', 'Jet_Stream', 'Rocket_Man', 'Flight_Pro'];\n      return names.map((name, index) => ({\n        id: `player_${index}`,\n        name,\n        profit: Math.floor(Math.random() * 10000) + 1000 - (index * 200),\n        gamesPlayed: Math.floor(Math.random() * 100) + 50,\n        winRate: Math.floor(Math.random() * 40) + 40 + (8 - index),\n        biggestWin: Math.floor(Math.random() * 5000) + 1000,\n        isOnline: Math.random() > 0.3\n      })).sort((a, b) => b.profit - a.profit);\n    };\n\n    setLeaderboard(generateMockLeaderboard());\n  }, []);\n\n  useEffect(() => {\n    const timer = setInterval(() => setCurrentTime(new Date()), 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  const netProfit = totalProfit - totalLoss;\n  const avgMultiplier = lastMultipliers.reduce((sum, mult) => sum + mult, 0) / lastMultipliers.length;\n\n  const getRankIcon = (index: number) => {\n    switch (index) {\n      case 0: return <Trophy className=\"w-4 h-4 text-neon-gold\" />;\n      case 1: return <Star className=\"w-4 h-4 text-gray-400\" />;\n      case 2: return <Target className=\"w-4 h-4 text-amber-600\" />;\n      default: return <span className=\"w-4 h-4 flex items-center justify-center text-xs font-bold\">{index + 1}</span>;\n    }\n  };\n\n  const getRankClass = (index: number) => {\n    switch (index) {\n      case 0: return \"leaderboard-gold\";\n      case 1: return \"leaderboard-silver\";\n      case 2: return \"leaderboard-bronze\";\n      default: return \"\";\n    }\n  };\n\n  return (\n    <div className={cn(\"space-y-4\", className)}>\n      {/* Live Statistics */}\n      <Card className=\"glass-effect border-surface-light\">\n        <CardHeader className=\"pb-4\">\n          <CardTitle className=\"flex items-center gap-2 text-lg\">\n            <Zap className=\"w-5 h-5 text-neon-blue\" />\n            Live Statistics\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          {/* Active Players & Time */}\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"text-center p-3 bg-surface-light rounded-lg border border-neon-green/20\">\n              <div className=\"flex items-center justify-center gap-2 mb-1\">\n                <Users className=\"w-4 h-4 text-neon-green\" />\n                <span className=\"text-sm text-muted-foreground\">Online</span>\n              </div>\n              <div className=\"text-2xl font-bold text-neon-green neon-text\" data-testid=\"text-player-count\">\n                {activePlayerCount}\n              </div>\n            </div>\n            \n            <div className=\"text-center p-3 bg-surface-light rounded-lg border border-neon-blue/20\">\n              <div className=\"flex items-center justify-center gap-2 mb-1\">\n                <Clock className=\"w-4 h-4 text-neon-blue\" />\n                <span className=\"text-sm text-muted-foreground\">Time</span>\n              </div>\n              <div className=\"text-sm font-mono text-neon-blue\">\n                {currentTime.toLocaleTimeString()}\n              </div>\n            </div>\n          </div>\n\n          {/* Profit/Loss Display */}\n          <div className=\"p-4 bg-surface-light rounded-lg border border-surface-lighter\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm text-muted-foreground\">Net Profit</span>\n              <div className=\"flex items-center gap-1\">\n                {profitChangePercent >= 0 ? (\n                  <TrendingUp className=\"w-4 h-4 text-neon-green\" />\n                ) : (\n                  <TrendingDown className=\"w-4 h-4 text-neon-red\" />\n                )}\n                <span className={cn(\n                  \"text-sm font-mono\",\n                  profitChangePercent >= 0 ? \"text-neon-green\" : \"text-neon-red\"\n                )}>\n                  {profitChangePercent >= 0 ? '+' : ''}{profitChangePercent.toFixed(1)}%\n                </span>\n              </div>\n            </div>\n            <div className={cn(\n              \"text-2xl font-bold font-mono\",\n              netProfit >= 0 ? \"text-neon-green profit-positive\" : \"text-neon-red profit-negative\"\n            )} data-testid=\"text-net-profit\">\n              {netProfit >= 0 ? '+' : ''}{netProfit.toLocaleString()}\n            </div>\n            <div className=\"mt-2 space-y-1\">\n              <div className=\"flex justify-between text-xs\">\n                <span className=\"text-muted-foreground\">Wins: {totalProfit.toLocaleString()}</span>\n                <span className=\"text-muted-foreground\">Losses: {totalLoss.toLocaleString()}</span>\n              </div>\n            </div>\n          </div>\n\n          {/* Biggest Win Today */}\n          <div className=\"p-3 bg-surface-light rounded-lg border border-neon-gold/20\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <div className=\"text-xs text-muted-foreground\">Biggest Win Today</div>\n                <div className=\"text-lg font-bold text-neon-gold neon-text\" data-testid=\"text-biggest-win\">\n                  {biggestWinOfDay.amount.toLocaleString()}\n                </div>\n              </div>\n              <div className=\"text-right\">\n                <div className=\"text-xs text-muted-foreground\">by</div>\n                <div className=\"text-sm font-medium text-foreground\">\n                  {biggestWinOfDay.player}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Average Multiplier */}\n          <div className=\"p-3 bg-surface-light rounded-lg\">\n            <div className=\"flex items-center justify-between mb-2\">\n              <span className=\"text-sm text-muted-foreground\">Average Multiplier (Last 5)</span>\n              <span className=\"text-lg font-bold text-neon-blue\">\n                {avgMultiplier.toFixed(2)}x\n              </span>\n            </div>\n            <Progress \n              value={Math.min((avgMultiplier / 5) * 100, 100)} \n              className=\"h-2\"\n            />\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Recent Multipliers */}\n      <Card className=\"glass-effect border-surface-light\">\n        <CardHeader className=\"pb-4\">\n          <CardTitle className=\"text-lg\">Recent Results</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex gap-2 justify-center\">\n            {lastMultipliers.map((mult, index) => (\n              <Badge\n                key={index}\n                variant={mult >= 2 ? \"default\" : \"secondary\"}\n                className={cn(\n                  \"font-mono text-sm px-3 py-1 transition-all duration-200\",\n                  mult >= 10 ? \"bg-neon-red text-black animate-neon-glow\" :\n                  mult >= 5 ? \"bg-neon-orange text-black\" :\n                  mult >= 2 ? \"bg-neon-gold text-black\" :\n                  \"bg-surface-lighter text-muted-foreground\",\n                  index === 0 && \"animate-slide-up\"\n                )}\n                data-testid={`badge-multiplier-${index}`}\n              >\n                {mult.toFixed(2)}x\n              </Badge>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Leaderboard */}\n      <Card className=\"glass-effect border-surface-light\">\n        <CardHeader className=\"pb-4\">\n          <CardTitle className=\"flex items-center gap-2 text-lg\">\n            <Trophy className=\"w-5 h-5 text-neon-gold\" />\n            Top Players\n          </CardTitle>\n        </CardHeader>\n        <CardContent className=\"space-y-2\">\n          {leaderboard.slice(0, 8).map((player, index) => (\n            <div\n              key={player.id}\n              className={cn(\n                \"flex items-center justify-between p-3 rounded-lg border border-surface-lighter transition-all duration-200 hover:bg-surface-light\",\n                getRankClass(index)\n              )}\n              data-testid={`row-player-${index}`}\n            >\n              <div className=\"flex items-center gap-3\">\n                {getRankIcon(index)}\n                <div>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"font-medium text-sm\">{player.name}</span>\n                    {player.isOnline && (\n                      <div className=\"w-2 h-2 bg-neon-green rounded-full animate-pulse\" />\n                    )}\n                  </div>\n                  <div className=\"text-xs text-muted-foreground\">\n                    {player.gamesPlayed} games • {player.winRate}% win rate\n                  </div>\n                </div>\n              </div>\n              <div className=\"text-right\">\n                <div className={cn(\n                  \"font-bold font-mono\",\n                  player.profit >= 0 ? \"text-neon-green\" : \"text-neon-red\"\n                )}>\n                  {player.profit >= 0 ? '+' : ''}{player.profit.toLocaleString()}\n                </div>\n                <div className=\"text-xs text-muted-foreground\">\n                  Best: {player.biggestWin.toLocaleString()}\n                </div>\n              </div>\n            </div>\n          ))}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}","size_bytes":10411},"server/cricketApiService.ts":{"content":"import { ApiCallLog, InsertApiCallLog } from \"@shared/schema.ts\";\n\nexport interface CricketApiProvider {\n  name: string;\n  fetchMatches(): Promise<any>;\n  fetchMatchDetails(matchId: string): Promise<any>;\n  fetchLiveScore(matchId: string): Promise<any>;\n  fetchBallByBall(matchId: string): Promise<any>;\n}\n\n// CricAPI.com implementation (free tier for prototyping)\nexport class CricApiProvider implements CricketApiProvider {\n  name = \"cricapi\";\n  private baseUrl = \"https://api.cricapi.com/v1\";\n  private apiKey: string;\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  async fetchMatches(): Promise<any> {\n    const response = await fetch(`${this.baseUrl}/matches?apikey=${this.apiKey}&offset=0`);\n    return response.json();\n  }\n\n  async fetchMatchDetails(matchId: string): Promise<any> {\n    const response = await fetch(`${this.baseUrl}/match_info?apikey=${this.apiKey}&id=${matchId}`);\n    return response.json();\n  }\n\n  async fetchLiveScore(matchId: string): Promise<any> {\n    const response = await fetch(`${this.baseUrl}/crickscore?apikey=${this.apiKey}&id=${matchId}`);\n    return response.json();\n  }\n\n  async fetchBallByBall(matchId: string): Promise<any> {\n    const response = await fetch(`${this.baseUrl}/match_scorecard?apikey=${this.apiKey}&id=${matchId}`);\n    return response.json();\n  }\n}\n\n// API-Cricket.com implementation (alternative free option)\nexport class ApiCricketProvider implements CricketApiProvider {\n  name = \"api-cricket\";\n  private baseUrl = \"https://api.api-cricket.com/v1\";\n  private apiKey: string;\n\n  constructor(apiKey: string) {\n    this.apiKey = apiKey;\n  }\n\n  async fetchMatches(): Promise<any> {\n    const response = await fetch(`${this.baseUrl}/matches?apikey=${this.apiKey}`);\n    return response.json();\n  }\n\n  async fetchMatchDetails(matchId: string): Promise<any> {\n    const response = await fetch(`${this.baseUrl}/matches/${matchId}?apikey=${this.apiKey}`);\n    return response.json();\n  }\n\n  async fetchLiveScore(matchId: string): Promise<any> {\n    const response = await fetch(`${this.baseUrl}/matches/${matchId}/live?apikey=${this.apiKey}`);\n    return response.json();\n  }\n\n  async fetchBallByBall(matchId: string): Promise<any> {\n    const response = await fetch(`${this.baseUrl}/matches/${matchId}/balls?apikey=${this.apiKey}`);\n    return response.json();\n  }\n}\n\n// Mock provider for testing without external dependencies\nexport class MockCricketProvider implements CricketApiProvider {\n  name = \"mock\";\n\n  async fetchMatches(): Promise<any> {\n    return {\n      data: [\n        {\n          id: \"ipl-2025-1234\",\n          name: \"Mumbai Indians vs Chennai Super Kings\",\n          teams: [\"Mumbai Indians\", \"Chennai Super Kings\"],\n          status: \"live\",\n          venue: \"Wankhede Stadium, Mumbai\",\n          date: new Date().toISOString(),\n        },\n        {\n          id: \"ipl-2025-1235\", \n          name: \"Royal Challengers Bangalore vs Delhi Capitals\",\n          teams: [\"Royal Challengers Bangalore\", \"Delhi Capitals\"],\n          status: \"scheduled\",\n          venue: \"M. Chinnaswamy Stadium, Bangalore\",\n          date: new Date(Date.now() + 24 * 60 * 60 * 1000).toISOString(),\n        }\n      ]\n    };\n  }\n\n  async fetchMatchDetails(matchId: string): Promise<any> {\n    if (matchId === \"ipl-2025-1234\") {\n      return {\n        data: {\n          id: \"ipl-2025-1234\",\n          name: \"Mumbai Indians vs Chennai Super Kings\",\n          status: \"live\",\n          venue: \"Wankhede Stadium, Mumbai\",\n          toss: {\n            winner: \"Mumbai Indians\",\n            decision: \"bat\"\n          },\n          teams: {\n            a: {\n              id: \"MI\",\n              name: \"Mumbai Indians\",\n              scores: [\n                {\n                  inning: 1,\n                  r: 187,\n                  w: 4,\n                  o: 20.0\n                }\n              ]\n            },\n            b: {\n              id: \"CSK\", \n              name: \"Chennai Super Kings\",\n              scores: [\n                {\n                  inning: 2,\n                  r: 134,\n                  w: 6,\n                  o: 16.3\n                }\n              ]\n            }\n          }\n        }\n      };\n    }\n    return { data: null };\n  }\n\n  async fetchLiveScore(matchId: string): Promise<any> {\n    if (matchId === \"ipl-2025-1234\") {\n      return {\n        data: {\n          id: \"ipl-2025-1234\",\n          status: \"live\", \n          current_innings: 2,\n          teams: {\n            a: {\n              name: \"Mumbai Indians\",\n              scores: { r: 187, w: 4, o: 20.0 }\n            },\n            b: {\n              name: \"Chennai Super Kings\", \n              scores: { r: 134, w: 6, o: 16.3 }\n            }\n          },\n          live: {\n            current_over: 16.3,\n            batsman: [\"MS Dhoni\", \"Ravindra Jadeja\"],\n            bowler: \"Jasprit Bumrah\",\n            recent_balls: [\"4\", \"1\", \"0\", \"W\", \"6\", \"2\"]\n          }\n        }\n      };\n    }\n    return { data: null };\n  }\n\n  async fetchBallByBall(matchId: string): Promise<any> {\n    if (matchId === \"ipl-2025-1234\") {\n      return {\n        data: {\n          balls: [\n            {\n              over: 16,\n              ball: 3,\n              batsman: \"MS Dhoni\",\n              bowler: \"Jasprit Bumrah\", \n              runs: 4,\n              extras: 0,\n              wicket: false,\n              commentary: \"Four! Dhoni finds the gap between covers and point\"\n            },\n            {\n              over: 16,\n              ball: 4,\n              batsman: \"Ravindra Jadeja\",\n              bowler: \"Jasprit Bumrah\",\n              runs: 0,\n              extras: 0, \n              wicket: true,\n              wicket_type: \"caught\",\n              commentary: \"OUT! Jadeja attempts a big shot but gets caught at long-on\"\n            }\n          ]\n        }\n      };\n    }\n    return { data: { balls: [] } };\n  }\n}\n\nexport class CricketApiService {\n  private provider: CricketApiProvider;\n  private logApiCall: (log: InsertApiCallLog) => Promise<void>;\n\n  constructor(provider: CricketApiProvider, logApiCall: (log: InsertApiCallLog) => Promise<void>) {\n    this.provider = provider;\n    this.logApiCall = logApiCall;\n  }\n\n  private async logCall(endpoint: string, method: string, requestData?: any, responseStatus?: number, responseTime?: number, errorMessage?: string, matchId?: string): Promise<void> {\n    try {\n      await this.logApiCall({\n        provider: this.provider.name,\n        endpoint,\n        method,\n        requestData,\n        responseStatus,\n        responseTime,\n        errorMessage,\n        matchId,\n      });\n    } catch (error) {\n      console.error(\"Failed to log API call:\", error);\n    }\n  }\n\n  async getMatches(): Promise<any> {\n    const startTime = Date.now();\n    try {\n      const result = await this.provider.fetchMatches();\n      const responseTime = Date.now() - startTime;\n      await this.logCall(\"matches\", \"GET\", null, 200, responseTime);\n      return result;\n    } catch (error: any) {\n      const responseTime = Date.now() - startTime;\n      await this.logCall(\"matches\", \"GET\", null, 500, responseTime, error.message);\n      throw error;\n    }\n  }\n\n  async getMatchDetails(matchId: string): Promise<any> {\n    const startTime = Date.now();\n    try {\n      const result = await this.provider.fetchMatchDetails(matchId);\n      const responseTime = Date.now() - startTime;\n      await this.logCall(`match_details/${matchId}`, \"GET\", null, 200, responseTime, undefined, matchId);\n      return result;\n    } catch (error: any) {\n      const responseTime = Date.now() - startTime;\n      await this.logCall(`match_details/${matchId}`, \"GET\", null, 500, responseTime, error.message, matchId);\n      throw error;\n    }\n  }\n\n  async getLiveScore(matchId: string): Promise<any> {\n    const startTime = Date.now();\n    try {\n      const result = await this.provider.fetchLiveScore(matchId);\n      const responseTime = Date.now() - startTime;\n      await this.logCall(`live_score/${matchId}`, \"GET\", null, 200, responseTime, undefined, matchId);\n      return result;\n    } catch (error: any) {\n      const responseTime = Date.now() - startTime;\n      await this.logCall(`live_score/${matchId}`, \"GET\", null, 500, responseTime, error.message, matchId);\n      throw error;\n    }\n  }\n\n  async getBallByBall(matchId: string): Promise<any> {\n    const startTime = Date.now();\n    try {\n      const result = await this.provider.fetchBallByBall(matchId);\n      const responseTime = Date.now() - startTime;\n      await this.logCall(`ball_by_ball/${matchId}`, \"GET\", null, 200, responseTime, undefined, matchId);\n      return result;\n    } catch (error: any) {\n      const responseTime = Date.now() - startTime;\n      await this.logCall(`ball_by_ball/${matchId}`, \"GET\", null, 500, responseTime, error.message, matchId);\n      throw error;\n    }\n  }\n}\n\n// Rate limiter utility\nexport class RateLimiter {\n  private requests: number[] = [];\n  private maxRequests: number;\n  private windowMs: number;\n\n  constructor(maxRequests: number, windowMs: number) {\n    this.maxRequests = maxRequests;\n    this.windowMs = windowMs;\n  }\n\n  canMakeRequest(): boolean {\n    const now = Date.now();\n    \n    // Remove old requests outside the window\n    this.requests = this.requests.filter(time => now - time < this.windowMs);\n    \n    // Check if we can make a new request\n    if (this.requests.length < this.maxRequests) {\n      this.requests.push(now);\n      return true;\n    }\n    \n    return false;\n  }\n\n  getWaitTime(): number {\n    if (this.requests.length === 0) return 0;\n    \n    const oldestRequest = this.requests[0];\n    const waitTime = this.windowMs - (Date.now() - oldestRequest);\n    return Math.max(0, waitTime);\n  }\n}","size_bytes":9698},"server/cricketDataIngestion.ts":{"content":"import { storage } from './storage';\nimport { CricketApiService, MockCricketProvider, CricApiProvider, RateLimiter } from './cricketApiService';\nimport { CricketWebSocketManager } from './cricketWebSocketService';\nimport { LiveMatchData, LiveBallEvent } from '@shared/schema';\n\nexport class CricketDataIngestionService {\n  private apiService: CricketApiService;\n  private wsManager: CricketWebSocketManager;\n  private rateLimiter: RateLimiter;\n  private pollingInterval: NodeJS.Timeout | null = null;\n  private activeMatches = new Set<string>();\n  private lastSequenceNumbers = new Map<string, number>();\n\n  constructor(wsManager: CricketWebSocketManager) {\n    this.wsManager = wsManager;\n    \n    // Initialize with mock provider for demo - user can provide real API key later\n    const mockProvider = new MockCricketProvider();\n    this.apiService = new CricketApiService(mockProvider, (log) => storage.logApiCall(log));\n    \n    // Rate limiter: 60 requests per minute\n    this.rateLimiter = new RateLimiter(60, 60 * 1000);\n  }\n\n  async initializeTeamsAndPlayers(): Promise<void> {\n    console.log('Initializing IPL teams and players...');\n    \n    // Create IPL teams\n    const teams = [\n      { id: 'MI', name: 'Mumbai Indians', shortName: 'MI', color: '#004ba0', logo: '/teams/mi.png' },\n      { id: 'CSK', name: 'Chennai Super Kings', shortName: 'CSK', color: '#f9cd05', logo: '/teams/csk.png' },\n      { id: 'RCB', name: 'Royal Challengers Bangalore', shortName: 'RCB', color: '#ec1c24', logo: '/teams/rcb.png' },\n      { id: 'DC', name: 'Delhi Capitals', shortName: 'DC', color: '#17479e', logo: '/teams/dc.png' },\n      { id: 'KKR', name: 'Kolkata Knight Riders', shortName: 'KKR', color: '#3a225d', logo: '/teams/kkr.png' },\n      { id: 'PBKS', name: 'Punjab Kings', shortName: 'PBKS', color: '#ed1a37', logo: '/teams/pbks.png' },\n      { id: 'RR', name: 'Rajasthan Royals', shortName: 'RR', color: '#254aa5', logo: '/teams/rr.png' },\n      { id: 'SRH', name: 'Sunrisers Hyderabad', shortName: 'SRH', color: '#ff822a', logo: '/teams/srh.png' },\n      { id: 'GT', name: 'Gujarat Titans', shortName: 'GT', color: '#1b2133', logo: '/teams/gt.png' },\n      { id: 'LSG', name: 'Lucknow Super Giants', shortName: 'LSG', color: '#00a9e0', logo: '/teams/lsg.png' }\n    ];\n\n    for (const team of teams) {\n      try {\n        const existingTeam = await storage.getCricketTeam(team.id);\n        if (!existingTeam) {\n          await storage.createCricketTeam(team);\n          console.log(`Created team: ${team.name}`);\n        }\n      } catch (error) {\n        console.error(`Error creating team ${team.name}:`, error);\n      }\n    }\n\n    // Create sample players for Mumbai Indians and Chennai Super Kings\n    const players = [\n      // Mumbai Indians\n      { id: 'rohit-sharma', name: 'Rohit Sharma', teamId: 'MI', role: 'batsman', battingStyle: 'right-hand' },\n      { id: 'jasprit-bumrah', name: 'Jasprit Bumrah', teamId: 'MI', role: 'bowler', bowlingStyle: 'right-arm fast' },\n      { id: 'hardik-pandya', name: 'Hardik Pandya', teamId: 'MI', role: 'all-rounder', battingStyle: 'right-hand' },\n      { id: 'ishan-kishan', name: 'Ishan Kishan', teamId: 'MI', role: 'wicket-keeper', battingStyle: 'left-hand' },\n      \n      // Chennai Super Kings\n      { id: 'ms-dhoni', name: 'MS Dhoni', teamId: 'CSK', role: 'wicket-keeper', battingStyle: 'right-hand' },\n      { id: 'ravindra-jadeja', name: 'Ravindra Jadeja', teamId: 'CSK', role: 'all-rounder', battingStyle: 'left-hand' },\n      { id: 'ruturaj-gaikwad', name: 'Ruturaj Gaikwad', teamId: 'CSK', role: 'batsman', battingStyle: 'right-hand' },\n      { id: 'deepak-chahar', name: 'Deepak Chahar', teamId: 'CSK', role: 'bowler', bowlingStyle: 'right-arm medium' },\n    ];\n\n    for (const player of players) {\n      try {\n        const existingPlayer = await storage.getCricketPlayer(player.id);\n        if (!existingPlayer) {\n          await storage.createCricketPlayer(player);\n          console.log(`Created player: ${player.name}`);\n        }\n      } catch (error) {\n        console.error(`Error creating player ${player.name}:`, error);\n      }\n    }\n\n    console.log('Team and player initialization complete');\n  }\n\n  async startDataIngestion(): Promise<void> {\n    console.log('Starting cricket data ingestion service...');\n    \n    await this.initializeTeamsAndPlayers();\n    await this.setupDemoMatch();\n\n    // Start polling for live data every 3 seconds\n    this.pollingInterval = setInterval(async () => {\n      try {\n        await this.pollForUpdates();\n      } catch (error) {\n        console.error('Error in polling cycle:', error);\n      }\n    }, 3000);\n\n    console.log('Cricket data ingestion service started');\n  }\n\n  private async setupDemoMatch(): Promise<void> {\n    const existingMatch = await storage.getCricketMatch('ipl-2025-1234');\n    \n    if (!existingMatch) {\n      // Create a demo live match\n      const match = await storage.createCricketMatch({\n        id: 'ipl-2025-1234',\n        homeTeamId: 'MI',\n        awayTeamId: 'CSK',\n        venue: 'Wankhede Stadium, Mumbai',\n        tournament: 'IPL',\n        matchType: 'T20',\n        status: 'live',\n        tossWinner: 'MI',\n        tossDecision: 'bat',\n        currentInnings: 2,\n        scheduledAt: new Date(),\n        startedAt: new Date(),\n      });\n\n      // Create innings\n      const firstInnings = await storage.createMatchInnings({\n        matchId: 'ipl-2025-1234',\n        battingTeamId: 'MI',\n        bowlingTeamId: 'CSK',\n        inningsNumber: 1,\n        runs: 187,\n        wickets: 4,\n        overs: '20.0',\n        runRate: '9.35',\n        status: 'completed',\n      });\n\n      const secondInnings = await storage.createMatchInnings({\n        matchId: 'ipl-2025-1234',\n        battingTeamId: 'CSK',\n        bowlingTeamId: 'MI',\n        inningsNumber: 2,\n        runs: 134,\n        wickets: 6,\n        overs: '16.3',\n        runRate: '8.18',\n        target: 188,\n        requiredRunRate: '15.43',\n        status: 'in_progress',\n      });\n\n      this.activeMatches.add('ipl-2025-1234');\n      this.lastSequenceNumbers.set('ipl-2025-1234', 0);\n\n      console.log('Demo match setup complete');\n    } else {\n      this.activeMatches.add('ipl-2025-1234');\n      \n      // Get the last sequence number\n      const lastEvents = await storage.getLatestBallEvents('ipl-2025-1234', 1);\n      this.lastSequenceNumbers.set('ipl-2025-1234', lastEvents[0]?.sequence || 0);\n    }\n  }\n\n  private async pollForUpdates(): Promise<void> {\n    if (!this.rateLimiter.canMakeRequest()) {\n      console.log(`Rate limit reached, waiting ${this.rateLimiter.getWaitTime()}ms`);\n      return;\n    }\n\n    for (const matchId of Array.from(this.activeMatches)) {\n      try {\n        await this.updateMatchData(matchId);\n        await this.generateBallEvent(matchId); // For demo purposes\n      } catch (error) {\n        console.error(`Error updating match ${matchId}:`, error);\n      }\n    }\n  }\n\n  private async updateMatchData(matchId: string): Promise<void> {\n    try {\n      const liveData = await this.apiService.getLiveScore(matchId);\n      \n      if (liveData && liveData.data) {\n        const matchData: LiveMatchData = {\n          matchId,\n          teams: {\n            home: { id: 'MI', name: 'Mumbai Indians', shortName: 'MI' },\n            away: { id: 'CSK', name: 'Chennai Super Kings', shortName: 'CSK' },\n          },\n          status: liveData.data.status || 'live',\n          currentInnings: liveData.data.current_innings || 2,\n          score: [\n            {\n              inning: 1,\n              team: 'MI',\n              runs: 187,\n              wickets: 4,\n              overs: '20.0',\n              runRate: 9.35,\n            },\n            {\n              inning: 2,\n              team: 'CSK',\n              runs: liveData.data.teams?.b?.scores?.r || 134,\n              wickets: liveData.data.teams?.b?.scores?.w || 6,\n              overs: liveData.data.teams?.b?.scores?.o || '16.3',\n              runRate: 8.18,\n              requiredRunRate: 15.43,\n            },\n          ],\n          lastUpdated: new Date().toISOString(),\n        };\n\n        // Broadcast to all subscribed clients\n        this.wsManager.broadcastMatchUpdate(matchId, matchData);\n      }\n    } catch (error) {\n      console.error(`Error fetching live data for match ${matchId}:`, error);\n    }\n  }\n\n  private async generateBallEvent(matchId: string): Promise<void> {\n    // For demo purposes, generate a ball event every few polling cycles\n    if (Math.random() < 0.3) { // 30% chance to generate an event\n      const currentSequence = this.lastSequenceNumbers.get(matchId) || 0;\n      const newSequence = currentSequence + 1;\n      \n      const currentInnings = await storage.getCurrentMatchInnings(matchId);\n      if (!currentInnings) return;\n\n      const runs = Math.floor(Math.random() * 7); // 0-6 runs\n      const isWicket = runs === 0 && Math.random() < 0.1; // 10% chance of wicket on 0 runs\n      const currentOver = Math.floor((newSequence - 1) / 6) + 1;\n      const ballInOver = ((newSequence - 1) % 6) + 1;\n\n      const ballEvent: LiveBallEvent = {\n        type: isWicket ? 'wicket' : runs >= 4 ? 'boundary' : 'ball',\n        matchId,\n        over: currentOver,\n        ballInOver,\n        batsman: 'MS Dhoni',\n        bowler: 'Jasprit Bumrah',\n        runs,\n        extras: 0,\n        wicket: isWicket,\n        wicketType: isWicket ? 'caught' : undefined,\n        commentary: this.generateCommentary(runs, isWicket),\n        scoreAfterBall: {\n          team: 'CSK',\n          runs: (currentInnings.runs || 0) + runs,\n          wickets: (currentInnings.wickets || 0) + (isWicket ? 1 : 0),\n          overs: `${currentOver}.${ballInOver}`,\n        },\n        timestamp: new Date().toISOString(),\n        sequence: newSequence,\n      };\n\n      // Save to database\n      await storage.createBallEvent({\n        matchId,\n        inningsId: currentInnings.id,\n        overNumber: currentOver,\n        ballNumber: ballInOver,\n        batsmanId: 'ms-dhoni',\n        bowlerId: 'jasprit-bumrah',\n        runs,\n        extras: 0,\n        isWicket,\n        wicketType: isWicket ? 'caught' : undefined,\n        commentary: ballEvent.commentary,\n        scoreAfterBall: ballEvent.scoreAfterBall,\n        sequence: newSequence,\n      });\n\n      // Update innings\n      const newRuns = (currentInnings.runs || 0) + runs;\n      const newWickets = (currentInnings.wickets || 0) + (isWicket ? 1 : 0);\n      const totalOvers = (currentOver - 1) + ballInOver / 6;\n      \n      await storage.updateMatchInnings(currentInnings.id, {\n        runs: newRuns,\n        wickets: newWickets,\n        overs: `${currentOver}.${ballInOver}`,\n        runRate: totalOvers > 0 ? (newRuns / totalOvers).toFixed(2) : '0.00',\n      });\n\n      // Update sequence number\n      this.lastSequenceNumbers.set(matchId, newSequence);\n\n      // Broadcast to subscribed clients\n      this.wsManager.broadcastBallEvent(matchId, ballEvent);\n\n      console.log(`Generated ball event: ${ballEvent.commentary}`);\n    }\n  }\n\n  private generateCommentary(runs: number, isWicket: boolean): string {\n    if (isWicket) {\n      const wicketComments = [\n        \"OUT! Excellent catch in the deep!\",\n        \"WICKET! The batsman holes out to the fielder\",\n        \"Gone! A brilliant piece of bowling\",\n        \"OUT! The pressure tells and wicket falls\",\n      ];\n      return wicketComments[Math.floor(Math.random() * wicketComments.length)];\n    }\n\n    if (runs === 6) {\n      return \"SIX! What a magnificent hit! The ball sails over the boundary\";\n    }\n    if (runs === 4) {\n      return \"FOUR! Beautifully timed shot races away to the boundary\";\n    }\n    if (runs === 0) {\n      return \"Dot ball. Good tight bowling from the bowler\";\n    }\n    \n    return `${runs} run${runs > 1 ? 's' : ''} taken. Good running between the wickets`;\n  }\n\n  stopDataIngestion(): void {\n    if (this.pollingInterval) {\n      clearInterval(this.pollingInterval);\n      this.pollingInterval = null;\n      console.log('Cricket data ingestion service stopped');\n    }\n  }\n\n  // Method to switch to real API provider when user provides credentials\n  async switchToRealProvider(provider: 'cricapi' | 'api-cricket', apiKey: string): Promise<void> {\n    let realProvider;\n    \n    if (provider === 'cricapi') {\n      realProvider = new CricApiProvider(apiKey);\n    } else {\n      realProvider = new CricApiProvider(apiKey); // Placeholder for API-Cricket\n    }\n\n    this.apiService = new CricketApiService(realProvider, (log) => storage.logApiCall(log));\n    \n    // Save API config\n    await storage.createCricketApiConfig({\n      provider,\n      apiKey,\n      baseUrl: provider === 'cricapi' ? 'https://api.cricapi.com/v1' : 'https://api.api-cricket.com/v1',\n      rateLimitPerMinute: 60,\n      isActive: true,\n    });\n\n    console.log(`Switched to real ${provider} provider`);\n  }\n\n  getIngestionStatus() {\n    return {\n      isRunning: this.pollingInterval !== null,\n      activeMatches: Array.from(this.activeMatches),\n      providerName: this.apiService ? 'mock' : 'unknown',\n      connectedClients: this.wsManager.getConnectedClients(),\n      lastSequenceNumbers: Object.fromEntries(this.lastSequenceNumbers),\n    };\n  }\n}","size_bytes":13178},"server/cricketWebSocketService.ts":{"content":"import { WebSocketServer, WebSocket } from 'ws';\nimport { LiveMatchData, LiveBallEvent } from '@shared/schema';\n\nexport interface CricketWebSocketService {\n  broadcastMatchUpdate(matchId: string, data: LiveMatchData): void;\n  broadcastBallEvent(matchId: string, event: LiveBallEvent): void;\n  subscribeToMatch(ws: WebSocket, matchId: string): void;\n  unsubscribeFromMatch(ws: WebSocket, matchId: string): void;\n  getConnectedClients(matchId?: string): number;\n}\n\nexport class CricketWebSocketManager implements CricketWebSocketService {\n  private matchSubscriptions = new Map<string, Set<WebSocket>>();\n  private clientSubscriptions = new Map<WebSocket, Set<string>>();\n\n  constructor(private wss: WebSocketServer) {\n    this.setupWebSocketServer();\n  }\n\n  private setupWebSocketServer(): void {\n    this.wss.on('connection', (ws: WebSocket) => {\n      console.log('Cricket WebSocket client connected');\n      \n      ws.on('message', (message: string) => {\n        try {\n          const data = JSON.parse(message);\n          this.handleMessage(ws, data);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n          ws.send(JSON.stringify({ \n            type: 'error', \n            message: 'Invalid message format' \n          }));\n        }\n      });\n\n      ws.on('close', () => {\n        console.log('Cricket WebSocket client disconnected');\n        this.cleanupClientSubscriptions(ws);\n      });\n\n      ws.on('error', (error) => {\n        console.error('Cricket WebSocket error:', error);\n        this.cleanupClientSubscriptions(ws);\n      });\n\n      // Send initial connection confirmation\n      ws.send(JSON.stringify({\n        type: 'connection',\n        status: 'connected',\n        timestamp: new Date().toISOString()\n      }));\n    });\n  }\n\n  private handleMessage(ws: WebSocket, data: any): void {\n    switch (data.type) {\n      case 'subscribe':\n        if (data.matchId) {\n          this.subscribeToMatch(ws, data.matchId);\n          ws.send(JSON.stringify({\n            type: 'subscription',\n            matchId: data.matchId,\n            status: 'subscribed',\n            timestamp: new Date().toISOString()\n          }));\n        }\n        break;\n\n      case 'unsubscribe':\n        if (data.matchId) {\n          this.unsubscribeFromMatch(ws, data.matchId);\n          ws.send(JSON.stringify({\n            type: 'subscription',\n            matchId: data.matchId,\n            status: 'unsubscribed',\n            timestamp: new Date().toISOString()\n          }));\n        }\n        break;\n\n      case 'ping':\n        ws.send(JSON.stringify({\n          type: 'pong',\n          timestamp: new Date().toISOString()\n        }));\n        break;\n\n      default:\n        ws.send(JSON.stringify({\n          type: 'error',\n          message: 'Unknown message type'\n        }));\n    }\n  }\n\n  subscribeToMatch(ws: WebSocket, matchId: string): void {\n    // Add client to match subscription\n    if (!this.matchSubscriptions.has(matchId)) {\n      this.matchSubscriptions.set(matchId, new Set());\n    }\n    this.matchSubscriptions.get(matchId)!.add(ws);\n\n    // Track client's subscriptions\n    if (!this.clientSubscriptions.has(ws)) {\n      this.clientSubscriptions.set(ws, new Set());\n    }\n    this.clientSubscriptions.get(ws)!.add(matchId);\n\n    console.log(`Client subscribed to match ${matchId}. Total subscribers: ${this.matchSubscriptions.get(matchId)!.size}`);\n  }\n\n  unsubscribeFromMatch(ws: WebSocket, matchId: string): void {\n    // Remove client from match subscription\n    if (this.matchSubscriptions.has(matchId)) {\n      this.matchSubscriptions.get(matchId)!.delete(ws);\n      \n      // Clean up empty subscription sets\n      if (this.matchSubscriptions.get(matchId)!.size === 0) {\n        this.matchSubscriptions.delete(matchId);\n      }\n    }\n\n    // Remove from client's subscription tracking\n    if (this.clientSubscriptions.has(ws)) {\n      this.clientSubscriptions.get(ws)!.delete(matchId);\n    }\n\n    console.log(`Client unsubscribed from match ${matchId}`);\n  }\n\n  private cleanupClientSubscriptions(ws: WebSocket): void {\n    // Get all matches this client was subscribed to\n    const subscribedMatches = this.clientSubscriptions.get(ws);\n    \n    if (subscribedMatches) {\n      // Unsubscribe from all matches\n      subscribedMatches.forEach(matchId => {\n        this.unsubscribeFromMatch(ws, matchId);\n      });\n      \n      // Remove client tracking\n      this.clientSubscriptions.delete(ws);\n    }\n  }\n\n  broadcastMatchUpdate(matchId: string, data: LiveMatchData): void {\n    const subscribers = this.matchSubscriptions.get(matchId);\n    \n    if (!subscribers || subscribers.size === 0) {\n      return;\n    }\n\n    const message = JSON.stringify({\n      type: 'match_update',\n      data,\n      timestamp: new Date().toISOString()\n    });\n\n    const deadConnections: WebSocket[] = [];\n\n    subscribers.forEach(ws => {\n      try {\n        if (ws.readyState === WebSocket.OPEN) {\n          ws.send(message);\n        } else {\n          deadConnections.push(ws);\n        }\n      } catch (error) {\n        console.error('Error sending match update:', error);\n        deadConnections.push(ws);\n      }\n    });\n\n    // Clean up dead connections\n    deadConnections.forEach(ws => {\n      this.cleanupClientSubscriptions(ws);\n    });\n\n    console.log(`Broadcasted match update for ${matchId} to ${subscribers.size - deadConnections.length} clients`);\n  }\n\n  broadcastBallEvent(matchId: string, event: LiveBallEvent): void {\n    const subscribers = this.matchSubscriptions.get(matchId);\n    \n    if (!subscribers || subscribers.size === 0) {\n      return;\n    }\n\n    const message = JSON.stringify({\n      type: 'ball_event',\n      data: event,\n      timestamp: new Date().toISOString()\n    });\n\n    const deadConnections: WebSocket[] = [];\n\n    subscribers.forEach(ws => {\n      try {\n        if (ws.readyState === WebSocket.OPEN) {\n          ws.send(message);\n        } else {\n          deadConnections.push(ws);\n        }\n      } catch (error) {\n        console.error('Error sending ball event:', error);\n        deadConnections.push(ws);\n      }\n    });\n\n    // Clean up dead connections\n    deadConnections.forEach(ws => {\n      this.cleanupClientSubscriptions(ws);\n    });\n\n    console.log(`Broadcasted ball event for ${matchId} to ${subscribers.size - deadConnections.length} clients`);\n  }\n\n  getConnectedClients(matchId?: string): number {\n    if (matchId) {\n      return this.matchSubscriptions.get(matchId)?.size || 0;\n    }\n    \n    // Total unique clients across all matches\n    return this.clientSubscriptions.size;\n  }\n\n  // Health check method\n  getHealthStatus() {\n    return {\n      totalClients: this.clientSubscriptions.size,\n      activeMatches: Array.from(this.matchSubscriptions.keys()),\n      matchSubscriptions: Object.fromEntries(\n        Array.from(this.matchSubscriptions.entries()).map(([matchId, clients]) => \n          [matchId, clients.size]\n        )\n      )\n    };\n  }\n\n  // Admin method to broadcast system messages\n  broadcastSystemMessage(message: string, level: 'info' | 'warning' | 'error' = 'info'): void {\n    const systemMessage = JSON.stringify({\n      type: 'system_message',\n      level,\n      message,\n      timestamp: new Date().toISOString()\n    });\n\n    this.clientSubscriptions.forEach((_, ws) => {\n      try {\n        if (ws.readyState === WebSocket.OPEN) {\n          ws.send(systemMessage);\n        }\n      } catch (error) {\n        console.error('Error sending system message:', error);\n      }\n    });\n  }\n}","size_bytes":7518}}}